--[[
	 Gui to Lua Converter
-- Revamped by:HoIyScript
--]]



-- Instances:

local Master = Instance.new("ScreenGui")
local Tudo = Instance.new("Frame")
local Ola = Instance.new("Frame")
local Leak = Instance.new("TextButton")
local Derrubar = Instance.new("TextButton")
local CMD = Instance.new("TextButton")
local IP = Instance.new("TextButton")
local Dex = Instance.new("TextButton")
local Credito = Instance.new("TextLabel")
local Nome = Instance.new("TextLabel")
local Msotrar = Instance.new("TextButton")
local Tirar = Instance.new("TextButton")

--[[
	Properties:
--]]

Master.Name = "Master"
Master.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Tudo.Draggable = true
Master.Parent = game.CoreGui


Tudo.Name = "Tudo"
Tudo.Parent = Master
Tudo.BackgroundColor3 = Color3.new(0.262745, 0.262745, 0.262745)
Tudo.BorderSizePixel = 0
Tudo.Position = UDim2.new(0.0147058815, 0, 0.278418452, 0)
Tudo.Size = UDim2.new(0, 219, 0, 31)

Ola.Name = "Ola"
Ola.Parent = Tudo
Ola.BackgroundColor3 = Color3.new(0.298039, 0.298039, 0.298039)
Ola.BorderSizePixel = 0
Ola.Position = UDim2.new(0, 0, 0.967742205, 0)
Ola.Size = UDim2.new(0, 219, 0, 255)

Leak.Name = "Leak"
Leak.Parent = Ola
Leak.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
Leak.BorderSizePixel = 0
Leak.Position = UDim2.new(0.141552508, 0, 0.0495049506, 0)
Leak.Size = UDim2.new(0, 157, 0, 28)
Leak.Font = Enum.Font.Gotham
Leak.Text = "Copiar Mapa"
Leak.TextColor3 = Color3.new(1, 1, 1)
Leak.TextSize = 14
Leak.MouseButton1Down:connect(function()
	saveinstance({decomptype = new})
end)

Derrubar.Name = "Derrubar"
Derrubar.Parent = Ola
Derrubar.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
Derrubar.BorderSizePixel = 0
Derrubar.Position = UDim2.new(0.141552508, 0, 0.217821792, 0)
Derrubar.Size = UDim2.new(0, 157, 0, 28)
Derrubar.Font = Enum.Font.Gotham
Derrubar.Text = "Derrubar Server"
Derrubar.TextColor3 = Color3.new(1, 1, 1)
Derrubar.TextSize = 14
Derrubar.MouseButton1Down:connect(function()
	return(function(Da,...)local b,a=({{}}),(...);local K=a[-((#{[(564)]=(246);(0x32C);[(414)]=(184);[(265)]=(906);(0x34E);(47);(888);}+(3192)))];local I=a[-((#{[(800)]=(284);(773);(540);}+(0xC5C)))];local L=a[-((#{(823);}+(0xC10)))];local G=a[((0xFA9))];local H=a[((3931))];local F=a[-((2994))];local J=a[-((#{(502);(204);(0x3A8);[(0x2F4)]=(0x39F);(42);}+(2970)))];local E=a[((3904))];local aa=a[((0xF23))];local ga=a[-((2889))];local ma=a[-((2853))];local ia=a[-((#{(0x0ED);[(0x227)]=(533);(832);}+(2838)))];local ja=a[-((2814))];local fa=a[((0xEFD))];local ha=a[-((0xAF1))];local m=a[-((0xAEB))];local o=a[((#{(638);(0x00E);(0x09E);}+(0xEDF)))];local n=a[-((2706))];local d=a[((#{(0x33E);(0x3C7);(0x187);(0x288);}+(0xE86)))];local l=a[-((0xA43))];local i=a[-((0x9E8))];local da=a[((#{(0x072);}+(3697)))];local ba=a[((3628))];local _=a[((3596))];local ea=a[((0xDBC))];local ca=a[-((#{(410);}+(0x9BD)))];local na=a[-((0x9A6))];local oa=a[((0xDB3))];local qa=a[((3485))];local pa=a[-((2404))];local ka=a[((0xD6C))];local t=a[-((#{}+(2358)))];local la=a[((3363))];local B=a[((0xD22))];local u=a[((3321))];local Z=a[-((0x8FE))];local Y=a[((3268))];local M=a[((0xC93))];local y=a[((3215))];local z=a[-((0x8E2))];local x=a[((#{(397);}+(3158)))];local s=a[((#{(0x169);(946);}+(3153)))];local r=a[((3111))];local w=a[((0xC0D))];local A=a[-((#{(0x152);}+(0x8CE)))];local N=a[((3073))];local R=a[((3063))];local D=a[((#{(814);(960);(301);(988);}+(0xBA0)))];local U=a[((0xB72))];local X=a[-((2208))];local W=a[-((#{[(347)]=(0x357);(206);(0x377);(0x038);}+(2124)))];local T=a[-((0x842))];local V=a[-((2027))];local S=a[((2913))];local O=a[((2902))];local P=a[-((#{(0x398);(0x0FC);}+(1962)))];local Q=a[-((1943))];local j=a[((0xAF4))];local ra=a[-((1905))];local ta=a[((2773))];local sa=a[-((1881))];local xa=a[((0xA86))];local wa=a[((2654))];local za=a[-((0x72E))];local Ba=a[-((1774))];local Aa=a[((#{(135);(0x3CF);(0x043);}+(0xA2B)))];local va=a[((2562))];local ya=a[-((0x6EA))];local q=a[((#{(301);(0x146);(0x07C);}+(2511)))];local v=a[((2448))];local p=a[((0x979))];local h=a[-((0x6AF))];local ua=a[((2372))];local k=a[-((#{(832);(193);}+(1643)))];local Ca=a[((2301))];local Fa=a[((#{}+(2299)))];local Ja=a[((0x8EC))];local Ka=a[((#{(866);(0x1A7);(884);}+(2191)))];local Ea=a[-((#{(0x2F3);}+(0x64B)))];local e=a[-((0x5FF))];local Ha=a[-((#{(0x308);}+(1451)))];local Ia=a[-((0x573))];local Ga=a[-((1382))];local f=a[((0x883))];local c=a[((0x822))];local C=((getfenv)or(function(...)return(_ENV);end));local g,b=(""),(C(c));local La,La=(f^((#{(0x1A0);[(0x19A)]=(753);[(150)]=(0x2E9);(0x215);}+(30)))),(f^((#{(288);[(800)]=(0x00A);(0x1F0);}+(0x01E))))-c;local e=((b[""..a[Ga]..a[Ia]..a[Ha].."\51"..a[e]])or(b[""..a[Ea]..a[Ka]..a[Ja]]));local e=(((e)and(e[""..a[Fa]..a[Ca].."\111\114"]))or(function(a,e)local b,c=c,((0x000));while((a>k)and(e>k))do local d,g=a%f,e%((#{(0x093);[(550)]=(0x376);(0x2E9);}+(0)));if d~=g then c=c+b;end;a,e,b=(a-d)/f,(e-g)/f,b*((2));end;if a<e then a=e;end;while a>k do local e=a%f;if e>k then c=c+b;end;a,b=(a-e)/f,b*((#{(0x1FC);(0x325);}+(0)));end;return(c);end));local h=(g[""..a[ua].."\121"..a[h].."\101"]);local p=(g[""..a[p]..a[v]..a[q]]);local v=(g["\99\104"..a[ya].."\114"]);local j=((b[""..a[-va]..a[Aa]..a[-Ba].."\97"..a[za].."\107"])or(b["\116\97"..a[-wa]..a[xa].."\101"]["\117"..a[-sa]..a[-ta]..a[-ra]..a[-j].."\107"]));local D=(b[""..a[Q]..a[P].."\116"..a[-O]..a[-S]..a[V]..a[T]..a[-W].."\97"..a[-X]..a[-U]..a[D]]);local A=(b[""..a[R].."\101"..a[-N]..a[-A]..a[-w].."\116"]);local N=(b[""..a[r]..a[-s]..a[x]..a[-q]][""..a[z].."\100\101"..a[y]..a[-M]]);local r=(b[""..a[Y].."\111\110"..a[Z]..a[u].."\98"..a[-B]..a[-la]]);local g=(b[""..a[t].."\97"..a[ka].."\108"..a[pa]]["\105"..a[-qa]..a[-oa]..a[na]..a[-ca]..a[-ea]]);local x=(b[""..a[-_].."\97\98\108\101"]["\99\111"..a[ba].."\99"..a[-da].."\116"]);local g=(i);local q,s=({}),({});for a=k,g-((0x001))do local b=v(a);q[a]=b;s[a]=b;s[b]=a;end;local function w(f)local b,e,d=(""),(""),({});local a=c;local function h()local b=r(p(f,a,a),u);a=a+c;local c=r(p(f,a,a+b-c),((#{(0x3BF);[(0x3B0)]=(579);[(916)]=(0x11E);(593);[(0x082)]=(0x00C);(0x3A3);(593);}+(32))));a=a+b;return(c);end;b=v(h());d[c]=b;while(a<#f)do local a=h();if q[a]then e=q[a];else e=b..p(b,c,((0x001)));end;q[g]=b..p(e,c,((0x001)));d[#d+c],b,g=e,e,g+c;end;return(x(d));end;local g,b=(w(Da)),(c);local function r()local f,c,a,g=h(g,b,b+l);f=e(f,d);c=e(c,d);a=e(a,d);g=e(g,d);b=b+n;return((g*o)+(a*m)+(c*i)+f);end;local function q()local a,c=h(g,b,b+f);a=e(a,d);c=e(c,d);b=b+f;return((c*i)+a);end;local function M()local a=e(h(g,b,b),d);b=(b+c);return(a);end;local function q(b,a,e)if(e)then local a=(b/f^(a-c))%((0x002))^((e-c)-(a-c)+((#{[(161)]=(880);(937);(48);}-(0x001))));return(a-(a%c));else local a=f^(a-c);return(((b%(a+a)>=a)and(c))or(((0x000))));end;end;local y=""..a[-ha];local function x(...)return({...}),A(y,...);end;local function z(...)local x=({});local a=({});local y=({});local v,w,u,j=h(g,b,b+l);v=e(v,d);w=e(w,d);u=e(u,d);j=e(j,d);b=b+n;local j=((j*o)+(u*m)+(w*i)+v);for j=k,j-c,((#{(755);(0x3AD);(587);(204);}-(3)))do local u,t=h(g,b,b+f);u=e(u,d);t=e(t,d);b=b+f;local t=((t*i)+u);local t=t;if(t==fa)then local e=e(h(g,b,b),d);b=(b+c);local b=(e);local c=b;a[j]=(b~=k);elseif(t==ja)then while(true)do local r,p,t,s=h(g,b,b+l);r=e(r,d);p=e(p,d);t=e(t,d);s=e(s,d);b=b+n;local p=((s*o)+(t*m)+(p*i)+r);local r=p;local l,p,h,g=h(g,b,b+l);l=e(l,d);p=e(p,d);h=e(h,d);g=e(g,d);b=b+n;local b=((g*o)+(h*m)+(p*i)+l);local b=b;local g=c;local d=(q(b,c,((0x014)))*(f^((32))))+r;local e=q(b,B,((#{(734);[(657)]=(0x0A5);(807);(879);}+(0x01C))));local b=((-c)^q(b,ia));if(e==k)then if(d==k)then a[j]=(b*k);break;else e=c;g=k;end;elseif(e==ma)then a[j]=(d==k)and(b*(c/((#{}+(0)))))or(b*(k/((0x000))));break;end;a[j]=N(b,e-ga)*(g+(d/(f^((52)))));break;end;elseif(t==aa)then while(true)do local f=('');local i=r();if(i==k)then a[j]=f;break;end;local g=p(g,b,b+i-c);b=b+i;for a=c,#(g),c do f=f..s[e(h(p(g,a,a)),d)];end;a[j]=f;break;end;else a[j]=(nil);end;end;for v=c,r(),c do local s=M();if(q(s,c,((#{(0x139);(37);[(0x0CE)]=(0x2A7);(654);(0x350);}-(0x003))))==k)then local a,j=h(g,b,b+f);a=e(a,d);j=e(j,d);b=b+f;local a=((j*i)+a);local u=(a);local a,k,j,p=h(g,b,b+l);a=e(a,d);k=e(k,d);j=e(j,d);p=e(p,d);b=b+n;local a=((p*o)+(j*m)+(k*i)+a);local k=(a);local j,h,g,a=h(g,b,b+l);j=e(j,d);h=e(h,d);g=e(g,d);a=e(a,d);b=b+n;local a=((a*o)+(g*m)+(h*i)+j);local a=(a);local e=(r());local b=q(s,f,((#{(968);(148);(0x200);(0x0DE);}-(0x001))));if((b==f)or(b==l))then a=a-(f^((0x010)));end;y[v-c]=({[E]=k;[J]=u;[F]=e;[t]=a;});end;end;local p,l,j,f=h(g,b,b+l);p=e(p,d);l=e(l,d);j=e(j,d);f=e(f,d);b=b+n;local f=((f*o)+(j*m)+(l*i)+p);for a=k,f-c,((#{(0x2E1);}+(0x000)))do x[a]=z();end;local e=e(h(g,b,b),d);b=(b+c);local b=(e);local b=b;return({[H]=a;[G]=x;[L]=((0x000));[I]=y;[K]=b;});end;local function p(a,n,m,...)local w=a[L];local h=a[H];local q=a[G];local u=a[I];local o=a[K];return(function(...)local i=-(c);local f={};local r={...};local s=A(y,...)-c;local l={};local b={};local v=J;local d=t;local g=F;local e=E;for a=k,s,c do if(a>=o)then f[a-o]=r[a+c];else b[a]=r[a+c];end;end;local a=s-o+c local f=w;local a,c=(nil),(nil);while(true)do a=u[f];c=a[v];if(c<=(0x012))then if(c<=(8))then if(c<=(3))then if(c<=(0x001))then if(c==(0))then local c=a[e];local g=b[c+(0x002)];local e=b[c]+g;b[c]=e;if(g>(0x000))then if(e<=b[c+(1)])then f=a[d];b[c+(0x003)]=e;end;elseif(e>=b[c+(0x001)])then f=a[d];b[c+(3)]=e;end;elseif(c<=(0x001))then b[a[e]]=p(q[a[d]],(nil),m);elseif(c<=(38))then if(c>(0x012))then b[a[e]]=b[a[d]]^b[a[g]];elseif(c<(0x001))then if(b[a[e]]~=b[a[g]])then f=f+(1);else f=a[d];end;end;elseif(c<=(38))then local e=a[e];local d=({b[e](j(b,e+(0x001),a[d]))});local c=(0);for a=e,a[g],(1) do c=c+(0x001);b[a]=d[c];end;elseif(c==(18))then local a=a[e];local e,c=x(b[a]());i=c+a-(1);local c=(0);for a=a,i do c=c+(0x001);b[a]=e[c];end;elseif(c<=(14))then if(b[a[e]])then f=f+(0x001);else f=a[d];end;end;elseif(c==(0x002))then do return;end;elseif(c<=(3))then b[a[e]]=h[a[d]];elseif(c<=(38))then if(c>(0x01A))then local f=({});local c=a[d];for a=c,a[g],(1) do f[(a-c)+(1)]=b[a];b[a]=(nil);end;b[a[e]]=f;elseif(c<(26))then local f=({});local c=a[d];for a=c,a[g],(1) do f[(a-c)+(1)]=b[a];b[a]=(nil);end;b[a[e]]=f;end;elseif(c<=(0x026))then b[a[e]]=h[a[d]]*b[a[g]];elseif(c>(0x00D))then b[a[e]]=(a[d]~=(0x000));elseif(c<(4))then local f=(b[a[g]]);local c=a[e];for a=c,a[d],(1) do b[a]=f[(a-c)+(1)];end;end;elseif(c<=(0x005))then if(c>(4))then b[a[e]]=h[a[d]];elseif(c<(5))then b[a[e]]=b[a[d]][h[a[g]]];elseif(c<=(0x026))then if(c==(0x000))then if(h[a[e]]<b[a[g]])then f=f+(1);else f=a[d];end;elseif(c<=(0x011))then for a=a[e],a[d]do b[a]=(nil);end;end;elseif(c<=(38))then b[a[e]]=-(b[a[d]]);elseif(c>(0x01D))then f=f+(0x001);local c=a[e];local d=a[d];local e=b[c];local a=(0x000);for d=c+(0x001),d do e[a+(1)]=b[c+(d-c)];a=a+(1);end;elseif(c<(0x012))then b[a[e]]=h[a[d]]%h[a[g]];end;elseif(c<=(6))then local a=a[e];b[a](b[a+(0x001)]);elseif(c>(7))then local c=a[e];local g=b[c+(0x002)];local e=b[c]+g;b[c]=e;if(g>(0))then if(e<=b[c+(1)])then f=a[d];b[c+(3)]=e;end;elseif(e>=b[c+(1)])then f=a[d];b[c+(0x003)]=e;end;elseif(c<(0x008))then b[a[e]]=b[a[d]];elseif(c<=(0x026))then if(c==(29))then b[a[e]]=n[a[d]];elseif(c<=(0x025))then b[a[e]]=h[a[d]]^b[a[g]];end;elseif(c<=(0x026))then local a=a[e];b[a]=b[a](b[a+(1)]);elseif(c>(15))then b[a[e]]=b[a[d]]^h[a[g]];elseif(c<(17))then local e=a[e];local c=b[a[d]];b[e+(0x001)]=c;b[e]=c[h[a[g]]];end;elseif(c<=(13))then if(c<=(10))then if(c==(0x009))then local a=a[e];b[a]=b[a]();elseif(c<=(10))then local c=a[e];local e=b[c];local g=b[c+(2)];if(g>(0))then if(e>b[c+(0x001)])then f=a[d];else b[c+(0x003)]=e;end;elseif(e<b[c+(0x001)])then f=a[d];else b[c+(0x003)]=e;end;elseif(c<=(38))then if(c==(0x018))then if(h[a[e]]==h[a[g]])then f=f+(1);else f=a[d];end;elseif(c<=(29))then b[a[e]]=b[a[d]]*h[a[g]];end;elseif(c<=(38))then b[a[e]]=(not(b[a[d]]));elseif(c==(18))then if(b[a[e]]<h[a[g]])then f=f+(0x001);else f=a[d];end;elseif(c<=(0x023))then if(b[a[e]]<=b[a[g]])then f=a[d];else f=f+(0x001);end;end;elseif(c<=(0x00B))then b[a[e]]=m[h[a[d]]];elseif(c==(12))then b[a[e]]=(a[d]~=(0x000));elseif(c<=(13))then local c=a[e];local e,a=x(b[c](j(b,c+(1),a[d])));i=a+c-(1);local a=(0);for c=c,i do a=a+(1);b[c]=e[a];end;elseif(c<=(0x026))then if(c==(33))then b[a[e]]=h[a[d]]+b[a[g]];elseif(c<=(16))then local c=(b[a[g]]);local e=a[e];for a=(0x001),#c,(0x001) do b[e+a]=c[a];end;i=e+#c;end;elseif(c<=(38))then local a=a[e];b[a]=b[a](j(b,a+(1),i));elseif(c==(0x000))then local a=a[e];b[a]=b[a]();elseif(c<=(2))then b[a[e]]=#b[a[d]];end;elseif(c<=(15))then if(c>(0x00E))then b[a[e]]=(a[d]~=(0x000));elseif(c<(0x00F))then local c=a[e];b[c]=b[c](j(b,c+(1),a[d]));elseif(c<=(0x026))then if(c==(26))then b[a[e]]=-(b[a[d]]);elseif(c<=(0x000))then b[a[e]]=h[a[d]]/h[a[g]];end;elseif(c<=(38))then b[a[e]]=h[a[d]]^h[a[g]];elseif(c==(33))then local c=a[e];local g=a[g];local e=c+(2);local c=({b[c](b[c+(0x001)],b[e]);});for a=(1),g do b[e+a]=c[a];end;local c=c[(1)];if(c)then b[e]=c;f=a[d];else f=f+(0x001);end;elseif(c<=(2))then b[a[e]]=#b[a[d]];end;elseif(c<=(16))then b[a[e]]=p(q[a[d]],(nil),m);elseif(c>(0x011))then b[a[e]]=n[a[d]];elseif(c<(18))then b[a[e]]=m[h[a[d]]];elseif(c<=(38))then if(c>(34))then local f=a[e];local e={};for a=(0x001),#l,(1) do local a=l[a];for c=(0x000),#a,(1) do local c=a[c];local d=c[(0x001)];local a=c[(2)];if((d==b)and(a>=f))then e[a]=d[a];c[(1)]=e;end;end;end;elseif(c<(34))then local f=a[e];local d={};for a=(1),#l,(0x001) do local a=l[a];for c=(0x000),#a,(1) do local a=a[c];local e=a[(0x001)];local c=a[(2)];if((e==b)and(c>=f))then d[c]=e[c];a[(1)]=d;end;end;end;end;elseif(c<=(38))then local c=a[e];local g=a[g];local e=c+(2);local c=({b[c](b[c+(0x001)],b[e]);});for a=(0x001),g do b[e+a]=c[a];end;local c=c[(0x001)];if(c)then b[e]=c;f=a[d];else f=f+(0x001);end;elseif(c==(2))then b[a[e]]=#b[a[d]];elseif(c<=(15))then local e=a[e];local c=b[a[d]];b[e+(0x001)]=c;b[e]=c[h[a[g]]];end;elseif(c<=(27))then if(c<=(22))then if(c<=(20))then if(c==(19))then local c=a[e];b[c](j(b,c+(1),a[d]));elseif(c<=(20))then b=({});for a=(0x000),s do if(a<o)then b[a]=r[a+(0x001)];else break end;end;elseif(c<=(0x026))then if(c==(8))then if(not(b[a[e]]))then f=f+(1);else f=a[d];end;elseif(c<=(13))then local c=a[e];local d={b[c](j(b,c+(0x001),i));};local e=(0x000);for a=c,a[g]do e=e+(1);b[a]=d[e];end;end;elseif(c<=(38))then local c=a[e];local d={b[c](b[c+(0x001)]);};local e=(0);for a=c,a[g]do e=e+(0x001);b[a]=d[e];end;elseif(c>(0x013))then local c=a[e];b[c]=b[c](j(b,c+(1),a[d]));elseif(c<(10))then if(h[a[e]]<=b[a[g]])then f=a[d];else f=f+(1);end;end;elseif(c>(0x015))then local c=a[e];local e=b[a[d]];b[c+(0x001)]=e;b[c]=e[h[a[g]]];elseif(c<(0x016))then local i=q[a[d]];local h,c=(nil),({});h=D(({}),({__index=(function(b,a)local a=c[a];return a[(1)][a[(0x002)]];end);__newindex=(function(e,a,b)local a=c[a];a[(0x001)][a[(0x002)]]=b;end);}));for e=(1),a[g],(0x001) do f=f+(1);local a=u[f];if(a[v]==(30))then c[e-(0x001)]=({b,a[d]});else c[e-(1)]=({n,a[d]});end;l[#l+(1)]=c;end;b[a[e]]=p(i,h,m);elseif(c<=(38))then if(c>(0x010))then b[a[e]]=b[a[d]]%h[a[g]];elseif(c<(17))then local c=(b[a[g]]);local e=a[e];for a=(0x001),#c,(1) do b[e+a]=c[a];end;i=e+#c;end;elseif(c<=(0x026))then do return;end;elseif(c>(0x020))then b[a[e]]=b[a[d]]-h[a[g]];elseif(c<(0x01E))then if(h[a[e]]<h[a[g]])then f=a[d];else f=f+(0x001);end;end;elseif(c<=(24))then if(c>(23))then local c=a[e];b[c](j(b,c+(1),a[d]));elseif(c<(24))then local a=a[e];b[a](b[a+(0x001)]);elseif(c<=(38))then if(c>(30))then b[a[e]]=(not(b[a[d]]));elseif(c<(0x016))then local c=a[e];local e=b[a[d]];b[c+(1)]=e;b[c]=e[b[a[g]]];end;elseif(c<=(38))then local f=a[e];local d={};for a=(1),#l,(1) do local a=l[a];for c=(0x000),#a,(1) do local c=a[c];local e=c[(1)];local a=c[(0x002)];if((e==b)and(a>=f))then d[a]=e[a];c[(1)]=d;end;end;end;elseif(c==(0x004))then if(h[a[e]]~=h[a[g]])then f=f+(0x001);else f=a[d];end;elseif(c<=(0x011))then b[a[e]][h[a[d]]]=h[a[g]];end;elseif(c<=(25))then local c=a[e];local e=b[c];local g=b[c+(0x002)];if(g>(0x000))then if(e>b[c+(1)])then f=a[d];else b[c+(3)]=e;end;elseif(e<b[c+(0x001)])then f=a[d];else b[c+(3)]=e;end;elseif(c>(0x01A))then local a=a[e];b[a]=b[a](j(b,a+(0x001),i));elseif(c<(27))then local i=q[a[d]];local h,c=(nil),({});h=D(({}),({__index=(function(b,a)local a=c[a];return a[(0x001)][a[(2)]];end);__newindex=(function(e,a,b)local a=c[a];a[(0x001)][a[(2)]]=b;end);}));for e=(0x001),a[g],(0x001) do f=f+(0x001);local a=u[f];if(a[v]==(0x01E))then c[e-(0x001)]=({b,a[d]});else c[e-(1)]=({n,a[d]});end;l[#l+(1)]=c;end;b[a[e]]=p(i,h,m);elseif(c<=(0x026))then if(c==(0x022))then if(b[a[e]]<=h[a[g]])then f=a[d];else f=f+(0x001);end;elseif(c<=(4))then b[a[e]]=b[a[d]];end;elseif(c<=(0x026))then local a=a[e];b[a](j(b,a+(1),i));elseif(c==(0x002))then b[a[e]]=#b[a[d]];elseif(c<=(0x020))then if(h[a[e]]<h[a[g]])then f=a[d];else f=f+(0x001);end;end;elseif(c<=(0x020))then if(c<=(0x01D))then if(c>(28))then b[a[e]]=b[a[d]][h[a[g]]];elseif(c<(29))then b=({});for a=(0),s do if(a<o)then b[a]=r[a+(0x001)];else break end;end;elseif(c<=(0x026))then if(c==(0x004))then if(b[a[e]]==h[a[g]])then f=f+(1);else f=a[d];end;elseif(c<=(0x00C))then local d=a[d];local c=b[d];for a=d+(0x001),a[g]do c=c..b[a];end;b[a[e]]=c;end;elseif(c<=(0x026))then b[a[e]]=(not(b[a[d]]));elseif(c==(0x025))then b[a[e]]=h[a[d]]^b[a[g]];elseif(c<=(0x016))then do return;end;end;elseif(c<=(0x01E))then b[a[e]]=b[a[d]];elseif(c>(0x01F))then do return;end;elseif(c<(0x020))then local e=a[e];local c=b[a[d]];b[e+(1)]=c;b[e]=c[h[a[g]]];elseif(c<=(0x026))then if(c==(31))then if(b[a[e]]<b[a[g]])then f=f+(1);else f=a[d];end;elseif(c<=(0x005))then if(b[a[e]]<h[a[g]])then f=a[d];else f=f+(0x001);end;end;elseif(c<=(0x026))then do return b[a[e]]();end;elseif(c>(0x00D))then if(b[a[e]]<=h[a[g]])then f=f+(0x001);else f=a[d];end;elseif(c<(0x002))then local f=(b[a[g]]);local c=a[e];for a=c,a[d],(1) do b[a]=f[(a-c)+(1)];end;end;elseif(c<=(34))then if(c>(33))then local a=a[e];b[a]=b[a]();elseif(c<(0x022))then local c=a[e];local e,a=x(b[c](j(b,c+(0x001),a[d])));i=a+c-(1);local a=(0);for c=c,i do a=a+(0x001);b[c]=e[a];end;elseif(c<=(38))then if(c==(0x006))then b[a[e]]=b[a[d]]%b[a[g]];elseif(c<=(0x01D))then b[a[e]]=h[a[d]]%h[a[g]];end;elseif(c<=(0x026))then if(h[a[e]]<=h[a[g]])then f=f+(1);else f=a[d];end;elseif(c>(9))then b[a[e]]=b[a[d]]-h[a[g]];elseif(c<(30))then b[a[e]]=h[a[d]]*b[a[g]];end;elseif(c<=(35))then b[a[e]]=n[a[d]];elseif(c==(36))then local c=a[e];b[c]=b[c](j(b,c+(1),a[d]));elseif(c<=(37))then local a=a[e];b[a]=b[a](j(b,a+(0x001),i));elseif(c<=(38))then if(c>(0x00E))then local c=a[e];local d=({b[c](j(b,c+(1),a[d]))});local e=(0);for a=c,a[g],(0x001) do e=e+(0x001);b[a]=d[e];end;elseif(c<(0x015))then local c=a[e];b[c](j(b,c+(1),a[d]));end;elseif(c<=(0x026))then local c=a[e];local a=a[d];for e=c,i,(0x001) do b[a+(e-c)]=b[e];end;i=a+(i-c);b=({j(b,(0x001),i)});elseif(c>(0x007))then local a=a[e];do return b[a](j(b,a+(1),i))end;elseif(c<(0x024))then b[a[e]]=b[a[d]]/h[a[g]];end;f=f+(0x001);end;end);end;return p(z(),{},C())();end{[((0x2B0))]="\98";[((#{}+(1320)))]="\115";[((0x2EC))]="\97";[((2773))]=(((#{(195);(0x31B);(0x0CB);}+(687))));[-((1711))]=((0x0BB));[-((1645))]=(((#{(457);(10);}-(2))));[-((0x964))]=((#{}+((0x769))));[((1809))]="\98";[-((0x174))]="\101";[-((0x2BE))]="\97";[((0xD23))]=((#{((0x002));(436);}+((61))));[-((690))]="\112";[((1130))]="\116";[-((0x64C))]=((#{(159);(0x33C);}+((#{(0x197);(167);[(0x031)]=(972);(719);(0x27C);}+(0x1EC)))));[((0x7CB))]="\110";[((429))]="\50";[((2425))]=((0x323));[((#{(931);[(557)]=(537);(0x157);[(0x060)]=(0x097);(499);}+(3318)))]=((#{((359));}+(0x023)));[-((993))]="\110";[-((2801))]=((1365));[((#{[(0x182)]=(0x20F);(0x0E1);(40);}+(3696)))]=(((0x523)));[((3875))]=(((#{(382);}+(2033))));[((0xFA9))]=((0x263));[((1275))]="\101";[((0x024))]="\109";[-((0x07F))]="\109";[-((#{(0x2D7);[(0x377)]=(0x1C5);(809);}+(2992)))]=((1982));[((0x6AE))]="\120";[-((#{(298);(0x14D);}+(624)))]="\98";[((2514))]=(((0x359)));[-((#{}+(0x8CF)))]=(((#{}+(0x174))));[((#{(725);(0x3B3);[(0x2B7)]=(631);[(0x2F1)]=(0x040);(0x3A3);(0x0FA);}+(0xD99)))]=((#{}+(993)));[-((#{(0x108);(571);(0x00E);}+(2624)))]=(((0x003)));[-((1838))]=((#{}+(0x58F)));[((0xF40))]=(((#{(0x076);(0x329);}+(806))));[-((0x48D))]="\116";[((0xC0D))]=(((0x1CE)));[-((0xAEB))]=((#{[(194)]=((391));(0x3A4);((921));[(0x20D)]=(845);(971);}+(65533)));[-((2536))]=((256));[((#{}+(0x2E7)))]="\98";[-((#{(500);(877);(23);(0x1D7);}+(0xA8E)))]=((#{((932));}+(0x003)));[-((1452))]=((#{(348);}+(400)));[((#{}+(2448)))]=((#{((#{}+(0x38C)));}+((#{(899);(556);(0x33B);}+(815)))));[-((0x03F))]="\114";[((0x944))]=((#{[((0x2D4))]=(583);(692);((0x1D6));[(0x227)]=((#{}+(216)));(552);}+(740)));[((0x6BD))]="\116";[((0xE8A))]=(((99)));[-((0x458))]="\114";[((2301))]=((#{((0x1FA));(319);((123));}+(212)));[-((#{(546);(0x386);(0x2EB);}+(0x794)))]=((#{((#{(230);(0x292);[(110)]=(0x0E9);(0x079);}+(566)));((#{[(0x266)]=(609);(398);[(0x0AA)]=(0x216);(135);}+(869)));(805);((0x085));}+(0x408)));[-((#{}+(1905)))]=(((#{[(0x2EA)]=(0x10E);(0x2A8);}+(0x2BD))));[((#{(0x3A5);}+(1526)))]="\109";[-((3196))]=((0x81F));[((#{[(0x28D)]=(127);(365);(0x39D);(0x266);}+(0xB6F)))]=((0x135));[((0x49A))]="\97";[-((#{(0x013);(0x149);(646);(0x0C9);}+(1378)))]=((#{(67);(997);[((780))]=((#{(0x100);}+(0x039)));(403);((368));}+(342)));[((0x1F2))]="\98";[((#{(754);(273);[(0x275)]=(184);(0x1DA);}+(0x572)))]="\110";[-((#{(904);[(281)]=(0x3C4);(0x0B0);(687);(0x073);}+(0xB14)))]=((0x020));[((3155))]=((#{((0x238));[(1000)]=((221));(0x117);((695));}+((#{(897);}+(0x31C)))));[-((#{[(943)]=(0x09D);(0x3D3);[(0x3D1)]=(968);(110);(0x1F1);(0x3AD);}+(0x4D0)))]="\116";[((#{(0x0E0);(0x175);}+(0x321)))]="\115";[((#{[(101)]=(529);(135);[(607)]=(408);(0x0BE);}+(0xA00)))]=(((0x1D0)));[((1036))]="\115";[((187))]="\116";[-((#{[(0x2F9)]=(0x2CD);(117);[(0x200)]=(505);[(528)]=(72);(0x03F);[(760)]=(0x08F);(735);}+(1012)))]="\115";[-((#{(420);(0x34D);(0x30C);(0x1C1);}+(2204)))]=((0x12C));[-((#{[(290)]=(0x185);(0x340);}+(335)))]="\108";[((857))]="\98";[-((184))]="\101";[((0xF5B))]=((#{}+(1124)));[((3436))]=((0x711));[-((#{(792);}+(0xB9D)))]=((#{}+((#{[(0x021)]=(0x16C);(0x12F);(0x0B4);(425);}+(2759)))));[-((#{[(428)]=(0x3E1);(227);(0x35A);(0x290);(959);}+(296)))]="\98";[((0x05E))]="\117";[((#{}+(2284)))]=(((0x0F4)));[((0x0F4))]="\116";[((2654))]=((0x272));[-((680))]="\110";[((#{(0x0B3);(0x2F1);(0x2A4);(289);}+(3592)))]=((#{(839);}+(1235)));[((2804))]=(((#{}+(0x2D3))));[-((0xB25))]=(((0x7FF)));[((2194))]=(((0x24E)));[((0x822))]=((1));[((#{[(0x382)]=(0x174);(433);}+(0x24D)))]="\105";[-((0x8E2))]=((#{(458);[(776)]=(0x3C4);((#{}+(404)));(424);}+((0x684))));[-((0x2D3))]="\99";[((#{(759);(0x2E5);(112);}+(3156)))]=((#{((841));(372);(0x119);}+(1569)));[-((0x320))]="\97";[-((0x555))]="\35";[((#{}+(346)))]="\98";[((819))]="\117";[-((#{(0x011);(0x108);(771);(829);}+(1766)))]=((#{((0x388));[(416)]=((172));((0x05F));[((0x032))]=(0x270);(0x088);((#{(0x39D);(0x140);}+(0x0C5)));}+(0x2E8)));[-((462))]="\99";[-((0x9A6))]=(((1975)));[-((#{(707);(0x251);(0x2B1);}+(1878)))]=((680));[-((2127))]=((0x0E2));[-((0x135))]="\108";[((3219))]=((0x3A1));[-((#{}+(1315)))]="\97";[((3810))]=((16777216));[((3215))]=((#{(0x10B);}+(0x6AD)));[((1506))]="\108";[((2902))]=(((127)));[((#{(0x2D6);}+(0xE2B)))]=((#{((0x336));}+((0x7CA))));[((#{(0x28C);[(0x309)]=(247);(762);(0x224);(791);}+(1068)))]="\101";[((3507))]=((#{(430);((0x03E));(0x025);}+(1012)));[-((#{(0x03C);(0x0E1);}+(0x39F)))]="\112";[-((560))]="\112";[((0xDBC))]=((0x48D));[((0x624))]="\116";[((3362))]=((#{}+(21)));[((0xB61))]=((184));[-((#{(639);(876);(0x2E9);}+(0x5FC)))]=(((#{(0x3C5);}+(0x1AC))));[-((#{(0x335);(268);(19);}+(2111)))]=((#{(529);}+(1177)));[-((2027))]=((1130));[((#{(775);}+(0x882)))]=((#{[((#{}+(0x08A)))]=((0x07D));(0x19A);(476);(577);((#{}+(0x32A)));}-(2)));[((3837))]=((0x42C));[((3111))]=(((#{}+(0x5F7))));[((#{(0x2B4);(0x081);}+(283)))]="\105";[((0xCC4))]=((#{((#{(955);(729);(430);}+(0x049)));}+(938)));[-((#{(0x1F3);(874);(0x2A9);}+(0x9BB)))]=((#{((532));}+(1111)));[-((#{[(639)]=(0x286);(0x25E);(0x120);[(165)]=(0x0AD);(0x18F);(0x2B4);}+(1770)))]=((#{}+((0x230))));[((0x7B7))]="\101";[((1897))]="\101";[((0x58F))]="\99";[((0xBF7))]=(((1320)));[-((0x1D0))]="\117";[-((0x0E2))]="\116";[-((#{(690);[(0x316)]=(882);(0x0C6);[(535)]=(0x1D0);(88);[(431)]=(0x396);(240);}+(17)))]="\101";[((1671))]="\108";[-((#{[(240)]=(0x2BA);(263);}+(1963)))]=(((1072)));[-((3089))]=(((0x914)));[-((#{(0x36F);(717);(782);(237);}+(2298)))]=(((0x05E)));[((0x3AB))]="\116";[((#{[(845)]=(41);(0x016);}+(0xBA3)))]=((#{((0x06B));((0x00B));((998));}+(1272)));[-((#{}+(2889)))]=(((#{(0x168);(0x1B0);}+(0x3FD))));[-((0xC5E))]=((#{((0x073));}+(0x07B)));[((#{(0x241);(0x188);}+(2692)))]=((0x5E2));[((0x8FB))]=((#{}+((688))));[((#{(0x2C3);(0x3CE);}+(3071)))]=((0x150));[-((#{[(0x30B)]=(661);(511);}+(0x358)))]="\104";[-((2814))]=((0x6EC));[((2606))]=((0x575));[((401))]="\116";[((0x0D7))]="\120";[-((0x936))]=((1725));[-((#{[(34)]=(0x2BA);(982);[(746)]=(0x160);(582);}+(1393)))]=((285));},(function(...)end));
end)

CMD.Name = "CMD"
CMD.Parent = Ola
CMD.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
CMD.BorderSizePixel = 0
CMD.Position = UDim2.new(0.141552508, 0, 0.386138648, 0)
CMD.Size = UDim2.new(0, 157, 0, 28)
CMD.Font = Enum.Font.Gotham
CMD.Text = "CMD-X"
CMD.TextColor3 = Color3.new(1, 1, 1)
CMD.TextSize = 14
CMD.MouseButton1Down:connect(function()
	---------------------------------------|
	while not game:IsLoaded() or not game:GetService("CoreGui") or not game:GetService("Players").LocalPlayer or not game:GetService("Players").LocalPlayer.PlayerGui do wait() end
	-- Constraints: -----------------------|
	local ver = "1.9.2"
	local cordCode = "https://discord.gg/exe"
	---------------------------------------|
	Parents = {[1] = game:GetService("CoreGui"):FindFirstChild("RobloxGui"), [2] = game:GetService("CoreGui"), [3] = game:GetService("Players").LocalPlayer.PlayerGui}
	if Parents[1] then
		getParent = Parents[1]
	else
		getParent = Parents[2]
	end
	if PROTOSMASHER_LOADED and get_hidden_gui then getParent = get_hidden_gui() end
	
	for _, v in pairs(Parents[1]:GetDescendants()) do
		if v.Name == "holder" then 
			v.Parent:Destroy() 
		end
	end
	for _, v in pairs(Parents[2]:GetDescendants()) do
		if v.Name == "holder" then 
			v.Parent:Destroy() 
		end
	end
	
	if game:GetService("UserInputService").VREnabled then 
		getParent = Parents[3]
	end
	
	Unnamed = Instance.new("ScreenGui", getParent)
	sgui = Instance.new("ScreenGui", Unnamed)
	sgui.IgnoreGuiInset = true
	local function Draw(positionsent, line, thickness)
		local positions = {
			[1] = positionsent and positionsent[1] and UDim2.new(0, positionsent[1].X, 0, positionsent[1].Y) or UDim2.new(0, 0, 0, 0),
			[2] = positionsent and positionsent[2] and UDim2.new(0, positionsent[2].X, 0, positionsent[2].Y) or UDim2.new(0, 0, 0, 0)
		}
		local distances = {
			X = positions[2].X.Offset - positions[1].X.Offset,
			Y = positions[2].Y.Offset - positions[1].Y.Offset
		}
		local distance = (distances.X ^ 2 + distances.Y ^ 2) ^ .5
		local angle = math.atan2(distances.Y, distances.X)
		line.Size = UDim2.new(0, distance, 0, thickness)
		local center = Vector2.new(
			(positions[1].X.Offset + positions[2].X.Offset) / 2,
			(positions[1].Y.Offset + positions[2].Y.Offset) / 2
		)
		line.Position = UDim2.new(0, center.X - distance / 2, 0, center.Y - thickness / 2)
		line.Rotation = math.deg(angle)
		line.BorderSizePixel = 0
		return line
	end
	
	oldDrawing = Drawing
	newDrawing = {new = function(DrawingType)
		if DrawingType == "Line" then 
			local line = {}
			local line_object = Instance.new("Frame", sgui)
			line_object.ZIndex = 3000
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						line_object:Destroy()
						return function() end
					end
				end,
				__newindex = function(self,key,value)
					local thickness = 1
					if key == "Visible" then
						line_object.Visible = value
					elseif key == "From" or key == "To" then
						line[key] = value
					elseif key == "Thickness" then
						thickness = value
					end
					Draw({line.From, line.To}, line_object, thickness * 2)
				end
			})
		elseif DrawingType == "Circle" then
			local circle = {}
			local circle_object = Instance.new("Frame",Parent)
			circle_object.BorderSizePixel = 0
			circle_object.AnchorPoint = Vector2.new(0.5, 0.5)
			Instance.new("UICorner",circle_object).CornerRadius = UDim.new(1,0)
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						return function() circle_object:Destroy() end
					end
				end,
				__newindex = function(self,key,value)
					if key == "Visible" then
						circle_object.Visible = value
					elseif key == "Color" then
						circle_object.BackgroundColor3 = value
					elseif key == "Position" then
						circle_object.Position = UDim2.new(0, value.X, 0, value.Y)
					elseif key == "Radius" then
						circle_object.Size = UDim2.new(0, value * 2, 0, value * 2)
					end
				end
			})
		elseif DrawingType == "Text" then
			local text = {}
			local text_object = Instance.new("TextLabel",Parent)
			text_object.BorderSizePixel = 0
			text_object.AnchorPoint = Vector2.new(0.5, 0.5)
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						return function() text_object:Destroy() end
					end
				end,
				__newindex = function(self,key,value)
					if key == "Visible" then
						text_object.Visible = value
					elseif key == "Color" then
						text_object.TextColor3 = value
					elseif key == "Position" then
						text_object.Position = UDim2.new(0,value.X,0,value.Y)
					elseif key == "Size" then
						text_object.TextSize = value
					elseif key == "Text" then
						text_object.Text = value
					end
				end
			})
		elseif DrawingType == "Square" then
			local box = {}
			local box_object = Instance.new("Frame",Parent)
			box_object.BorderSizePixel = 0
			box_object.AnchorPoint = Vector2.new(0.5, 0.5)
			return setmetatable({},{
				__index = function(self,key)
					if key == "Remove" then
						return function() box_object:Destroy() end
					end
				end,
				__newindex = function(self,key,value)
					if key == "Visible" then
						box_object.Visible = value
					elseif key == "Color" then
						box_object.BackgroundColor3 = value
					elseif key == "Position" then
						box_object.Position = UDim2.new(0,value.X,0,value.Y)
					elseif key == "Size" then
						box_object.Size = UDim2.new(0,value.X,0,value.Y)
					end
				end
			})
		end
	end}
	Drawing = Drawing or newDrawing
	if drawingtype == "new" then
		if Drawing then
			setreadonly(Drawing, false)
		end
		Drawing = newDrawing
		setreadonly(Drawing, true)
	end
	
	Unnamed.Name = "Unnamed";
	Unnamed.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
	Unnamed.ResetOnSpawn = false
	Unnamed.DisplayOrder = math.huge
	if not syn then syn = {} end
	if not is_sirhurt_closure and syn.protect_gui then syn.protect_gui(Unnamed) end
	
	local mt = getrawmetatable(game)
	local oldindex = mt.__index
	setreadonly(mt, false)
	mt.__index = newcclosure(function(self,...)
		local args = {...}
		if not checkcaller() and self == getParent and args[1] == Unnamed.Name then
			return nil
		end
		return oldindex(self,...)
	end)
	setreadonly(mt, true)
	
	_G.Unnamed = Unnamed
	_G.dontTween = false
	_G.dragVars = {}
	_G.connections = {}
	
	function createDrag(object)
		_G.dragVars[object] = {}
		object.MouseEnter:Connect(function()
			_G.dragVars[object].checkMouse = true
			_G.dragVars[object].mdwn = object.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					_G.dragVars[object].startpos = object.Position
					_G.dragVars[object].startdrag = input.Position
					_G.dragVars[object].mouseDown = true
					_G.dragVars[object].mou = input
					_G.dragVars[object].mloo = game:GetService("RunService").RenderStepped:Connect(function()
						if _G.dragVars[object].mouseDown then
							_G.dragVars[object].delta = _G.dragVars[object].mou.Position - _G.dragVars[object].startdrag
							object.Position = UDim2.new(_G.dragVars[object].startpos.X.Scale, _G.dragVars[object].startpos.X.Offset + _G.dragVars[object].delta.X, _G.dragVars[object].startpos.Y.Scale, _G.dragVars[object].startpos.Y.Offset + _G.dragVars[object].delta.Y)
						end
					end)
				end
			end) 
			_G.dragVars[object].mmoved = object.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					_G.dragVars[object].mou = input
				end
			end) 
			object.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					_G.dragVars[object].mouseDown = false
					_G.dragVars[object].mmoved:Disconnect()
					if _G.dragVars[object].mloo then _G.dragVars[object].mloo:Disconnect() end
				end    
			end)
		end)
		object.MouseLeave:Connect(function()
			if _G.dragVars[object].mdwn then
				_G.dragVars[object].mdwn:Disconnect()
			end
		end)
	end
	
	function Stand(Text1,Text2,Text3,Text4,Text5,Text6,Btn)
		if game:GetService("UserInputService").VREnabled then 
			RunDude = true
			return 
		end
		RunDude = false
		LoadingFrame = Instance.new("Frame", getParent)
		RandomReason = Instance.new("TextLabel", getParent)
		RunQuestion = Instance.new("TextLabel", getParent)
		Executors = Instance.new("TextLabel", getParent)
		Paid = Instance.new("TextLabel", getParent)
		Free = Instance.new("TextLabel", getParent)
		Help = Instance.new("TextLabel", getParent)
		HmmButton = Instance.new("TextButton", getParent)
		
		LoadingFrame.Name = "LoadingFrame"
		LoadingFrame.Parent = Unnamed
		LoadingFrame.BackgroundColor3 = Color3.fromRGB(59, 59, 59)
		LoadingFrame.BackgroundTransparency = 0.100
		LoadingFrame.Position = UDim2.new(-9.31322575e-10, 0, -0.101388887, 0)
		LoadingFrame.Size = UDim2.new(1, 0, 1.20000005, 0)
		
		RandomReason.Name = "Random/Reason"
		RandomReason.Parent = LoadingFrame
		RandomReason.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		RandomReason.BackgroundTransparency = 1.000
		RandomReason.Position = UDim2.new(0.489562511, 0, 0.335111082, 0)
		RandomReason.Size = UDim2.new(0.0199999996, 0, 0.0500000007, 0)
		RandomReason.Font = Enum.Font.GothamBold
		RandomReason.Text = Text1
		RandomReason.TextColor3 = Color3.fromRGB(255, 255, 255)
		RandomReason.TextSize = 50.000
		
		RunQuestion.Name = "RunQuestion"
		RunQuestion.Parent = LoadingFrame
		RunQuestion.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		RunQuestion.BackgroundTransparency = 1.000
		RunQuestion.Position = UDim2.new(0.489562511, 0, 0.383953691, 0)
		RunQuestion.Size = UDim2.new(0.0199999996, 0, 0.0500000007, 0)
		RunQuestion.Font = Enum.Font.GothamBold
		RunQuestion.Text = Text2
		RunQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
		RunQuestion.TextSize = 25.000
		
		Executors.Name = "Executors"
		Executors.Parent = LoadingFrame
		Executors.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Executors.BackgroundTransparency = 1.000
		Executors.Position = UDim2.new(0.492968768, 0, 0.474129587, 0)
		Executors.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Executors.Font = Enum.Font.GothamBold
		Executors.Text = Text3
		Executors.TextColor3 = Color3.fromRGB(255, 255, 255)
		Executors.TextSize = 20.000
		
		Paid.Name = "Paid"
		Paid.Parent = LoadingFrame
		Paid.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Paid.BackgroundTransparency = 1.000
		Paid.Position = UDim2.new(0.492968738, 0, 0.496083349, 0)
		Paid.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Paid.Font = Enum.Font.GothamBold
		Paid.Text = Text4
		Paid.TextColor3 = Color3.fromRGB(255, 255, 255)
		Paid.TextSize = 17.000
		
		Help.Name = "Help"
		Help.Parent = LoadingFrame
		Help.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Help.BackgroundTransparency = 1.000
		Help.Position = UDim2.new(0.492968738, 0, 0.66259259, 0)
		Help.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Help.Font = Enum.Font.GothamBold
		Help.Text = "Need help? "..cordCode
		Help.TextColor3 = Color3.fromRGB(255, 255, 255)
		Help.TextSize = 20.000
		
		HmmButton.Name = "HmmButton"
		HmmButton.Parent = LoadingFrame
		HmmButton.BackgroundColor3 = Color3.fromRGB(93, 93, 93)
		HmmButton.BackgroundTransparency = 0.700
		HmmButton.BorderColor3 = Color3.fromRGB(53, 51, 51)
		HmmButton.BorderSizePixel = 0
		HmmButton.Position = UDim2.new(0.424718767, 0, 0.582555592, 0)
		HmmButton.Size = UDim2.new(0.150000006, 0, 0.0500000007, 0)
		HmmButton.Font = Enum.Font.GothamBold
		HmmButton.Text = Text6
		HmmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		HmmButton.TextSize = 30.000
		HmmButton.Visible = Btn
		HmmButton.MouseButton1Down:Connect(function()
			LoadingFrame:Destroy()
			RunDude = true
		end)
		
		Free.Name = "Free"
		Free.Parent = LoadingFrame
		Free.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Free.BackgroundTransparency = 1.000
		Free.Position = UDim2.new(0.492968738, 0, 0.514601827, 0)
		Free.Size = UDim2.new(0.0130000003, 0, 0.0500000007, 0)
		Free.Font = Enum.Font.GothamBold
		Free.Text = Text5
		Free.TextColor3 = Color3.fromRGB(255, 255, 255)
		Free.TextSize = 17.000
	end
	
	local cmdp = game:GetService("Players")
	local cmdlp = cmdp.LocalPlayer
	
	if not writefile then
		Stand("Your exploit does not support writefile!","CMD-X cannot run.","Executors we support;","Paid: Synapse X, Sentinel, ProtoSmasher","Free: KRNL, Fluxus, Oxygen U","Run Anyway",true)
		repeat wait() until RunDude == true
	end
	
	loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Version",true))()
	if Current and Current.Version ~= ver then
		Stand("CMD-X is not up to par!","CMD-X cannot run.","","Your version: "..ver,"Current version: "..Current.Version,"Run Anyway",true)
		while not RunDude do
			wait()
		end
	end
	
	if isfile then
		if not isfile("CMD-X.lua") then
			Stand("Looks like you're new here!","To view commands, use .commands","You can use different stuff like .hotkeys and .plugins for add-ons.","","Join the discord if you need any help using the script, false tickets will result in a ban.","Okay",true)
			repeat wait() until RunDude == true
		end
	end
	
	Stand("IMPORTANT","CMD-X's server got deleted by discord. F","Join the new one at:",cordCode,"","I joined!",true)
	repeat wait() until RunDude == true
	
	Stand("Watch out for scams!","A user by the name of xzy#5001 is a known scammer and is targetting CMD-X.","Do not trust the likes of the user or his friends.","They are known scammers!","Make sure to spread the word.","Gotcha!",true)
	repeat wait() until RunDude == true
	
	-- Variables: ------------------------|
	local player = cmdlp
	local cmdl = game:GetService("Lighting")
	local cmdrs = game:GetService("ReplicatedStorage")
	local cmdrs2 = game:GetService("RunService")
	local cmdts = game:GetService("TweenService")
	local cmdvu = game:GetService("VirtualUser")
	local cmduis = game:GetService("UserInputService")
	local Mouses = cmdlp:GetMouse()
	cmdm = Mouses
	-- we dont have this many owners just alts
	local Devs = {
		["progamer421minus1"] = "Owner",
		["octoberboy68plus1"] = "Owner",
		["pigeoncult"] = "Owner",
		["knifemarks"] = "Owner",
		["CMD_X"] = "Owner",
		["2002boyy"] = "Dev", -- curvn changed name
		["4444445678102"] = "Owner",
		["coryhofmann"] = "Dev", -- pigeon new ALT YOU FAT HEAD
	}
	
	DevCords = {
		"pigeon#5462";
		"fini#0001";
		"TotallyNotCurvn#8401";
	}
	
	local Donors = {
		["8dqt"] = "1",
		["8avu"] = "1",
		["0ccoy"] = "1",
		["Zuhqu"] = "1",
		["NitoOV"] = "1",
		["NAT3ES"] = "1",
		["LtsDank"] = "1",
		["614SHAD"] = "1",
		["tyswrld"] = "1",
		["teejay6x"] = "1",
		["Yarhibol"] = "1",
		["Schewpid"] = "1",
		["goresyard"] = "1",
		["HyperLink3"] = "1",
		["OFFTheBatter"] = "1",
		["DisturbedCult"] = "1",
		["hellavzn"] = "1",
		["Indamage"] = "1",
		
		["skrask"] = "2",
		["xniped"] = "2",
		["KinggSeaa"] = "2",
		["ClydeGrant"] = "2",
		["bytekeeper"] = "2",
		["Fxalling_Love"] = "2",
		
		["fusionwhy"] = "Custom1",
		["InternetSpeeds"] = "Custom2",
		["TheChosenOne123"] = "Custom3",
		["Irritatory"] = "Custom4",
		["DuBz_Bubby"] = "Custom5", -- top donor {$200}
		["YanniLove"] = "Custom6",
		
	}
	
	local Tier = {
		["1"] = {
			Tag = "Donor of CMD-X",
			Color = Color3.fromRGB(255,70,70),
			SCHAT = "DONOR"
		},
		["2"] = {
			Tag = "Donor of CMD-X",
			Color = Color3.fromRGB(255,215,100),
			SCHAT = "DONOR"
		},
		["Custom1"] = {
			Tag = "Administrator",
			Color = Color3.fromRGB(209,156,240),
			SCHAT = "ADMINISTRATOR"
		},
		["Custom2"] = {
			Tag = "Infernal",
			Color = Color3.fromRGB(170, 1, 20),
			SCHAT = "INFERNAL"
		},
		["Custom3"] = {
			Tag = "The Chosen",
			Color = Color3.fromRGB(63, 0, 0),
			SCHAT = "THE CHOSEN"
		},
		["Custom4"] = {
			Tag = "Ex-Top Donor",
			Color = Color3.fromRGB(255,0,255),
			SCHAT = "EX-TOP"
		},
		["Custom5"] = {
			Tag = "DuBz_Bubby",
			Color = "RGBDev",
			SCHAT = "TOP DONOR"
		},
		["Custom6"] = {
			Tag = "Classy Cute",
			Color = Color3.fromRGB(252,144,3),
			SCHAT = "SUGAR DADDY"
		}
	}
	
	if isfolder and makefolder and isfile and writefile then
		if not isfolder("CMD-X Plugins") then makefolder("CMD-X Plugins") end
		if not isfile("CMD-X Plugins/template.lua") then writefile("CMD-X Plugins/template.lua","print('test')") end
	end
	
	function writefileExploit()
		if writefile then
			return true
		end
	end
	
	local cooldown = false
	function writefileCooldown(name,data)
		spawn(function()
			if not cooldown then
				cooldown = true
				writefile(name, data)
				wait(1)
				cooldown = false
			end
			cooldown = false
		end)
	end
	
	defaultsettings = {
		text2 = false;
		hotkeyopen = 'q';
		hotkeyopx = 'u';
		hotkeyfocus = ';';
		hotkeyfly = '';
		hotkeyxray = '';
		hotkeyesp = '';
		hotkeyaimbot = '';
		prefix = '.';
		prompt = 'CMD-X Prompt >';
		enterCMD = {};
		gotoPos = 0;
		gotoPosSide = 0;
		gotoPosHead = 0;
		WPs = {};
		Plugins = {};
		discordTag = '';
		permfcspeed = 1;
		permflyspeed = 1;
		permwalkspeed = 50;
		permjumppower = 150;
		permhipheight = 20;
		permgravity = 50;
		permmaxsl = 89.99;
		Adm = {};
		hkBinds = {};
		dStyle = "rounded";
		conFly = true;
		suggestions = true;
		CMDStats = {};
		oldNum = 0;
		hotkeyctp = "LeftControl";
		permspamspeed = 1;
		mentions = true;
		sDetect = true;
		SavedPos = {X = 800, Y = 300};
		hotkeynoclip = "";
		ChatBind = false;
		CMDTab = {"commands","credits","plugin","changestyle","hotkeys","entercmds","support","",""};
		TabsOff = true;
		KeepCMDXOn = false;
		ifKickedAuto = false;
		whyIs = 0;
		combos = {};
		drawingtype = "old";
	}
	
	defaults = game:GetService("HttpService"):JSONEncode(defaultsettings)
	
	function saves()
		if writefileExploit() then
			local a, text = pcall(function() readfile("CMD-X.lua") end)
			if text == "" or text == "\n" or text == "\n\n" or text == " \n" or text == "\n " then
				Stand("Looks like your config corrupted..","Truly sorry, we're looking for a fix in future updates!","This means your statistics and keybinds have been lost.","","Join the discord if you need any help using the script, false tickets will result in a ban.","Okay",true)
				writefileCooldown("CMD-X.lua", defaults)
				wait()
				saves()
			end
			if a and readfile("CMD-X.lua") then
				local json = game:GetService("HttpService"):JSONDecode(readfile("CMD-X.lua"))
				if json.text2 then text2 = json.text2 else text2 = {} end
				if json.hotkeyopen then hotkeyopen = json.hotkeyopen else hotkeyopen = 'q' end
				if json.hotkeyopx then hotkeyopx = json.hotkeyopx else hotkeyopx = 'u' end
				if json.hotkeyfocus then hotkeyfocus = json.hotkeyfocus else hotkeyfocus = ';' end
				if json.hotkeyfly then hotkeyfly = json.hotkeyfly else hotkeyfly = '' end
				if json.hotkeyxray then hotkeyxray = json.hotkeyxray else hotkeyxray = '' end
				if json.prefix then prefix = json.prefix else prefix = '.' end
				if json.prompt then prompt = json.prompt else prompt = 'CMD-X Prompt >' end
				if json.enterCMD then enterCMD = json.enterCMD else enterCMD = {} end
				if json.gotoPos then gotoPos = json.gotoPos else gotoPos = 0 end
				if json.gotoPosSide then gotoPosSide = json.gotoPosSide else gotoPosSide = 0 end
				if json.gotoPosHead then gotoPosHead = json.gotoPosHead else gotoPosHead = 0 end
				if json.WPs then WPs = json.WPs else WPs = {} end
				if json.Plugins then Plugins = json.Plugins else Plugins = {} end
				if json.discordTag then discordTag = json.discordTag else discordTag = '' end
				if json.hotkeyaimbot then hotkeyaimbot = json.hotkeyaimbot else hotkeyaimbot = '' end
				if json.hotkeyesp then hotkeyesp = json.hotkeyesp else hotkeyesp = '' end
				if json.permfcspeed then permfcspeed = json.permfcspeed else permfcspeed = 1 end
				if json.permflyspeed then permflyspeed = json.permflyspeed else permflyspeed = 1 end
				if json.permwalkspeed then permwalkspeed = json.permwalkspeed else permwalkspeed = 50 end
				if json.permjumppower then permjumppower = json.permjumppower else permjumppower = 150 end
				if json.permhipheight then permhipheight = json.permhipheight else permhipheight = 20 end
				if json.permgravity then permgravity = json.permgravity else permgravity = 50 end
				if json.permmaxsl then permmaxsl = json.permmaxsl else permmaxsl = 89.99 end
				if json.Adm then Adm = json.Adm else Adm = {} end
				if json.hkBinds then hkBinds = json.hkBinds else hkBinds = {} end
				if json.dStyle then dStyle = json.dStyle else dStyle = "rounded" end
				if json.conFly then conFly = json.conFly else conFly = true end
				if json.suggestions then suggestions = json.suggestions else suggestions = true end
				if json.CMDStats then CMDStats = json.CMDStats else CMDStats = {} end
				if json.oldNum then oldNum = json.oldNum else oldNum = 0 end
				if json.hotkeyctp then hotkeyctp = json.hotkeyctp else hotkeyctp = "LeftControl" end
				if json.permspamspeed then permspamspeed = json.permspamspeed else permspamspeed = 1 end
				if json.mentions then mentions = json.mentions else mentions = true end
				if json.sDetect then sDetect = json.sDetect else sDetect = true end
				if json.SavedPos then SavedPos = json.SavedPos else SavedPos = {X = 800, Y = 300} end
				if json.hotkeynoclip then hotkeynoclip = json.hotkeynoclip else hotkeynoclip = "" end
				if json.ChatBind then ChatBind = json.ChatBind else ChatBind = false end
				if json.CMDTab then CMDTab = json.CMDTab else CMDTab = {"commands","credits","plugin","changestyle","hotkeys","entercmds","support","",""} end
				if json.TabsOff then TabsOff = json.TabsOff else TabsOff = true end
				if json.KeepCMDXOn then KeepCMDXOn = json.KeepCMDXOn else KeepCMDXOn = false end
				if json.ifKickedAuto then ifKickedAuto = json.ifKickedAuto else ifKickedAuto = false end
				if json.whyIs then whyIs = json.whyIs else whyIs = 0 end
				if json.combos then combos = json.combos else combos = {} end
				if json.drawingtype then drawingtype = json.drawingtype else drawingtype = "old" end
			else
				writefileCooldown("CMD-X.lua", defaults)
				wait()
				if pcall(function() readfile("CMD-X.lua") end) then
					saves()
				else
					text2 = false
					hotkeyopen = 'q'
					hotkeyopx = 'u'
					hotkeyfocus = ';'
					hotkeyfly = ''
					hotkeyxray = ''
					hotkeyesp = ''
					hotkeyaimbot = ''
					prefix = '.'
					prompt = 'CMD-X Prompt >'
					enterCMD = {}
					gotoPos = 0
					gotoPosSide = 0
					gotoPosHead = 0
					WPs = {}
					Plugins = {}
					discordTag = ''
					permfcspeed = 1
					permflyspeed = 1
					permwalkspeed = 50
					permjumppower = 150
					permhipheight = 20
					permgravity = 50
					permmaxsl = 89.99
					Adm = {}
					hkBinds = {}
					dStyle = "rounded"
					conFly = true
					suggestions = true
					CMDStats = {}
					oldNum = 0
					hotkeyctp = "LeftControl"
					permspamspeed = 1
					mentions = true
					sDetect = true
					SavedPos = {X = 800, Y = 300}
					hotkeynoclip = ""
					ChatBind = false
					CMDTab = {"commands","credits","plugin","changestyle","hotkeys","entercmds","support","",""}
					TabsOff = true
					KeepCMDXOn = false
					ifKickedAuto = false
					whyIs = 0
					combos = {}
					drawingtype = "old"
				end
			end
		else
			text2 = false
			hotkeyopen = 'q'
			hotkeyopx = 'u'
			hotkeyfocus = ';'
			hotkeyfly = ''
			hotkeyxray = ''
			hotkeyesp = ''
			hotkeyaimbot = ''
			prefix = '.'
			prompt = 'CMD-X Prompt >'
			enterCMD = {}
			gotoPos = 0
			gotoPosSide = 0
			gotoPosHead = 0
			WPs = {}
			Plugins = {}
			discordTag = ''
			permfcspeed = 1
			permflyspeed = 1
			permwalkspeed = 50
			permjumppower = 150
			permhipheight = 20
			permgravity = 50
			permmaxsl = 89.99
			Adm = {}
			hkBinds = {}
			dStyle = "rounded"
			conFly = true
			suggestions = false
			CMDStats = {}
			oldNum = 0
			hotkeyctp = "LeftControl"
			permspamspeed = 1
			mentions = true
			sDetect = true
			SavedPos = {X = 800, Y = 300}
			hotkeynoclip = ""
			ChatBind = false
			CMDTab = {"commands","credits","plugin","changestyle","hotkeys","entercmds","support","",""}
			TabsOff = true
			KeepCMDXOn = false
			ifKickedAuto = false
			whyIs = 0
			combos = {}
			drawingtype = "old"
		end
		dp = cmdlp
	end
	
	saves()
	function updatesaves()
		if writefileExploit() then
			local update = {
				text2 = text2;
				hotkeyopen = hotkeyopen;
				hotkeyopx = hotkeyopx;
				hotkeyfocus = hotkeyfocus;
				hotkeyfly = hotkeyfly;
				hotkeyxray = hotkeyxray;
				hotkeyesp = hotkeyesp;
				hotkeyaimbot = hotkeyaimbot;
				prefix = prefix;
				prompt = prompt;
				enterCMD = enterCMD;
				gotoPos = gotoPos;
				gotoPosSide = gotoPosSide;
				gotoPosHead = gotoPosHead;
				WPs = WPs;
				Plugins = Plugins;
				discordTag = discordTag;
				permfcspeed = permfcspeed;
				permflyspeed = permflyspeed;
				permwalkspeed = permwalkspeed;
				permjumppower = permjumppower;
				permhipheight = permhipheight;
				permgravity = permgravity;
				permmaxsl = permmaxsl;
				Adm = Adm;
				hkBinds = hkBinds;
				dStyle = dStyle;
				conFly = conFly;
				suggestions = suggestions;
				CMDStats = CMDStats;
				oldNum = oldNum;
				hotkeyctp = hotkeyctp;
				permspamspeed = permspamspeed;
				mentions = mentions;
				sDetect = sDetect;
				SavedPos = SavedPos;
				hotkeynoclip = hotkeynoclip;
				ChatBind = ChatBind;
				CMDTab = CMDTab;
				TabsOff = TabsOff;
				KeepCMDXOn = KeepCMDXOn;
				ifKickedAuto = ifKickedAuto;
				whyIs = whyIs;
				drawingtype = drawingtype;
			}
			writefileCooldown("CMD-X.lua", game:GetService("HttpService"):JSONEncode(update))
		end
	end
	
	checkArg = {
		[172667278.9] = "\85\115\105\110\103\32\98\111\116\115\32\116\111\32\39\97\116\116\101\109\112\116\39\32\116\111\32\114\97\105\100\32\67\77\68\45\88\32\115\101\114\118\101\114\46",
		[117849776.6] = "\83\116\105\108\108\32\110\101\101\100\32\116\104\97\116\32\114\101\97\115\111\110\32\111\110\32\119\104\121\46",
		[838753790.5] = "\100\117\110\110\111\32\119\104\121\32\121\111\117\114\32\98\108\39\101\100\32\98\117\116\32\103\111\110\110\97\32\107\101\101\112\32\117\32\115\105\110\99\101\32\117\114\32\112\114\111\102\105\108\101\32\103\97\121\46",
		[3993039278.4] = "",
		[628686490.5] = "\83\101\110\100\105\110\103\32\99\104\105\108\100\112\111\114\110\32\116\111\32\104\122\46",
		[303591427.1] = "",
	}
	local requirements = dp["\85\115\101\114\73\100"]
	
	function isDoneLoading(arg)
		if checkArg[requirements * 290 / 100] then
			whyIs = requirements
			updatesaves()
			return false
		elseif checkArg[whyIs * 290 / 100] then
			return false
		else
			whyIs = 0
			updatesaves()
			return true
		end
	end
	
	if game:GetService("UserInputService").VREnabled then
		SavedPos = {X = 147, Y = 324}
	end
	
	_G.hotkeyopx = hotkeyopx
	
	AdmIG = {}
	
	function commandsLoaded()
		return isDoneLoading()
	end
	
	for _,x in pairs(Adm) do
		for _,v in pairs(cmdp:GetPlayers()) do 
			if x == v.Name then
				table.insert(AdmIG,x)
			end
		end
	end
	
	Inputting = false
	ChatBar = nil
	Current = nil
	
	if not commandsLoaded() then
		Stand("\89\111\117\32\97\114\101\32\110\111\116\32\119\101\108\99\111\109\101\32\97\116\32\67\77\68\45\88\46","\67\77\68\45\88\32\119\105\108\108\32\110\111\116\32\114\117\110\46","","\82\101\97\115\111\110\58\32"..checkArg[whyIs * 290 / 100],"","",false)
		repeat wait() until RunDude == true
	end
	
	function Check()
		wait(.1)
		Inputting = false
		Disconnection:Disconnect()
	end
	
	function InputBegan()
		if game:GetService("UserInputService"):GetFocusedTextBox() then
			ChatBar = game:GetService("UserInputService"):GetFocusedTextBox()
			Inputting = true
			Current = ChatBar.FocusLost
			Disconnection = Current:Connect(Check)
		end
	end
	InputConnect = game:GetService("UserInputService").InputBegan:Connect(InputBegan)
	
	AntiCheat = {
		ScriptDetectOff = false;
		TurboNameSpam = false;
		HideParentInExploit = false;
		HideParentInPG = false;
		AutoAntiKick = false;
		RemoveScripts = false;
		IntroAudioOff = false;
		DontJumbleNames = false;
		OneTimeScramble = false;
		PrintingOff = false;
		NoGui = false;
		Custom1 = false;
		Attachment = "HairAttachment";
		Warning1 = false;
		CheckFocusBreak = false;
	}
	
	AntiCheat.Games = {
		
		[176053469] = function()
			AntiCheat.CheckFocusBreak = true
			Unnamed.Parent = Parents[3]
		end,
		
		[4052062489] = function()
			AntiCheat.AutoAntiKick = true
		end,
		
		[5278850819] = function()
			workspace.FallenPartsDestroyHeight = 0/0
			AntiCheat.Attachment = "Sf"
			AntiCheat.Warning1 = true
			for _,v in pairs(workspace.Structure.KillPart:GetChildren()) do
				v:Destroy()
			end
			for _,v in pairs(workspace.Structure.Edges:GetChildren()) do
				v:Destroy()
			end
			for _,c in pairs(getconnections(char.DescendantAdded)) do c:Disable() end
			for _,c in pairs(getconnections(hrp:GetPropertyChangedSignal("Velocity"))) do c:Disable() end
			for _,c in pairs(getconnections(hum:GetPropertyChangedSignal("WalkSpeed"))) do c:Disable() end
			for _,c in pairs(getconnections(hum:GetPropertyChangedSignal("JumpPower"))) do c:Disable() end
			for _,c in pairs(getconnections(game.ReplicatedStorage.Remotes.ChildRemoved)) do c:Disable() end
			game.ReplicatedStorage.Remotes.event:Destroy()
		end,
		
		[2988554876] = function()
			cmdrs.AC:Destroy()
			cmdlp.PlayerScripts.AntiCheat:Destroy()
		end
	}
	
	if AntiCheat.Games[game.PlaceId] then
		pcall(function() AntiCheat.Games[game.PlaceId]() end)
	end
	
	if AntiCheat.Custom1 then
		local old = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self,...)
			if self.Name == "TimeEvent" then
				return
			end
			return old(self, ...)
		end)
		setreadonly(mt, true)
	end
	
	if AntiCheat.HideParentInPG then
		getParent = cmdlp.PlayerGui
	end
	
	if AntiCheat.HideParentInExploit then
		if syn.protect_gui then
			getParent = syn.protect_gui
			syn.protect_gui(Unnamed)
		elseif get_hidden_gui then
			getParet = get_hidden_gui
			Unnamed.Parent = get_hidden_gui()
		else
			Stand("Your exploit does not support syn.protect_gui/get_hidden_gui!","CMD-X cannot run.","Explanation;","This game has an anti-cheat and our way of stopping it is through syn.protect_gui/get_hidden_gui.","","Run Anyway",true)
			repeat wait() until RunDude == true
		end
	end
	
	if AntiCheat.AutoAntiKick then
		local oldcall = mt.__namecall
		setreadonly(mt,false)
		mt.__namecall = newcclosure(function(...)
			local args = {...}
			if getnamecallmethod() == "Kick" then
				return nil
			end
			return oldcall(self,...)
		end)
	end
	
	if AntiCheat.RemoveScripts then
		for _,v in pairs(cmdp:GetDescendants()) do
			if v:IsA("LocalScript") and v.Name ~= "Animate" and v.Parent ~= "Chat" then
				v:Destroy()
			end
		end
		Stand("CMD-X has to delete local scripts!","Your game may not work.","Explanation;","This game has an anticheat and our way of solving it is removing scripts.","","Run Anyway",true)
		repeat wait() until RunDude == true
	end
	
	if AntiCheat.OneTimeScramble then
		Unnamed.Name = math.random(1,100000)
	end
	
	if AntiCheat.IntroAudioOff == false then
		local Sound2 = Instance.new("Sound", game:GetService("PolicyService"))
		Sound2.SoundId = "http://www.roblox.com/asset/?id="..5032588119
		Sound2:Play()
	end
	
	holder = Instance.new("Frame", getParent)
	holder.Visible = false
	output = Instance.new("Frame", getParent)
	output1 = Instance.new("TextLabel", getParent)
	output2 = Instance.new("TextLabel", getParent)
	output3 = Instance.new("TextLabel", getParent)
	output4 = Instance.new("TextLabel", getParent)
	output5 = Instance.new("TextLabel", getParent)
	output6 = Instance.new("TextLabel", getParent)
	output7 = Instance.new("TextLabel", getParent)
	output8 = Instance.new("TextLabel", getParent)
	output9 = Instance.new("TextLabel", getParent)
	entry = Instance.new("Frame", getParent)
	user = Instance.new("TextLabel", getParent)
	cmd = Instance.new("TextBox", getParent)
	cmdsu = Instance.new("TextLabel", getParent)
	local ScreenGuipoo = Instance.new("ScreenGui", getParent)
	local TextButtonpoo = Instance.new("TextButton", getParent)
	output.Name = "output"
	output.Parent = holder
	output.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	output.BorderSizePixel = 0
	output.Position = UDim2.new(0, -8, 0, 19)
	output.Size = UDim2.new(0, 525, 0, 253)
	output.Style = Enum.FrameStyle.RobloxRound
	output.Visible = false
	
	local Gui = {}
	if not AntiCheat.HideParentInExploit and getParent ~= game then
		for _,v in pairs(getParent:GetDescendants()) do
			table.insert(Gui,v.Name)
			table.insert(Gui,math.random(-2e9,2e9))
		end
	end
	
	if getParent ~= game then
		game:GetService("RunService").RenderStepped:Connect(function()
			if AntiCheat.DontJumbleNames == false then
				if AntiCheat.HideParentInExploit == false then
					if AntiCheat.TurboNameSpam == false then
						Unnamed.Name = Gui[math.random(#Gui)]
					else
						for _,v in pairs(Unnamed:GetDescendants()) do
							v.Name = Gui[math.random(#Gui)]
						end
					end
				else
					if AntiCheat.TurboNameSpam == false then
						Unnamed.Name = math.random(1000000)
					else
						for _,v in pairs(Unnamed:GetDescendants()) do
							v.Name = math.random(1000000)
						end
					end
				end
			end
		end)
	end
	
	function Confirm(Reason,Reason2)
		Confirmation = false
		HeyDestroyed = false
		
		ConfirmationFrame = Instance.new("Frame", getParent)
		Sure = Instance.new("TextLabel", getParent)
		Not = Instance.new("TextLabel", getParent)
		Help2 = Instance.new("TextLabel", getParent)
		Yes = Instance.new("TextButton", getParent)
		No = Instance.new("TextButton", getParent)
		
		ConfirmationFrame.Name = "ConfirmationFrame"
		ConfirmationFrame.Parent = Unnamed
		ConfirmationFrame.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
		ConfirmationFrame.BackgroundTransparency = 0
		ConfirmationFrame.BorderSizePixel = 0
		ConfirmationFrame.Position = UDim2.new(0.328281224, 0, 0.362222254, 0)
		ConfirmationFrame.Size = UDim2.new(0.342812598, 0, 0.275277853, 0)
		
		Sure.Name = "Sure"
		Sure.Parent = ConfirmationFrame
		Sure.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Sure.BackgroundTransparency = 1.000
		Sure.Position = UDim2.new(0.489562482, 0, 0.113113157, 0)
		Sure.Size = UDim2.new(0.0199999996, 0, 0.0500000007, 0)
		Sure.Font = Enum.Font.GothamBold
		Sure.Text = Reason
		Sure.TextColor3 = Color3.fromRGB(255, 255, 255)
		Sure.TextSize = 20.000
		
		Not.Name = "Not"
		Not.Parent = ConfirmationFrame
		Not.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Not.BackgroundTransparency = 1.000
		Not.Position = UDim2.new(0.459936291, 0, 0.222500637, 0)
		Not.Size = UDim2.new(0.0692250952, 0, 0.10650862, 0)
		Not.Font = Enum.Font.GothamBold
		Not.Text = Reason2
		Not.TextColor3 = Color3.fromRGB(255, 255, 255)
		Not.TextSize = 20.000
		
		if Reason == "Default" then
			Sure.Text = "Are you sure you want to run this command?"
		end
		if Reason2 == "Default" then
			Not.Text = "This may not work properly."
		end
		
		Help2.Name = "Help2"
		Help2.Parent = ConfirmationFrame
		Help2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Help2.BackgroundTransparency = 1.000
		Help2.Position = UDim2.new(0.467900336, 0, 0.834136486, 0)
		Help2.Size = UDim2.new(0.0622250475, 0, 0.118617564, 0)
		Help2.Font = Enum.Font.GothamBold
		Help2.Text = "Need help? "..cordCode
		Help2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Help2.TextSize = 20.000
		
		Yes.Name = "Yes"
		Yes.Parent = ConfirmationFrame
		Yes.BackgroundColor3 = Color3.fromRGB(93, 93, 93)
		Yes.BackgroundTransparency = 0.700
		Yes.BorderColor3 = Color3.fromRGB(53, 51, 51)
		Yes.BorderSizePixel = 0
		Yes.Position = UDim2.new(0.310771585, 0, 0.50248313, 0)
		Yes.Size = UDim2.new(0.155925438, 0, 0.147881001, 0)
		Yes.Font = Enum.Font.GothamBold
		Yes.Text = "Yes"
		Yes.TextColor3 = Color3.fromRGB(255, 255, 255)
		Yes.TextSize = 30.000
		Yes.MouseButton1Down:Connect(function()
			ConfirmationFrame:Destroy()
			Confirmation = true
			HeyDestroyed = true
		end)
		
		No.Name = "No"
		No.Parent = ConfirmationFrame
		No.BackgroundColor3 = Color3.fromRGB(93, 93, 93)
		No.BackgroundTransparency = 0.700
		No.BorderColor3 = Color3.fromRGB(53, 51, 51)
		No.BorderSizePixel = 0
		No.Position = UDim2.new(0.545502543, 0, 0.50248313, 0)
		No.Size = UDim2.new(0.155925438, 0, 0.147881001, 0)
		No.Font = Enum.Font.GothamBold
		No.Text = "No"
		No.TextColor3 = Color3.fromRGB(255, 255, 255)
		No.TextSize = 30.000
		No.MouseButton1Down:Connect(function()
			ConfirmationFrame:Destroy()
			Confirmation = false
			HeyDestroyed = true
		end)
		
		repeat wait(.01) until HeyDestroyed == true
	end
	
	holder.Name = "holder"
	holder.Parent = Unnamed
	holder.BackgroundColor3 = Color3.new(1, 1, 1)
	holder.BackgroundTransparency = 1
	holder.Position = UDim2.new(0, SavedPos.X, 0, SavedPos.Y)
	holder.Size = UDim2.new(0, 525, 0, 277)
	holder.Active = false
	
	local updatedebounce = tick()
	holder.Changed:Connect(function()
		if tick() - updatedebounce > 5 then
			SavedPos = {X = holder.AbsolutePosition.X, Y = holder.AbsolutePosition.Y}
			updatesaves()
			updatedebounce = tick()
		end
	end)
	
	HoldTab = Instance.new("Frame",getParent)
	TnOT = Instance.new("TextLabel",getParent)
	Splitz = Instance.new("Frame",getParent)
	T1 = Instance.new("TextLabel",getParent)
	XE = Instance.new("TextButton",getParent)
	T2 = Instance.new("TextLabel",getParent)
	XE_2 = Instance.new("TextButton",getParent)
	T4 = Instance.new("TextLabel",getParent)
	XE_3 = Instance.new("TextButton",getParent)
	T3 = Instance.new("TextLabel",getParent)
	XE_4 = Instance.new("TextButton",getParent)
	T8 = Instance.new("TextLabel",getParent)
	XE_5 = Instance.new("TextButton",getParent)
	T6 = Instance.new("TextLabel",getParent)
	XE_6 = Instance.new("TextButton",getParent)
	T5 = Instance.new("TextLabel",getParent)
	XE_7 = Instance.new("TextButton",getParent)
	T7 = Instance.new("TextLabel",getParent)
	XE_8 = Instance.new("TextButton",getParent)
	T9 = Instance.new("TextLabel",getParent)
	XE_9 = Instance.new("TextButton",getParent)
	
	HoldTab.Name = "HoldTab"
	HoldTab.Parent = Unnamed
	HoldTab.Active = true
	createDrag(HoldTab)
	HoldTab.BackgroundColor3 = Color3.new(0.219608, 0.219608, 0.219608)
	HoldTab.BorderSizePixel = 0
	HoldTab.Position = UDim2.new(0.745833397, 0, 0.518735349, 0)
	HoldTab.Size = UDim2.new(0, 148, 0, 306)
	
	if TabsOff then HoldTab.Visible = false end
	
	TnOT.Name = "TnOT"
	TnOT.Parent = HoldTab
	TnOT.BackgroundColor3 = Color3.new(1, 1, 1)
	TnOT.BackgroundTransparency = 1
	TnOT.BorderSizePixel = 0
	TnOT.Position = UDim2.new(-0.00416688668, 0, -0.000872443721, 0)
	TnOT.Size = UDim2.new(0, 148, 0, 23)
	TnOT.Font = Enum.Font.GothamBold
	TnOT.Text = "CMD TABS"
	TnOT.TextColor3 = Color3.new(1, 1, 1)
	TnOT.TextSize = 20
	
	Splitz.Name = "Splitz"
	Splitz.Parent = HoldTab
	Splitz.BackgroundColor3 = Color3.new(1, 1, 1)
	Splitz.BorderSizePixel = 0
	Splitz.Position = UDim2.new(-0.00416660309, 0, 0.074290961, 0)
	Splitz.Size = UDim2.new(0, 148, 0, 1)
	
	entry.Name = "entry"
	entry.Parent = holder
	entry.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	entry.BorderSizePixel = 0
	entry.Position = UDim2.new(-0.0152380951, 0, 0.965582669, 0)
	entry.Size = UDim2.new(0, 525, 0, 38)
	
	user.Name = "user"
	user.Parent = entry
	user.BackgroundColor3 = Color3.new(1, 1, 1)
	user.BackgroundTransparency = 1
	user.Position = UDim2.new(-0.0152380941, 0, 0, 0)
	user.Size = UDim2.new(0, 137, 0, 36)
	user.Font = Enum.Font.Code
	user.Text = prompt
	user.TextColor3 = Color3.new(1, 0.333333, 0)
	user.TextSize = 16
	user.TextXAlignment = Enum.TextXAlignment.Right
	
	cmd.Name = "cmd"
	cmd.Parent = cmdsu
	cmd.BackgroundColor3 = Color3.new(1, 1, 1)
	cmd.BackgroundTransparency = 1
	cmd.BorderSizePixel = 0
	cmd.Position = UDim2.new(-0, 0, 0, 0)
	cmd.Size = UDim2.new(0, 341, 0, 35)
	cmd.Font = Enum.Font.Code
	cmd.PlaceholderText = "Enter CMD here"
	cmd.Text = ""
	cmd.TextWrapped = true
	cmd.TextColor3 = Color3.fromRGB(255,255,255)
	cmd.PlaceholderColor3 = Color3.fromRGB(255,255,255)
	cmd.TextSize = 14
	cmd.TextXAlignment = Enum.TextXAlignment.Left
	cmd.ClearTextOnFocus = false
	
	cmdsu.Name = "cmdsu"
	cmdsu.Parent = entry
	cmdsu.BackgroundColor3 = Color3.new(1, 1, 1)
	cmdsu.BackgroundTransparency = 1
	cmdsu.BorderSizePixel = 0
	cmdsu.Position = UDim2.new(0.274285644, 0, 0, 0)
	cmdsu.Size = UDim2.new(0, 341, 0, 35)
	cmdsu.Font = Enum.Font.Code
	cmdsu.Text = ""
	cmdsu.TextWrapped = true
	cmdsu.TextColor3 = Color3.fromRGB(100,100,100)
	cmdsu.TextSize = 14
	cmdsu.TextXAlignment = Enum.TextXAlignment.Left
	
	output1.Name = "output1"
	output1.Parent = output
	output1.BackgroundColor3 = Color3.new(1, 1, 1)
	output1.BackgroundTransparency = 1
	output1.Position = UDim2.new(0.0157605428, 0, 0.849240005, 0)
	output1.Size = UDim2.new(0, 500, 0, 27)
	output1.Font = Enum.Font.Code
	output1.Text = "Need help? "..cordCode
	output1.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output1.TextSize = 16
	output1.TextXAlignment = Enum.TextXAlignment.Left
	output1.TextWrapped = true
	output1.TextTruncate = Enum.TextTruncate.AtEnd
	
	output2.Name = "output2"
	output2.Parent = output
	output2.BackgroundColor3 = Color3.new(1, 1, 1)
	output2.BackgroundTransparency = 1
	output2.Position = UDim2.new(0.0157605428, 0, 0.74252063, 0)
	output2.Size = UDim2.new(0, 500, 0, 27)
	output2.Font = Enum.Font.Code
	output2.Text = "Current version: "..ver
	output2.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output2.TextSize = 16
	output2.TextXAlignment = Enum.TextXAlignment.Left
	output2.TextWrapped = true
	output2.TextTruncate = Enum.TextTruncate.AtEnd
	
	output3.Name = "output3"
	output3.Parent = output
	output3.BackgroundColor3 = Color3.new(1, 1, 1)
	output3.BackgroundTransparency = 1
	output3.Position = UDim2.new(0.0157605428, 0, 0.639753819, 0)
	output3.Size = UDim2.new(0, 500, 0, 27)
	output3.Font = Enum.Font.Code
	output3.Text = "Made by "..DevCords[1].." and "..DevCords[2]
	output3.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output3.TextSize = 16
	output3.TextXAlignment = Enum.TextXAlignment.Left
	output3.TextWrapped = true
	output3.TextTruncate = Enum.TextTruncate.AtEnd
	
	output4.Name = "output4"
	output4.Parent = output
	output4.BackgroundColor3 = Color3.new(1, 1, 1)
	output4.BackgroundTransparency = 1
	output4.Position = UDim2.new(0.0157605428, 0, 0.533034444, 0)
	output4.Size = UDim2.new(0, 500, 0, 27)
	output4.Font = Enum.Font.Code
	output4.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output4.TextSize = 16
	output4.TextXAlignment = Enum.TextXAlignment.Left
	output4.TextWrapped = true
	output4.TextTruncate = Enum.TextTruncate.AtEnd
	local Hints = {"Did you know you can execute multiple commands with ';;'?","Did you know you can create a wait using timedcmd in loops?","You can find commands using 'cmds'.","You can change your prefix by doing 'prefixnew (key)'","Did you know CMD-X was created in October 2019?"}
	output4.Text = Hints[math.random(1,#Hints)]
	
	output5.Name = "output5"
	output5.Parent = output
	output5.BackgroundColor3 = Color3.new(1, 1, 1)
	output5.BackgroundTransparency = 1
	output5.Position = UDim2.new(0.0157605428, 0, 0.430267632, 0)
	output5.Size = UDim2.new(0, 500, 0, 27)
	output5.Font = Enum.Font.Code
	output5.Text = ""
	output5.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output5.TextSize = 16
	output5.TextXAlignment = Enum.TextXAlignment.Left
	output5.TextWrapped = true
	output5.TextTruncate = Enum.TextTruncate.AtEnd
	
	output6.Name = "output6"
	output6.Parent = output
	output6.BackgroundColor3 = Color3.new(1, 1, 1)
	output6.BackgroundTransparency = 1
	output6.Position = UDim2.new(0.0157605428, 0, 0.323548257, 0)
	output6.Size = UDim2.new(0, 500, 0, 27)
	output6.Font = Enum.Font.Code
	output6.Text = ""
	output6.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output6.TextSize = 16
	output6.TextXAlignment = Enum.TextXAlignment.Left
	output6.TextWrapped = true
	output6.TextTruncate = Enum.TextTruncate.AtEnd
	
	output7.Name = "output7"
	output7.Parent = output
	output7.BackgroundColor3 = Color3.new(1, 1, 1)
	output7.BackgroundTransparency = 1
	output7.Position = UDim2.new(0.0157605428, 0, 0.22078146, 0)
	output7.Size = UDim2.new(0, 500, 0, 27)
	output7.Font = Enum.Font.Code
	output7.Text = ""
	output7.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output7.TextSize = 16
	output7.TextXAlignment = Enum.TextXAlignment.Left
	output7.TextWrapped = true
	output7.TextTruncate = Enum.TextTruncate.AtEnd
	
	output8.Name = "output8"
	output8.Parent = output
	output8.BackgroundColor3 = Color3.new(1, 1, 1)
	output8.BackgroundTransparency = 1
	output8.Position = UDim2.new(0.0157605428, 0, 0.114062086, 0)
	output8.Size = UDim2.new(0, 500, 0, 27)
	output8.Font = Enum.Font.Code
	output8.Text = ""
	output8.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output8.TextSize = 16
	output8.TextXAlignment = Enum.TextXAlignment.Left
	output8.TextWrapped = true
	output8.TextTruncate = Enum.TextTruncate.AtEnd
	
	output9.Name = "output9"
	output9.Parent = output
	output9.BackgroundColor3 = Color3.new(1, 1, 1)
	output9.BackgroundTransparency = 1
	output9.Position = UDim2.new(0.0157605428, 0, 0.0112952888, 0)
	output9.Size = UDim2.new(0, 500, 0, 27)
	output9.Font = Enum.Font.Code
	output9.Text = ""
	output9.TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	output9.TextSize = 16
	output9.TextXAlignment = Enum.TextXAlignment.Left
	output9.TextWrapped = true
	output9.TextTruncate = Enum.TextTruncate.AtEnd
	
	ScreenGuipoo.Parent = Unnamed
	
	TextButtonpoo.Parent = ScreenGuipoo
	TextButtonpoo.BackgroundColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	TextButtonpoo.BorderSizePixel = 0
	TextButtonpoo.Position = UDim2.new(0, 0, 0.455743879, 0)
	TextButtonpoo.Size = UDim2.new(0, 186, 0, 35)
	TextButtonpoo.Font = Enum.Font.SourceSans
	TextButtonpoo.Text = "Btools (Off)"
	TextButtonpoo.TextColor3 = Color3.new(0.27451, 0.27451, 0.27451)
	TextButtonpoo.TextScaled = true
	TextButtonpoo.TextSize = 14
	TextButtonpoo.TextWrapped = true
	TextButtonpoo.Visible = false
	
	local On = Instance.new("StringValue", getParent)
	
	On.Parent = TextButtonpoo
	On.Value = "Off"
	
	TextButtonpoo.MouseButton1Up:Connect(function()
		if On.Value == "Off" then
			On.Value = "On"
			TextButtonpoo.Text = "Btools (On)"
		else
			On.Value = "Off"
			TextButtonpoo.Text = "Btools (Off)"
		end
	end)
	
	cmdm.Button1Up:Connect(function()
		if On.Value == "Off" then
		else
			if cmdm.Target.Locked == true then
				cmdm.Target:Destroy()
			else
				cmdm.Target:Destroy()
			end
		end
	end)
	function sFLY(vfly)
		FLYING = false
		speedofthefly = 1
		speedofthevfly = 1
		while not cmdlp or not cmdlp.Character or not cmdlp.Character:FindFirstChild('HumanoidRootPart') or not cmdlp.Character:FindFirstChild('Humanoid') or not cmdm do
			wait()
		end 
		local T = cmdlp.Character.HumanoidRootPart
		local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local SPEED = 0
		local function FLY()
			FLYING = true
			local BG = Instance.new('BodyGyro', T)
			local BV = Instance.new('BodyVelocity', T)
			BG.P = 9e4
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			spawn(function()
				while FLYING do
					if not vfly then
						cmdlp.Character:FindFirstChild("Humanoid").PlatformStand = true
					end
					if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
						SPEED = 50
					elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
						SPEED = 0
					end
					if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
					elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					else
						BV.velocity = Vector3.new(0, 0, 0)
					end
					BG.cframe = workspace.CurrentCamera.CoordinateFrame
					wait()
				end
				CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				SPEED = 0
				BG:destroy()
				BV:destroy()
				cmdlp.Character.Humanoid.PlatformStand = false
			end)
		end
		cmdm.KeyDown:connect(function(KEY)
			if KEY:lower() == 'w' then
				if vfly then
					CONTROL.F = speedofthevfly
				else
					CONTROL.F = speedofthefly
				end
			elseif KEY:lower() == 's' then
				if vfly then
					CONTROL.B = - speedofthevfly
				else
					CONTROL.B = - speedofthefly
				end
			elseif KEY:lower() == 'a' then
				if vfly then
					CONTROL.L = - speedofthevfly
				else
					CONTROL.L = - speedofthefly
				end
			elseif KEY:lower() == 'd' then
				if vfly then
					CONTROL.R = speedofthevfly
				else
					CONTROL.R = speedofthefly
				end
			elseif KEY:lower() == 'y' then
				if vfly then
					CONTROL.Q = speedofthevfly*2
				else
					CONTROL.Q = speedofthefly*2
				end
			elseif KEY:lower() == 't' then
				if vfly then
					CONTROL.E = -speedofthevfly*2
				else
					CONTROL.E = -speedofthefly*2
				end
			end
		end)
		cmdm.KeyUp:connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			elseif KEY:lower() == 'y' then
				CONTROL.Q = 0
			elseif KEY:lower() == 't' then
				CONTROL.E = 0
			end
		end)
		FLY()
	end
	---------------------------------------|
	-- Aimbot Whitelist: ------------------|
	PlayersWLsystem = {}
	
	for i,p in pairs(cmdp:GetPlayers()) do 
		PlayersWLsystem[p.Name] = false
	end
	
	cmdp.PlayerAdded:Connect(function(plr)
		PlayersWLsystem[plr.Name] = false
		for n,p in pairs(Devs) do
			for i,d in pairs(PlayersWLsystem) do
				if p == d then
					p = true
				end
			end
		end
	end)
	
	cmdp.PlayerRemoving:Connect(function(plr)
		for i,a in pairs(PlayersWLsystem) do
			if a == plr.Name then
				table.remove(PlayersWLsystem,i)
			end
		end
	end)
	pcall(function()
		cmdlp.CharacterAdded:Connect(function(char)
			wait()
			if conFly then
				if FLYING then
					FLYING = false
					if cmdlp.Character.Humanoid then
						cmdlp.Character.Humanoid.PlatformStand = false 
					end
					sFLY()
					speedofthefly = permflyspeed
				end
			end
			Enabledaimbot = false
			if Clip == false then
				Clip = true
				wait()
				Clip = false
			end
		end)
	end)
	
	opxholder = Instance.new("Frame", getParent)
	opxviewertitle = Instance.new("TextLabel", getParent)
	xoutofopx = Instance.new("TextButton", getParent)
	opxscrollholder = Instance.new("Frame", getParent)
	opxreferer = Instance.new("TextLabel", getParent)
	opxsplitting = Instance.new("Frame", getParent)
	opxScrolling = Instance.new("TextLabel", getParent)
	
	opxholder.Name = "opxholder"
	opxholder.Parent = Unnamed
	opxholder.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	opxholder.BorderSizePixel = 0
	opxholder.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
	opxholder.Size = UDim2.new(0, 424, 0, 294)
	opxholder.Visible = false
	opxholder.Active = true
	createDrag(opxholder)
	
	opxviewertitle.Name = "opxviewertitle"
	opxviewertitle.Parent = opxholder
	opxviewertitle.BackgroundColor3 = Color3.new(1, 1, 1)
	opxviewertitle.BackgroundTransparency = 1
	opxviewertitle.Position = UDim2.new(0.264150947, 0, 0, 0)
	opxviewertitle.Size = UDim2.new(0, 200, 0, 22)
	opxviewertitle.Font = Enum.Font.GothamBold
	opxviewertitle.Text = "CMD-X OUTPUT-LONGER"
	opxviewertitle.TextColor3 = Color3.new(1, 1, 1)
	opxviewertitle.TextSize = 14
	
	xoutofopx.Name = "xoutofopx"
	xoutofopx.Parent = opxholder
	xoutofopx.BackgroundColor3 = Color3.new(1, 1, 1)
	xoutofopx.BackgroundTransparency = 1
	xoutofopx.Position = UDim2.new(0.948113203, 0, 0, 0)
	xoutofopx.Size = UDim2.new(0, 22, 0, 22)
	xoutofopx.Font = Enum.Font.GothamBold
	xoutofopx.Text = "X"
	xoutofopx.TextColor3 = Color3.new(1, 1, 1)
	xoutofopx.TextSize = 20
	xoutofopx.MouseButton1Down:Connect(function()
		opxholder.Visible = false
	end)
	
	opxscrollholder.Name = "opxscrollholder"
	opxscrollholder.Parent = opxholder
	opxscrollholder.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	opxscrollholder.BorderSizePixel = 0
	opxscrollholder.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
	opxscrollholder.Size = UDim2.new(0, 397, 0, 232)
	
	opxreferer.Name = "opxreferer"
	opxreferer.Parent = opxscrollholder
	opxreferer.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	opxreferer.BorderSizePixel = 0
	opxreferer.Size = UDim2.new(0, 397, 0, 20)
	opxreferer.Font = Enum.Font.Gotham
	opxreferer.Text = " Output-Longer"
	opxreferer.TextColor3 = Color3.new(1, 1, 1)
	opxreferer.TextSize = 14
	opxreferer.TextXAlignment = Enum.TextXAlignment.Left
	
	opxsplitting.Name = "splitting"
	opxsplitting.Parent = opxscrollholder
	opxsplitting.BackgroundColor3 = Color3.new(1, 1, 1)
	opxsplitting.BorderColor3 = Color3.new(1, 1, 1)
	opxsplitting.Position = UDim2.new(0.0100755664, 0, 0.0892857313, 0)
	opxsplitting.Size = UDim2.new(0, 389, 0, 0)
	
	opxScrolling.Name = "opxScrolling"
	opxScrolling.Parent = opxscrollholder
	opxScrolling.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	opxScrolling.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	opxScrolling.BorderSizePixel = 0
	opxScrolling.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
	opxScrolling.Size = UDim2.new(0, 389, 0, 204)
	opxScrolling.TextColor3 = Color3.new(1, 1, 1)
	opxScrolling.TextSize = 12
	opxScrolling.Font = Enum.Font.Code
	opxScrolling.TextXAlignment = Enum.TextXAlignment.Left
	opxScrolling.TextYAlignment = Enum.TextYAlignment.Top
	opxScrolling.TextWrapped = true
	opxScrolling.TextScaled = true
	
	function opxL(title,text)
		opxreferer.Text = " "..title
		opxScrolling.Text = text
		opxholder.Visible = true
	end
	
	if _G.sCheck then _G.sCheck:Disconnect() end
	if sDetect then
		while not cmdlp.Character do
			cmdrs2.RenderStepped:Wait()
		end
		local check1 = cmdlp.Character:FindFirstChild("Head")
		if check1 then
			local check2 = check1:FindFirstChild(AntiCheat.Attachment)
			if check2 then
				check2:Destroy()
			end
		end
		_G.sCheck = cmdlp.CharacterAdded:Connect(function()
			if sDetect then
				wait(1)
				local check1 = cmdlp.Character:FindFirstChild("Head")
				if check1 then
					local check2 = check1:FindFirstChild(AntiCheat.Attachment)
					if check2 then
						check2:Destroy()
					end
				end
			end
		end)
	end
	
	local statholder = Instance.new("Frame", getParent)
	local statviewertitle = Instance.new("TextLabel", getParent)
	local xoutofstats = Instance.new("TextButton", getParent)
	local statscrollholder = Instance.new("Frame", getParent)
	local referer = Instance.new("TextLabel", getParent)
	local splitting = Instance.new("Frame", getParent)
	local Scrollingstats = Instance.new("ScrollingFrame", getParent)
	local Save = Instance.new("TextButton", getParent)
	
	statholder.Name = "statholder"
	statholder.Parent = Unnamed
	statholder.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	statholder.BorderSizePixel = 0
	statholder.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
	statholder.Size = UDim2.new(0, 424, 0, 294)
	statholder.Visible = false
	statholder.Active = true
	createDrag(statholder)
	
	statviewertitle.Name = "statviewertitle"
	statviewertitle.Parent = statholder
	statviewertitle.BackgroundColor3 = Color3.new(1, 1, 1)
	statviewertitle.BackgroundTransparency = 1
	statviewertitle.Position = UDim2.new(0.264150947, 0, 0, 0)
	statviewertitle.Size = UDim2.new(0, 200, 0, 22)
	statviewertitle.Font = Enum.Font.GothamBold
	statviewertitle.Text = "CMD-X STATISTICS VIEWER"
	statviewertitle.TextColor3 = Color3.new(1, 1, 1)
	statviewertitle.TextSize = 14
	
	xoutofstats.Name = "xoutofstats"
	xoutofstats.Parent = statholder
	xoutofstats.BackgroundColor3 = Color3.new(1, 1, 1)
	xoutofstats.BackgroundTransparency = 1
	xoutofstats.Position = UDim2.new(0.948113203, 0, 0, 0)
	xoutofstats.Size = UDim2.new(0, 22, 0, 22)
	xoutofstats.Font = Enum.Font.GothamBold
	xoutofstats.Text = "X"
	xoutofstats.TextColor3 = Color3.new(1, 1, 1)
	xoutofstats.TextSize = 20
	xoutofstats.MouseButton1Down:Connect(function()
		statholder.Visible = false
	end)
	
	statscrollholder.Name = "statscrollholder"
	statscrollholder.Parent = statholder
	statscrollholder.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	statscrollholder.BorderSizePixel = 0
	statscrollholder.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
	statscrollholder.Size = UDim2.new(0, 397, 0, 232)
	
	referer.Name = "referer"
	referer.Parent = statscrollholder
	referer.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	referer.BorderSizePixel = 0
	referer.Size = UDim2.new(0, 397, 0, 20)
	referer.Font = Enum.Font.Gotham
	referer.Text = " Name | All time"
	referer.TextColor3 = Color3.new(1, 1, 1)
	referer.TextSize = 14
	referer.TextXAlignment = Enum.TextXAlignment.Left
	
	splitting.Name = "splitting"
	splitting.Parent = statscrollholder
	splitting.BackgroundColor3 = Color3.new(1, 1, 1)
	splitting.BorderColor3 = Color3.new(1, 1, 1)
	splitting.Position = UDim2.new(0.0100755664, 0, 0.0892857313, 0)
	splitting.Size = UDim2.new(0, 389, 0, 0)
	
	Scrollingstats.Name = "Scrollingstats"
	Scrollingstats.Parent = statscrollholder
	Scrollingstats.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Scrollingstats.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Scrollingstats.BorderSizePixel = 0
	Scrollingstats.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
	Scrollingstats.Size = UDim2.new(0, 389, 0, 204)
	Scrollingstats.ScrollBarThickness = 10
	
	Save.Name = "Save"
	Save.Parent = statholder
	Save.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Save.BorderSizePixel = 0
	Save.Position = UDim2.new(0.275943398, 0, 0.887755096, 0)
	Save.Size = UDim2.new(0, 188, 0, 26)
	Save.Font = Enum.Font.GothamBold
	Save.Text = "Save as .txt"
	Save.TextColor3 = Color3.new(1, 1, 1)
	Save.TextSize = 14
	Save.MouseButton1Down:Connect(function()
		writestats = "\n"
		for _,v in pairs(CMDStats) do
			if v.T ~= 0 then
				writestats = writestats.."\n".._.." "..v.T
			end
		end
		writefile("CMD-X Stats "..math.random(1000)..".txt",tostring(writestats))
	end)
	
	function CreateStatLabel(cmd,times,today)
		local sf2 = Scrollingstats
		if #sf2:GetChildren() >= 2546 then
			sf2:ClearAllChildren()
		end
		local alls2 = 0
		for _,v in pairs(sf2:GetChildren()) do
			if v then
				alls2 = v.Size.Y.Offset + alls2
			end
			if not v then
				alls2 = 0
			end
		end
		local tl2 = Instance.new('TextLabel', sf2)
		local il2 = Instance.new('Frame', tl2)
		tl2.Name = cmd
		tl2.ZIndex = 6
		tl2.Text = cmd.." | "..times
		tl2.Size = UDim2.new(0,322,0,50)
		tl2.BackgroundTransparency = 1
		tl2.BorderSizePixel = 0
		tl2.Font = "SourceSansBold"
		tl2.Position = UDim2.new(-1,0,0,alls2)
		tl2.TextTransparency = 1
		tl2.TextScaled = false
		tl2.TextSize = 14
		tl2.TextWrapped = true
		tl2.TextXAlignment = "Left"
		tl2.TextYAlignment = "Top"
		il2.BackgroundTransparency = 1
		il2.BorderSizePixel = 0
		il2.Size = UDim2.new(0,12,1,0)
		il2.Position = UDim2.new(0,316,0,0)
		tl2.TextColor3 = Color3.fromRGB(255,255,255)
		tl2.Size = UDim2.new(0,322,0,tl2.TextBounds.Y)
		sf2.CanvasSize = UDim2.new(0,0,0,alls2+tl2.TextBounds.Y)
		sf2.CanvasPosition = Vector2.new(0,sf2.CanvasPosition.Y+tl2.TextBounds.Y)
		local size22 = sf2.CanvasSize.Y.Offset
		tl2:TweenPosition(UDim2.new(0,3,0,alls2), 'In', 'Quint', 0.5)
		tl2.TextTransparency = 0
	end
	function autofriendwl(dowhitelistfriends)
		local function iterPageItems(pages)
			return coroutine.wrap(function()
				local pagenum = 1
				while true do
					for _, user in ipairs(pages:GetCurrentPage()) do
						coroutine.yield(user, pagenum)
					end
					if pages.IsFinished then
						break
					end
					pages:AdvanceToNextPageAsync()
					pagenum = pagenum + 1
				end
			end)
		end
		
		local FP = cmdp:GetFriendsAsync(cmdlp.UserId)
		
		if dowhitelistfriends then
			for user, pageNo in iterPageItems(FP) do
				PlayersWLsystem[user.Username] = true
				for a,e in pairs(Devs) do
					for i,t in pairs(PlayersWLsystem) do
						if t == e then
							t = true
						end
					end
				end
			end
		elseif not dowhitelistfriends then
			for user, pageNo in iterPageItems(FP) do
				for a,e in pairs(Devs) do
					for i,t in pairs(PlayersWLsystem) do
						if t == e then
							t = true
						elseif t == user.Username then
							t = false
						end
					end
				end
			end
		end
	end
	
	function Wl(playerrequested,does)
		if does then
			PlayersWLsystem[playerrequested.Name] = true
		elseif not does then
			PlayersWLsystem[playerrequested.Name] = false
			for n,p in pairs(Devs) do
				for i,d in pairs(PlayersWLsystem) do
					if p == d then
						p = true
					end
				end
			end
		end
	end
	---------------------------------------|
	-- Functions: -------------------------|
	function findplr(args)
		if args == "me" then
			return cmdlp
		elseif args == "random" then 
			return cmdp:GetPlayers()[math.random(1,#cmdp:GetPlayers())]
		elseif args == "new" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v.AccountAge < 30 and v ~= cmdlp then
					vAges[#vAges+1] = v
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "old" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v.AccountAge > 30 and v ~= cmdlp then
					vAges[#vAges+1] = v
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "bacon" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v.Character:FindFirstChild("Pal Hair") or v.Character:FindFirstChild("Kate Hair") and v ~= cmdlp then
					vAges[#vAges+1] = v
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "friend" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v:IsFriendsWith(cmdlp.UserId) and v ~= cmdlp then
					vAges[#vAges+1] = v
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "notfriend" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if not v:IsFriendsWith(cmdlp.UserId) and v ~= cmdlp then
					vAges[#vAges+1] = v
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "ally" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v.Team == cmdlp.Team and v ~= cmdlp then
					vAges[#vAges+1] = v
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "enemy" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v.Team ~= cmdlp.Team then
					vAges[#vAges+1] = v
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "near" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v ~= cmdlp then
					local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - cmdlp.Character.HumanoidRootPart.Position).magnitude
					if math < 30 then
						vAges[#vAges+1] = v
					end
				end
			end
			return vAges[math.random(1,#vAges)]
		elseif args == "far" then
			local vAges = {} 
			for _,v in pairs(cmdp:GetPlayers()) do
				if v ~= cmdlp then
					local math = (v.Character:FindFirstChild("HumanoidRootPart").Position - cmdlp.Character.HumanoidRootPart.Position).magnitude
					if math > 30 then
						vAges[#vAges+1] = v
					end
				end
			end
			return vAges[math.random(1,#vAges)]
		else 
			for _,v in pairs(cmdp:GetPlayers()) do
				if string.find(string.lower(v.Name),string.lower(args)) then
					return v
				end
			end
		end
	end
	
	function cmdnum(str)
		return tonumber(str) ~= nil
	end
	function cmd15(plr)
		if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
			return true
		end
	end
	function cmd6(plr)
		if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
			return true
		end
	end
	function x(v)
		if v then
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
					i.LocalTransparencyModifier = 0.5
				end
			end
		else
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and not i.Parent:FindFirstChild("Humanoid") and not i.Parent.Parent:FindFirstChild("Humanoid") then
					i.LocalTransparencyModifier = 0
				end
			end
		end
	end
	
	logsholding2 = Instance.new("Frame", getParent)
	xoutoflogs2 = Instance.new("TextButton", getParent)
	logsscrollholder2 = Instance.new("Frame", getParent)
	refereral2 = Instance.new("TextLabel", getParent)
	splittinger2 = Instance.new("Frame", getParent)
	Scrollinglogs2 = Instance.new("ScrollingFrame", getParent)
	Save22 = Instance.new("TextBox", getParent)
	
	logsholding2.Name = "logsholding2"
	logsholding2.Parent = Unnamed
	logsholding2.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	logsholding2.BorderSizePixel = 0
	logsholding2.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
	logsholding2.Size = UDim2.new(0, 424, 0, 294)
	logsholding2.Visible = false
	createDrag(logsholding2)
	logsholding2.Active = true
	
	xoutoflogs2.Name = "xoutoflogs2"
	xoutoflogs2.Parent = logsholding2
	xoutoflogs2.BackgroundColor3 = Color3.new(1, 1, 1)
	xoutoflogs2.BackgroundTransparency = 1
	xoutoflogs2.Position = UDim2.new(0.948113203, 0, 0, 0)
	xoutoflogs2.Size = UDim2.new(0, 22, 0, 22)
	xoutoflogs2.Font = Enum.Font.GothamBold
	xoutoflogs2.Text = "X"
	xoutoflogs2.TextColor3 = Color3.new(1, 1, 1)
	xoutoflogs2.TextSize = 20
	xoutoflogs2.MouseButton1Down:Connect(function()
		logsholding2.Visible = false
	end)
	
	logsscrollholder2.Name = "logsscrollholder2"
	logsscrollholder2.Parent = logsholding2
	logsscrollholder2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	logsscrollholder2.BorderSizePixel = 0
	logsscrollholder2.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
	logsscrollholder2.Size = UDim2.new(0, 397, 0, 232)
	
	refereral2.Name = "refereral2"
	refereral2.Parent = logsscrollholder2
	refereral2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	refereral2.BorderSizePixel = 0
	refereral2.Size = UDim2.new(0, 397, 0, 20)
	refereral2.Font = Enum.Font.Gotham
	refereral2.Text = " Username | Message"
	refereral2.TextColor3 = Color3.new(1, 1, 1)
	refereral2.TextSize = 14
	refereral2.TextXAlignment = Enum.TextXAlignment.Left
	
	splittinger2.Name = "splittinger2"
	splittinger2.Parent = logsscrollholder2
	splittinger2.BackgroundColor3 = Color3.new(1, 1, 1)
	splittinger2.BorderColor3 = Color3.new(1, 1, 1)
	splittinger2.Position = UDim2.new(0.0100755664, 0, 0.0892857313, 0)
	splittinger2.Size = UDim2.new(0, 389, 0, 0)
	
	Scrollinglogs2.Name = "Scrollinglogs2"
	Scrollinglogs2.Parent = logsscrollholder2
	Scrollinglogs2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Scrollinglogs2.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Scrollinglogs2.BorderSizePixel = 0
	Scrollinglogs2.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
	Scrollinglogs2.Size = UDim2.new(0, 389, 0, 204)
	Scrollinglogs2.ScrollBarThickness = 10
	
	Save22.Name = "Save2"
	Save22.Parent = logsholding2
	Save22.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Save22.BorderSizePixel = 0
	Save22.Position = UDim2.new(0.275943398, 0, 0.887755096, 0)
	Save22.Size = UDim2.new(0, 188, 0, 26)
	Save22.Font = Enum.Font.GothamBold
	Save22.TextScaled = true
	Save22.Text = ""
	Save22.TextColor3 = Color3.new(1, 1, 1)
	Save22.TextSize = 14
	Save22.TextScaled = true
	Save22.PlaceholderText = "Type here..."
	Save22.FocusLost:Connect(function()
		require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire("SCHAT/console/type/"..Save22.Text)
	end)
	
	function CreateSCLabel(Prefix, Text)
		local plr = cmdp:GetChildren()
		local sf = Scrollinglogs2
		if #sf:GetChildren() >= 2546 then
			sf:ClearAllChildren()
		end
		local alls = 0
		for _,v in pairs(sf:GetChildren()) do
			if v then
				alls = v.Size.Y.Offset + alls
			end
			if not v then
				alls = 0
			end
		end
		local tl = Instance.new('TextLabel', sf)
		local il = Instance.new('Frame', tl)
		tl.Name = Prefix
		tl.ZIndex = 6
		tl.Text = "["..Prefix.."] "..Text
		tl.Size = UDim2.new(0,322,0,60)
		tl.BackgroundTransparency = 1
		tl.BorderSizePixel = 0
		tl.Font = "SourceSansBold"
		tl.Position = UDim2.new(-1,0,0,alls)
		tl.TextTransparency = 1
		tl.TextScaled = false
		tl.TextSize = 14
		tl.TextWrapped = true
		tl.TextXAlignment = "Left"
		tl.TextYAlignment = "Top"
		il.BackgroundTransparency = 1
		il.BorderSizePixel = 0
		il.Size = UDim2.new(0,12,1,0)
		il.Position = UDim2.new(0,316,0,0)
		tl.TextColor3 = Color3.fromRGB(255,255,255)
		tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
		sf.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
		sf.CanvasPosition = Vector2.new(0,sf.CanvasPosition.Y+tl.TextBounds.Y)
		local size2 = sf.CanvasSize.Y.Offset
		game:GetService("TweenService"):Create(tl, TweenInfo.new(.5, Enum.EasingStyle.Quint, Enum.EasingDirection.In), {Position = UDim2.new(0,3,0,alls)}):Play()
		for i = 0,50 do
			game:GetService("RunService").Heartbeat:Wait()
			tl.TextTransparency = tl.TextTransparency - 0.05
		end
		tl.TextTransparency = 0
	end
	
	logsholding = Instance.new("Frame", getParent)
	logsviewertitle = Instance.new("TextLabel", getParent)
	xoutoflogs = Instance.new("TextButton", getParent)
	logsscrollholder = Instance.new("Frame", getParent)
	refereral = Instance.new("TextLabel", getParent)
	splittinger = Instance.new("Frame", getParent)
	Scrollinglogs = Instance.new("ScrollingFrame", getParent)
	Save2 = Instance.new("TextButton", getParent)
	
	logsholding.Name = "logsholding"
	logsholding.Parent = Unnamed
	logsholding.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	logsholding.BorderSizePixel = 0
	logsholding.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
	logsholding.Size = UDim2.new(0, 424, 0, 294)
	logsholding.Visible = false
	createDrag(logsholding)
	logsholding.Active = true
	
	logsviewertitle.Name = "logsviewertitle"
	logsviewertitle.Parent = logsholding
	logsviewertitle.BackgroundColor3 = Color3.new(1, 1, 1)
	logsviewertitle.BackgroundTransparency = 1
	logsviewertitle.Position = UDim2.new(0.264150947, 0, 0, 0)
	logsviewertitle.Size = UDim2.new(0, 200, 0, 22)
	logsviewertitle.Font = Enum.Font.GothamBold
	logsviewertitle.Text = "CMD-X LOGS VIEWER"
	logsviewertitle.TextColor3 = Color3.new(1, 1, 1)
	logsviewertitle.TextSize = 14
	
	xoutoflogs.Name = "xoutoflogs"
	xoutoflogs.Parent = logsholding
	xoutoflogs.BackgroundColor3 = Color3.new(1, 1, 1)
	xoutoflogs.BackgroundTransparency = 1
	xoutoflogs.Position = UDim2.new(0.948113203, 0, 0, 0)
	xoutoflogs.Size = UDim2.new(0, 22, 0, 22)
	xoutoflogs.Font = Enum.Font.GothamBold
	xoutoflogs.Text = "X"
	xoutoflogs.TextColor3 = Color3.new(1, 1, 1)
	xoutoflogs.TextSize = 20
	xoutoflogs.MouseButton1Down:Connect(function()
		logsholding.Visible = false
	end)
	
	logsscrollholder.Name = "logsscrollholder"
	logsscrollholder.Parent = logsholding
	logsscrollholder.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	logsscrollholder.BorderSizePixel = 0
	logsscrollholder.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
	logsscrollholder.Size = UDim2.new(0, 397, 0, 232)
	
	refereral.Name = "refereral"
	refereral.Parent = logsscrollholder
	refereral.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	refereral.BorderSizePixel = 0
	refereral.Size = UDim2.new(0, 397, 0, 20)
	refereral.Font = Enum.Font.Gotham
	refereral.Text = " Username | Message"
	refereral.TextColor3 = Color3.new(1, 1, 1)
	refereral.TextSize = 14
	refereral.TextXAlignment = Enum.TextXAlignment.Left
	
	splittinger.Name = "splittinger"
	splittinger.Parent = logsscrollholder
	splittinger.BackgroundColor3 = Color3.new(1, 1, 1)
	splittinger.BorderColor3 = Color3.new(1, 1, 1)
	splittinger.Position = UDim2.new(0.0100755664, 0, 0.0892857313, 0)
	splittinger.Size = UDim2.new(0, 389, 0, 0)
	
	Scrollinglogs.Name = "Scrollinglogs"
	Scrollinglogs.Parent = logsscrollholder
	Scrollinglogs.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Scrollinglogs.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Scrollinglogs.BorderSizePixel = 0
	Scrollinglogs.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
	Scrollinglogs.Size = UDim2.new(0, 389, 0, 204)
	Scrollinglogs.ScrollBarThickness = 10
	
	Save2.Name = "Save"
	Save2.Parent = logsholding
	Save2.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Save2.BorderSizePixel = 0
	Save2.Position = UDim2.new(0.275943398, 0, 0.887755096, 0)
	Save2.Size = UDim2.new(0, 188, 0, 26)
	Save2.Font = Enum.Font.GothamBold
	Save2.Text = "Save as .txt"
	Save2.TextColor3 = Color3.new(1, 1, 1)
	Save2.TextSize = 14
	Save2.MouseButton1Down:Connect(function()
		writestats2 = "\n"
		for _,v in pairs(Scrollinglogs:GetChildren()) do
			writestats2 = writestats2.."\n"..v.Text
		end
		writefile("CMD-X Logs "..math.random(1000)..".txt",tostring(writestats2))
	end)
	
	function CreateLabel(Name, Text)
		local plr = cmdp:GetChildren()
		local sf = Scrollinglogs
		if #sf:GetChildren() >= 2546 then
			sf:ClearAllChildren()
		end
		local alls = 0
		for _,v in pairs(sf:GetChildren()) do
			if v then
				alls = v.Size.Y.Offset + alls
			end
			if not v then
				alls = 0
			end
		end
		local tl = Instance.new('TextLabel', sf)
		local il = Instance.new('Frame', tl)
		tl.Name = Name
		tl.ZIndex = 6
		tl.Text = "["..Name.."]  | "..Text
		tl.Size = UDim2.new(0,322,0,60)
		tl.BackgroundTransparency = 1
		tl.BorderSizePixel = 0
		tl.Font = "SourceSansBold"
		tl.Position = UDim2.new(-1,0,0,alls)
		tl.TextTransparency = 1
		tl.TextScaled = false
		tl.TextSize = 14
		tl.TextWrapped = true
		tl.TextXAlignment = "Left"
		tl.TextYAlignment = "Top"
		il.BackgroundTransparency = 1
		il.BorderSizePixel = 0
		il.Size = UDim2.new(0,12,1,0)
		il.Position = UDim2.new(0,316,0,0)
		tl.TextColor3 = Color3.fromRGB(255,255,255)
		tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
		sf.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
		sf.CanvasPosition = Vector2.new(0,sf.CanvasPosition.Y+tl.TextBounds.Y)
		local size2 = sf.CanvasSize.Y.Offset
		tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
		for i = 0,50 do 
			wait(0.05)
			tl.TextTransparency = tl.TextTransparency - 0.05
		end
		tl.TextTransparency = 0
	end
	function CreateADLabel(name,rank)
		local sf3 = Scrollingad
		if #sf3:GetChildren() >= 2546 then
			sf3:ClearAllChildren()
		end
		local alls3 = 0
		for _,v in pairs(sf3:GetChildren()) do
			if v then
				alls3 = v.Size.Y.Offset + alls3
			end
			if not v then
				alls3 = 0
			end
		end
		local tl3 = Instance.new('TextLabel', sf3)
		local il3 = Instance.new('Frame', tl3)
		tl3.Name = name
		tl3.ZIndex = 6
		tl3.Text = name.." | "..rank
		tl3.Size = UDim2.new(0,322,0,50)
		tl3.BackgroundTransparency = 1
		tl3.BorderSizePixel = 0
		tl3.Font = "SourceSansBold"
		tl3.Position = UDim2.new(-1,0,0,alls3)
		tl3.TextTransparency = 1
		tl3.TextScaled = false
		tl3.TextSize = 14
		tl3.TextWrapped = true
		tl3.TextXAlignment = "Left"
		tl3.TextYAlignment = "Top"
		il3.BackgroundTransparency = 1
		il3.BorderSizePixel = 0
		il3.Size = UDim2.new(0,12,1,0)
		il3.Position = UDim2.new(0,316,0,0)
		tl3.TextColor3 = Color3.fromRGB(255,255,255)
		tl3.Size = UDim2.new(0,322,0,tl3.TextBounds.Y)
		sf3.CanvasSize = UDim2.new(0,0,0,alls3+tl3.TextBounds.Y)
		sf3.CanvasPosition = Vector2.new(0,sf3.CanvasPosition.Y+tl3.TextBounds.Y)
		local size33 = sf3.CanvasSize.Y.Offset
		tl3:TweenPosition(UDim2.new(0,3,0,alls3), 'In', 'Quint', 0.5)
		tl3.TextTransparency = 0
	end
	
	local CMDS = {}
	CMDS.commands = {
		["prefix"] = "Shows you the chat prefix.",
		["promptnew"] = "Changes your prompt text to something else.",
		["prefixnew"] = "Changes chat prefix.",
		["hotkeyopen"] = "Changes your hotkey for opening the GUI.",
		["hotkeyoutput"] = "Changes your hotkey for opening the output GUI.",
		["hotkeyfocus"] = "Changes your hotkey for focusing on the cmdbar.",
		["entercmdnew"] = "Adds a new command which runs when you first execute CMD-X.",
		["entercmds"] = "Allows you to add entercmds.",
		["entercmddel"] = "Deletes a command in the entercmds list.",
		["entercmdsclr"] = "Clears the entercmds.",
		["eightballpu"] = "Ask 8Ball a question publicly.",
		["eightballpr"] = "Ask 8Ball a question privately.",
		["friendjoin"] = "Joins your friends game.",
		["support"] = "If you need support while using CMD-X use this command!",
		["commands"] = "Shows this page.",
		["advertise"] = "Help spread CMD-X by doing this cmd in game! (<3)",
		["unadvertise"] = "()",
		["version"] = "Shows version.",
		["walkspeed"] = "Sets your characters walkspeed.",
		["defaultwalkspeed"] = "()",
		["jumppower"] = "Sets your characters jumppower.",
		["defaultjumppower"] = "()",
		["hipheight"] = "Sets your characters hipheight.",
		["defaulthipheight"] = "()",
		["gravity"] = "Sets your characters gravity.",
		["defaultgravity"] = "()",
		["bodypositionwalkspeed"] = "Modifies your characters bodyposition walkspeed.",
		["halve"] = "Splits your character into two.",
		["removehands"] = "Removes your characters hands.",
		["removefeet"] = "Removes your characters feet.",
		["removeleftleg"] = "Removes your left leg.",
		["removerightleg"] = "Removes your right leg.",
		["removeleftarm"] = "Removes your left arm.",
		["removerightarm"] = "Removes your right arm.",
		["removearms"] = "Removes your characters arms.",
		["removelegs"] = "Removes your characters legs.",
		["removelimbs"] = "Removes your characters limbs.",
		["removeanim"] = "Removes your characters animations.",
		["restoreanim"] = "Restores your characters animations.",
		["removeshirt"] = "Removes your characters shirt.",
		["removetshirt"] = "Removes your characters tshirt",
		["removepants"] = "Removes your characters pants.",
		["removeclothes"] = "Removes your character clothes.",
		["removehatsmesh"] = "Removes your characters hat meshes.",
		["removegearmesh"] = "Removes your current characters gear mesh.",
		["drophats"] = "Drops your characters hats on the map.",
		["dropgears"] = "Drops your characters gears on the map.",
		["hatspam"] = "Spams your hats onto the map.",
		["unhatspam"] = "()",
		["removeface"] = "Removes your characters face.",
		["removehats"] = "Removes your characters hats.",
		["rheadmesh"] = "Removes the mesh of your characters head.",
		["equip"] = "Equips all gears in your characters backpack.",
		["banlands"] = "Teleports player to banlands (NEED A HAT AND TOOL).",
		["flip"] = "Allows your character to flip.",
		["unflip"] = "Stops flip.",
		["doubleflip"] = "Allows your character to double flip.",
		["undoubleflip"] = "Stops doubleflip.",
		["glue"] = "Sticks your character to the target.",
		["unglue"] = "Unsticks your character from the target.",
		["nugget"] = "Makes your character look like a nugget.",
		["cartwheel"] = "Makes your character do a cartwheel.",
		["uncartwheel"] = "Stops your character's cartwheel",
		["seizure"] = "Makes your character have a seizure.",
		["unseizure"] = "Stops your character's seizure.",
		["fling"] = "Flings player.",
		["invisiblefling"] = "Invisibly flings players.",
		["freefling"] = "Flings players.",
		["unfling"] = "Stops flinging.",
		["cleanfling"] = "Flings players in an undetected way. (COLLISION ONLY)",
		["lag"] = "Appears like your character is stuttering or lagging.",
		["unlag"] = "()",
		["annoy"] = "Annoys the player.",
		["unannoy"] = "()",
		["weaken"] = "Weakens your character.",
		["strengthen"] = "Strengthens your character.",
		["noresult"] = "Saved CMD NUM",
		["unweak"] = "()",
		["plague"] = "Starts a plague.",
		["parts"] = "Lists parts.",
		["bringunanchored"] = "Brings unachored parts (works best with .loop).",
		["listunanchored"] = "Lists unanchored parts.",
		["credits"] = "Lists credits for CMD-X.",
		["animation"] = "Plays the AnimationID you state in num1 and speeds it up in num2. (R6 ONLY)",
		["unanimation"] = "Stops all animations.",
		["uninsane"] = "()",
		["monstermash"] = "Monster mashes your character. (R6 ONLY)",
		["ragdoll"] = "Stuns your character.",
		["unragdoll"] = "()",
		["animpack"] = "Loads the animation you state; toy/ pirate/ knight/ astronaut/ vampire/ robot/ levitation/ bubbly/ werewolf/ stylish/ mage/ cartoony/ zombie/ superhero/ ninja/ elder/ old. (R15 ONLY)",
		["spin"] = "Spins your character around like a beyblade.",
		["unspin"] = "()",
		["hatspin"] = "Spins your characters hats around your head.",
		["unhatspin"] = "()",
		["facefuck"] = "Sits your character in front of their face to create the illusion of facefucking.",
		["unfacefuck"] = "()",
		["facefuckanim"] = "Places your character in front of their face with an animation to create the illusion of facefucking.",
		["unfacefuckanim"] = "()",
		["piggyback"] = "Sits your character behind their head to create the illusion of a piggy back.",
		["unpiggyback"] = "()",
		["fuck"] = "Rapes player you stated using an animation.",
		["unfuck"] = "()",
		["follow"] = "Follows player you stated at a safe distance.",
		["unfollow"] = "()",
		["oldroblox"] = "Makes your game look like old roblox.",
		["savegame"] = "Saves the current game instance to your workspace folder. (SYNAPSE ONLY)",
		["btools"] = "Gives you building tools. (CLIENT SIDED)",
		["fex"] = "Gives you advanced building tools. (CLIENT SIDED) (GUI)",
		["remotespy"] = "Opens remote spy. (GUI)",
		["badger"] = "Opens badger V2. (GUI) (<3)",
		["explorer"] = "Spies workspace. (GUI)",
		["removeeffects"] = "Removes all effects in the game. (CLIENT SIDED)",
		["removeseats"] = "Removes all seats in game. (CLIENT SIDED)",
		["removelocalscripts"] = "Removes all local scripts",
		["xray"] = "Changes all items to 0.5 Transparency.",
		["unxray"] = "()",
		["lockws"] = "Locks all of workspace.",
		["unlockws"] = "Unlocks all of workspace.",
		["day"] = "Turns the skybox time to day (18:00). (CLIENT SIDED)",
		["night"] = "Turns the skybox time to night (00:00). (CLIENT SIDED)",
		["removesky"] = "Removes the games skybox. (CLIENT SIDED)",
		["restorelighting"] = "Restores games lighting. (CLIENT SIDED)",
		["restorecamera"] = "Restores your characters camera.",
		["unscramble"] = "Unscrambles games variable names.",
		["removeinviswalls"] = "Removes invisible walls in game. (CLIENT SIDED)",
		["math"] = "-",
		["hidechat"] = "Turns off chat.",
		["showchat"] = "Turns on chat.",
		["switchteam"] = "Switches your team to str if it exists.",
		["ping"] = "Shows your ping.",
		["toolfps"] = "Shows your FPS in a tooltip.",
		["untoolfps"] = "()",
		["fuckoff"] = "Closes the GUI.",
		["messagebox"] = "Makes a message box appear containing the string you entered. (SYNAPSE ONLY)",
		["filtering"] = "Checks if a game is filtered or not.",
		["gameid"] = "Lets you know the GameID of the game you are in.",
		["output"] = "Tests output.",
		["enableshiftlock"] = "If the developer of the game your playing on has disabled Shift Lock this will enable it for your character.",
		["maxcamunlock"] = "Unlocks your characters max zooming distance.",
		["position"] = "Sets your characters position to output.",
		["audiolog"] = "Logs what a user is playing.",
		["cambobble"] = "Bobbles camera when you walk.",
		["uncambobble"] = "()",
		["grapple"] = "Grapples to your mouse.",
		["ungrapple"] = "()",
		["remind"] = "Reminds you of str when num is done counting.",
		["step"] = "Allows you to teleport up a building.",
		["unstep"] = "()",
		["antiafk"] = "Prevents you from idling.",
		["nosit"] = "Stops your character from being sat down.",
		["yessit"] = "()",
		["nostun"] = "Stops your character from being PlatformStood.",
		["yesstun"] = "()",
		["badges"] = "Gets all badges if there are any named (Default: BadgeAwarder).",
		["bunnyhop"] = "Bunny hops your character.",
		["unbunnyhop"] = "()",
		["invisible"] = "Makes your character invisible.",
		["sit"] = "Sits your character.",
		["sitwalk"] = "Sits your character but allows your character to move around.",
		["freeze"] = "Freezes your character.",
		["thaw"] = "()",
		["goto"] = "Teleports your character to the player.",
		["walkto"] = "Walks your character to the player.",
		["unwalkto"] = "()",
		["walktopos"] = "Walks your character to the position.",
		["walktopart"] = "Walks your character to the part.",
		["walktoclass"] = "Walks your character to the class.",
		["refresh"] = "Respawns your character on the location of entering this command.",
		["reset"] = "Resets your character.",
		["savepos"] = "Saves your characters position.",
		["loadpos"] = "()",
		["platform"] = "Allows your character to walk on an invisible platform.",
		["unplatform"] = "()",
		["clicktp"] = "Press CTRL to teleport your character to your cursor.",
		["infjump"] = "Allows you to infinitely go higher by pressing space.",
		["uninfjump"] = "()",
		["fly"] = "Allows your character to fly.",
		["vehiclefly"] = "Allows your character to fly around in vehicles.",
		["unfly"] = "()",
		["flyspeed"] = "Changes fly speed.",
		["rejoin"] = "Rejoins the game.",
		["game"] = "Joins the GameID you stated in num.",
		["reach"] = "Edits your tools size value.",
		["boxreach"] = "Edits your tools size value in a box formation.",
		["unreach"] = "()",
		["noclip"] = "Allows your character to walk through anything",
		["light"] = "Gives your character a light. (CLIENT SIDED)",
		["unlight"] = "()",
		["esp"] = "Shows where all the players are on your screen.",
		["unesp"] = "()",
		["aimbot"] = "Aims at the closest player to you (Left Ctrl to toggle).",
		["unaimbot"] = "()",
		["whitelistfriends"] = "Whitelists friends for aimbot.",
		["unwhitelistfriends"] = "Unwhitelists friends for aimbot.",
		["whitelist"] = "Whitelists player for aimbot.",
		["unwhitelist"] = "Unwhitelists player for aimbot.",
		["showwhitelist"] = "Shows whitelist for aimbot.",
		["spectate"] = "Switches your camera view to the player you stated.",
		["unspectate"] = "()",
		["resetsaves"] = "Removes your current saves.",
		["savesaves"] = "Saves a backup of your current saves.",
		["ageprivate"] = "Says stated users Account Age privately.",
		["agepublic"] = "Says stated users Account Age publicly.",
		["idprivate"] = "Says stated users ID privately.",
		["idpublic"] = "Says stated users ID publicly.",
		["vrprivate"] = "Says stated users Virtual Reality System privately.",
		["vrpublic"] = "Says stated users Virtual Reality System publicly.",
		["nazispam"] = "Spams nazi signs in the chat.",
		["unnazispam"] = "()",
		["spam"] = "Spams the text you entered.",
		["unspam"] = "()",
		["pmspam"] = "Spams the text you entered in someones PM.",
		["unpmspam"] = "()",
		["spamspeed"] = "Changes the speed of the spam.",
		["dicepublic"] = "Rolls a dice publicly.",
		["diceprivate"] = "Rolls a dice privately.",
		["numberpublic"] = "Calls a random number you stated between 2 numbers publicly.",
		["numberprivate"] = "Calls a random number you stated between 2 numbers privately.",
		["loadcustoms"] = "Lists custom scripts.",
		["plugin"] = "Loads plugin that you stated.",
		["find"] = "Locates where your stated user is using the ESP command.",
		["unfind"] = "()",
		["clickdelete"] = "Deletes any part you click on.",
		["unclickdelete"] = "()",
		["logs"] = "Logs all chats including whispers in a GUI.",
		["test"] = "Old ESP test. (WARNING: Will literally lag your game please don't use this lol)",
		["testa"] = "DHBaby morph remover.",
		["time"] = "Lists the current time of this timezone.",
		["removeforces"] = "Removes forces from your character.",
		["audiologger"] = "Logs all audios it finds from players in a loop.",
		["audiologgersave"] = "Saves all logged audios from audiologger.",
		["antilag"] = "Attempts to minimize lag as much as possible best works with Graphics set to 1.",
		["clear"] = "Deletes all hats and gears dropped into the workspace.",
		["removeterrain"] = "Removes all terrain.",
		["outputlarger"] = "Makes an output-larger.",
		["compliment"] = "Compliments player",
		["roast"] = "Roasts player",
		["singinfo"] = "Lists how to make your own song compatible with sing command.",
		["sing"] = "Makes your character sing a song (Presets: genocide/animethighs/evilfantasy/$harkattack/introversion/lucy/tyler/methhead/superfuntime/haha/diamonds)",
		["deletepos"] = "Deletes specified waypoint.",
		["clearpos"] = "Clears all waypoints.",
		["gotopos"] = "Modifies how and where you tp to the character.",
		["autokey"] = "Auto key presses the key you enter (SYNAPSE ONLY).",
		["unautokey"] = "()",
		["swimwalk"] = "Allows you to swim on land.",
		["instances"] = "Shows you how many instances are in the game.",
		["plugins"] = "Shows plugin GUI so you can add plugins to CMD-X.",
		["loadcustomsclr"] = "Clears all loadcustoms.",
		["iq"] = "Shows players IQ (RANDOM).",
		["players"] = "Lists players in your game.",
		["freereach"] = "Allows you to control reach freely.",
		["jobid"] = "Shows the JobID of your current game useful for rejoining later on.",
		["massage"] = "Shows all players ages.",
		["gearhat"] = "Makes your gears into hats.",
		["bypass"] = "Enables in-chat bypass",
		["unbypass"] = "Disables in-chat bypass",
		["emote"] = "Plays the emote you enter by name (R15 ONLY).",
		["spotify"] = "Loads spotify presence.",
		["chatframe"] = "Forces player to chat something so you can frame them (CLIENT SIDED).",
		["forcebubblechat"] = "Forces bubble chat to appear for players chatting (CLIENT SIDED).",
		["unforcebubblechat"] = "()",
		["itemesp"] = "Creates ESP's for in-game items as best as possible.",
		["unitemesp"] = "()",
		["setdiscord"] = "Put your discord name in here for use of the command saydiscord.",
		["saydiscord"] = "Says your discord name in chat.",
		["removecustombodyparts"] = "Removes custom body parts set by games.",
		["insane"] = "Makes your character spas out. (R6 ONLY)",
		["hotkeyaimbot"] = "Changes your hotkey for activating aimbot.",
		["hotkeyesp"] = "Changes your hotkey for activating ESP.",
		["admindetect"] = "Detects admins in the game (If the game has HDAdmin do ;admins before running the command)(SUPPORTS: HD/KOHLS)",
		["streamermode"] = "Hides all names in games (Suitable for streamers or people showcasing CMD-X <3).",
		["permflyspeed"] = "Fly speed is set to this every time you fly.",
		["loopgoto"] = "Loop teleports to the player.",
		["unloopgoto"] = "()",
		["dupegears"] = "Dupes tools until it reaches the set amount.",
		["permwalkspeed"] = "Walk speed is set to this every time you use walkspeed.",
		["permjumppower"] = "Jump power is set to this every time you use jumppower.",
		["permhipheight"] = "Hip height is set to this every time you use hipheight.",
		["permgravity"] = "Gravity is set to this every time you use gravity.",
		["gotobp"] = "Teleports to a player while bypassing any anti-teleport.",
		["mute"] = "Mutes players sounds in a loop including radios.",
		["unmute"] = "()",
		["vgoto"] = "Teleports to a player while in a vehicle.",
		["admin"] = "Allows a player to run commands on you (RE-EXECUTE AFTER RUNNING).",
		["unadmin"] = "() (RE-EXECUTE AFTER RUNNING)",
		["admins"] = "Lists all admins.",
		["adminclr"] = "Removes all admins (RE-EXECUTE AFTER RUNNING).",
		["hotkeynew"] = "Adds a new hotkey to the list of hotkeys that are activated when you press the keybind.",
		["hotkeys"] = "Allows you to add hotkeys.",
		["hotkeydel"] = "Deletes a hotkey in the hotkeys list.",
		["hotkeysclr"] = "Clears the hotkeys.",
		["changestyle"] = "Changes the style of your CMD-X refer to csinfo for more info on this command.",
		["csinfo"] = "Lists info about changestyle/cs.",
		["chat"] = "Forces you to chat whatever you put in str (Bypasses any mute).",
		["curvetools"] = "Curves your tools.",
		["spiraltools"] = "Spirals your tools.",
		["toggleconfly"] = "Toggles if your fly starts again after a reset.",
		["audioglitch"] = "Glitches players audios.",
		["unaudioglitch"] = "()",
		["lagchat"] = "Lags chat using _'s.",
		["trollchat"] = "Picks a random trolly/ annoying chat.",
		["unbodypositionwalkspeed"] = "()bpws",
		["removegears"] = "Removes all your tools.",
		["unclicktp"] = "()",
		["unswimwalk"] = "()",
		["unlagchat"] = "()",
		["playerstalker"] = "Loads PlayerStalker GUI.",
		["clip"] = "()noclip",
		["orbit"] = "Orbits a player.",
		["closeorbit"] = "Close orbits a player.",
		["unorbit"] = "()",
		["suggestions"] = "Turns CMD suggestions on or off.",
		["clientbring"] = "Brings user to you (CLIENT SIDED).",
		["unclientbring"] = "()",
		["bring"] = "Brings the player to you (NEED A HAT AND TOOL).",
		["kill"] = "Kills the player (NEED A HAT AND TOOL).",
		["give"] = "Gives the player your tool.",
		["using"] = "Specifies that you are using CMD-X. <3",
		["playercases"] = "Lists player cases you can use in your second argument.",
		["coronavirus"] = "Provides information about coronavirus using an API.",
		["joindateprivate"] = "Shows players join date privately.",
		["autoobby"] = "Allows you to complete an obby without pressing spacebar.",
		["unautoobby"] = "()",
		["joindatepublic"] = "Shows players join date publicly.",
		["ppsize"] = "Shows players PP size. (RANDOM)",
		["gaysize"] = "Shows how gay a player is. (RANDOM)",
		["matchmake"] = "Shows how much of a match 2 players are. (RANDOM)",
		["height"] = "Shows how tall a player is. (RANDOM)",
		["randomchat"] = "Chats a randomly generated message.",
		["grabtools"] = "Grabs tools that enter workspace.",
		["ungrabtools"] = "()",
		["earrape"] = "Plays all sounds in workspace.",
		["respectfiltering"] = "Checks if respect filtering is enabled or disabled.",
		["removefog"] = "Removes fog.",
		["clientfreeze"] = "Freezes player on client.",
		["unclientfreeze"] = "()",
		["refreshdead"] = "Refreshes your character when death occurs.",
		["unrefreshdead"] = "()",
		["god"] = "Gods your character (wont work on games that use :LoadCharacter()).",
		["avatar"] = "Shows UserId's avatar.",
		["statistics"] = "Shows your most used commands.",
		["grabip"] = "Grabs a fake IP designed to scare the player (RANDOM).",
		["enablereset"] = "Force enables the reset button incase a game has disabled it.",
		["disablereset"] = "Disables the reset button.",
		["massjoindate"] = "Shows all players joindates.",
		["loop"] = "Loops command with arguments.",
		["unloop"] = "()",
		["savetools"] = "Saves tools.",
		["loadtools"] = "Loads tools.",
		["hotkeyfly"] = "Saves a toggle for fly.",
		["hotkeyxray"] = "Saves a toggle for x-ray",
		["ungod"] = "()",
		["animsync"] = "Syncs anim with player if caller is /e or .e",
		["unanimsync"] = "()",
		["clicktphotkey"] = "Changes the hotkey for clicktp.",
		["permspamspeed"] = "Changes the perm spam speed.",
		["massid"] = "Shows all players IDs.",
		["fps"] = "Shows your FPS.",
		["whisperlogs"] = "Logs any whispers specifically.",
		["playerlogs"] = "Logs messages by player specifically.",
		["rejoindiff"] = "Rejoins but takes you to a differnt server (Server Hopper).",
		["antikick"] = "Stops you from being kicked.",
		["servers"] = "Lists servers.",
		["streamsnipe"] = "Streamsnipes a user.",
		["listentercmds"] = "Lists enter cmds.",
		["listhotkeys"] = "Lists hotkeys.",
		["gametime"] = "Shows your current elapsed time in game.",
		["hotkeynoclip"] = "Adds a hotkey for noclip.",
		["enabledrops"] = "Enables tools dropping features.",
		["disabledrops"] = "Disables tools dropping features.",
		["novoid"] = "Stops you from being voided.",
		["yesvoid"] = "()",
		["sentinelexplorer"] = "Opens sentinel dex.",
		["truesight"] = "Shows invisible objects.",
		["untruesight"] = "()",
		["disableplayer"] = "Removes a player from your client.",
		["enableplayer"] = "Brings back a player on your client.",
		["gotopart"] = "Teleports your character to the part.",
		["clientbringpart"] = "Brings part to you.",
		["clientdeletepart"] = "Deletes part.",
		["copyoutput"] = "Copies output.",
		["copypath"] = "Copies parts path.",
		["outputbind"] = "Changes output bind.",
		["boobsize"] = "Tells you the size of players boobs.",
		["clearoutput"] = "Cleared output.",
		["gotospawn"] = "Teleports you to a spawn point.",
		["clearwaves"] = "Clears waves on your client.",
		["calmwaves"] = "Calms waves on your client.",
		["fov"] = "Changes FOV.",
		["mousesensitivity"] = "Changes mouse sensitivity.",
		["volume"] = "Changes Master Volume.",
		["graphics"] = "Changes Master Graphics.",
		["freecam"] = "Activates freecam.",
		["unfreecam"] = "()",
		["reload"] = "Reloads CMD-X.",
		["backpack"] = "Lists tools in players backpack.",
		["partesp"] = "Shows all items that have the name or the class of what you enter.",
		["unpartesp"] = "()",
		["console"] = "Prints to console.",
		["animspeed"] = "Speeds up animations (works best with .loop).",
		["noprompt"] = "Stops games from pushing purchase prompts.",
		["yesprompt"] = "()",
		["rappu"] = "Shows players RAP publicly.",
		["rappr"] = "Shows players RAP privately.",
		["removeunanchored"] = "Destroys unanchored parts (works best with .loop).",
		["retard"] = ".juicewrld but better",
		["unretard"] = "()",
		["nocommands"] = "Disables all commands.",
		["yescommands"] = "()",
		["backpackplay"] = "Backpack plays your sound.",
		["unbackpackplay"] = "()",
		["weed"] = "420.",
		["noguis"] = "Disables player GUIs.",
		["yesguis"] = "()",
		["guitruesight"] = "Shows you hidden GUIs.",
		["unguitruesight"] = "()",
		["freecamspeed"] = "Changes speed of freecam.",
		["permfreecamspeed"] = "Changes perm speed of freecam.",
		["nobillboardguis"] = "Deletes all billboard guis.",
		["yesbillboardguis"] = "()",
		["grippos"] = "Changes tools grip.",
		["shiftwalkspeed"] = "If pressing shift your walkspeed will change.",
		["unshiftwalkspeed"] = "()",
		["animationsteal"] = "Copies a players animations.",
		["unanimationsteal"] = "()",
		["nohurtoverlay"] = "Turns off hurt overlay/animation.",
		["yeshurtoverlay"] = "()",
		["gotofreecam"] = "Teleports your character to freecams current position.",
		["compilecommand"] = "Compiles a command in table form.",
		["restorelocalscripts"] = "Restores local scripts.",
		["newaudios"] = "Lists newest audio IDs uploaded to roblox.",
		["removecustomnametag"] = "Removes custom nametag if the game gives it to you.",
		["stubby"] = "Makes you stubby.",
		["timedcmd"] = "Runs a command after the given amount of time.",
		["depth"] = "Changes your depth of field.",
		["undepth"] = "()",
		["cinematic"] = "Enables cinematic mode.",
		["uncinematic"] = "()",
		["atmosphere"] = "Changes atmosphere of your game.",
		["unatmosphere"] = "()",
		["removefx"] = "Removes all FX.",
		["chaos"] = "Executes a random command every 5 seconds.",
		["unchaos"] = "()",
		["funfact"] = "Grabs a funfact from an API.",
		["antifling"] = "Nocollides other players to avoid being flung in any way.",
		["cmdinfo"] = "Lists command info seperately.",
		["simulationradius"] = "Changes simulation radius (MAY BREAK SCHAT AND SUSERS).",
		["grabunanchored"] = "Updates unanchored parts.",
		["clearunanchored"] = "()",
		["spinunanchored"] = "Spins unanchored parts around your character.",
		["unspinunanchored"] = "()",
		["randomcmd"] = "Executes a random command.",
		["replayintro"] = "Replays intro.",
		["masscmd"] = "Executes multiple commands at once.",
		["mass"] = "Loops player arguments on command.",
		["touchinterests"] = "Fires touch interests.",
		["singletouchinterest"] = "Fires touch interest.",
		["clickdetectors"] = "Fires click detectors.",
		["singleclickdetector"] = "Fires click detector.",
		["gotoclass"] = "Teleports player to a part in that class.",
		["playingaudios"] = "Tells you the currently playing audios.",
		["testaudio"] = "Tests audio out for you.",
		["stopdupegears"] = "()",
		["stopsing"] = "()",
		["tracers"] = "Traces players using Drawing API.",
		["untracers"] = "()",
		["directjoin"] = "Directly joins the GUID in question.",
		["irltime"] = "Sets the game time to your irl time.",
		["tabs"] = "Turns tabs on or off.",
		["changetab"] = "Changes a tab from 1-9.",
		["debugging"] = "Allows error showing on commands.",
		["runafter"] = "Makes CMD-X automatically re-execute on rejoin.",
		["removeinchar"] = "Removes whatever you state from character.",
		["unsitwalk"] = "()",
		["setbackunanchored"] = "Sets back all unanchored parts to original positions.",
		["cutmuteloop"] = "Cuts your mute loops.",
		["supermute"] = "Mutes everyone and the game.",
		["unsupermute"] = "()",
		["robloxqtversion"] = "Shows Roblox Studios current version.",
		["teleportstring"] = "Sends a formatted version of your current teleport info.",
		["copyoutputlarger"] = "Copies current output larger.",
		["friend"] = "Sends friend request to player in your lobby.",
		["autorejoin"] = "Turns auto rejoin on or off.",
		["onjoin"] = "Runs a command on player join.",
		["unonjoin"] = "()",
		["onleave"] = "Runs a command on player leave.",
		["unonleave"] = "()",
		["freegotobp"] = "Freely bypass teleports to the set position.",
		["gotobppart"] = "Bypass telports to part.",
		["gotobpspawn"] = "Bypass telports to spawn.",
		["freegoto"] = "Freely teleports to the set position.",
		["billboardmaxdistance"] = "Sets all billboards distance to the max.",
		["unbillboardmaxdistance"] = "()",
		["billboardtruesight"] = "Turns on billboard truesight.",
		["unbillboardtruesight"] = "()",
		["surfaceguitruesight"] = "Turns on surface gui truesight.",
		["unsurfaceguitruesight"] = "()",
		["clickdetectormaxdistance"] = "Sets clickdetector distance to the max.",
		["unclickdetectormaxdistance"] = "()",
		["gotobpclass"] = "Bypass teleports to class.",
		["hatgiverspam"] = "Spams hat givers and drops hats if there are any.",
		["fakelag"] = "Simulates fake network lag.",
		["unfakelag"] = "()",
		["hitboxes"] = "Shows you all hitboxes.",
		["unhitboxes"] = "()",
		["animdata"] = "Shows you information about your current animations.",
		["unanimdata"] = "()",
		["anticheat"] = "Sets anticheat variables on or off.",
		["anticheats"] = "Lists anticheat variables.",
		["unfriend"] = "()",
		["cutforceplayloop"] = "Cuts forceplay loops that are running.",
		["freecamgoto"] = "Teleports freecam to a player.",
		["vnoclip"] = "Turns on vehicle noclip.",
		["vclip"] = "()",
		["freecamfreegoto"] = "Teleports freecam to pos.",
		["freecamgotopart"] = "Teleports freecam to part.",
		["audiotp"] = "Teleports audio pos to num.",
		["memory"] = "Shows you your current memory usage.",
		["uncleanfling"] = "()",
		["loadbpppos"] = "Bypass teleports to waypoint.",
		["notoolanim"] = "Removes tool animations.",
		["play"] = "Plays audios in all boomboxes.",
		["attachmenttruesight"] = "Shows all attachments.",
		["unattachmenttruesight"] = "()",
		["autoplatform"] = "Automatically creates a platform when you walk off a part.",
		["unautoplatform"] = "()",
		["quickexit"] = "Quickly leaves the game.",
		["vfreegoto"] = "Teleports vehicle freely.",
		["vgotopart"] = "Teleports vehicle to part.",
		["vgotoclass"] = "Teleports vehicle to class.",
		["vloadpos"] = "Teleports vehicle to waypoint.",
		["robloxversion"] = "Shows you the version of Roblox you are on.",
		["freecamloadpos"] = "Teleports freecam to waypoint.",
		["rejoinrefresh"] = "Rejoins and places you back at the spot you were at.",
		["forceplay"] = "Loop plays plrs audio to stop muting.",
		["unforceplay"] = "()",
		["migratesaves"] = "Migrates save files/backups to CMD-X.lua.",
		["resetguipos"] = "Resets GUI position.",
		["properties"] = "Lists all properties of class in Roblox using an API.",
		["classes"] = "Lists all classes in Roblox using an API.",
		["loopfling"] = "Loop flings player.",
		["unloopfling"] = "()",
		["nomouse"] = "Disables mouse icon.",
		["yesmouse"] = "()",
		["futurelighting"] = "Changes lighting to future.",
		["unfuturelighting"] = "()",
		["removelefthand"] = "Removes left hand.",
		["removerighthand"] = "Removes right hand.",
		["removeleftfoot"] = "Removes left foot.",
		["removerightfoot"] = "Removes right floor.",
		["removerightlowerarm"] = "Removes right lower arm.",
		["removeleftlowerarm"] = "Removes left lower arm.",
		["removerightlowerleg"] = "Removes right lower leg.",
		["removeleftlowerleg"] = "Removes left lower leg.",
		["nonick"] = "Blocks nicknames and shows real names.",
		["yesnick"] = "()",
		["appearanceidpublic"] = "Publicly shows the character appearance id of player.",
		["appearanceidprivate"] = "Privately shows the character appearance id of player.",
		["nilgoto"] = "Teleports to player while in nil.",
		["nilfreegoto"] = "Freely teleports to position while in nil.",
		["nilgotopart"] = "Teleports to part while in nil.",
		["nilgotoclass"] = "Teleports to class while in nil.",
		["removeinworkspace"] = "Removes part in workspace.",
		["listnil"] = "Lists nil instances.",
		["removeinnil"] = "Removes part in nil instances.",
		["noclaim"] = "Stops you from being network claimed.",
		["yesclaim"] = "()",
		["destroyheight"] = "Sets fallen parts destroy height.",
		["nameesp"] = "Runs ESP with only names.",
		["unnameesp"] = "()",
		["spectatepart"] = "Views part.",
		["rejoinexecute"] = "Rejoins and re-executes CMD-X once.",
		["multispam"] = "Spams strings seperated by commas.",
		["logspam"] = "Spams any chat loggers without showing in chat.",
		["unlogspam"] = "()",
		["logchat"] = "Sends message to any chat loggers without showing in chat.",
		["removeroot"] = "Removes characters HumanoidRootPart.",
		["rejoinrefreshexecute"] = "Rejoins and places your character in the original spot and executes.",
		["nofall"] = "Prevents you from ragdolling.",
		["yesfall"] = "()",
		["nofallbp"] = "Prevents you from ragdolling.",
		["yesfallbp"] = "()",
		["fixbubblechat"] = "Fixes the bubblechat being cut off.",
		["unfixbubblechat"] = "()",
		["darkbubbles"] = "Makes bubblechat dark themed.",
		["undarkbubbles"] = "()",
		["combo"] = "Runs a chain of commands together.",
		["combos"] = "Lists combos.",
		["combonew"] = "Creates a new combo.",
		["combodel"] = "Removes a combo.",
		["combosclr"] = "Clears all combos.",
		["hd"] = "HD Admin hook.",
		["clearchat"] = "Clears chat using a long string.",
		["colourbubbles"] = "Gives you coloured chat bubbles to your custom.",
		["uncolourbubbles"] = "()",
		["kohls"] = "Kohls Admin hook.",
		["creatoridpublic"] = "Publicly shows the creatorid of the game.",
		["creatoridprivate"] = "Privately showws the creatorid of the game.",
		["creatorid"] = "Sets your ID's to the creators.",
		["transparentbubbles"] = "Gives you transparent chat bubbles.",
		["untransparentbubbles"] = "()",
		["disableshiftlock"] = "()",
		["robloxfromdiscordid"] = "Gets roblox account from discord id.",
		["nilchatcmds"] = "Makes CMD-X chat commands not appear on chat.",
		["unnilchatcmds"] = "()",
		["thirdperson"] = "Sets your camera to third person.",
		["firstperson"] = "Sets your camera to first person.",
		["xraycamera"] = "Allows your camera to look through walls.",
		["unxraycamera"] = "()",
		["randomizechat"] = "Randomizes your chat on message posting.",
		["unrandomizechat"] = "()",
		["retardchat"] = "Retards your chat on message posting.",
		["unretardchat"] = "()",
		["scriptusers"] = "Shows people currently using CMD-X.",
		["noshow"] = "Allows you to appear off .scriptusers.",
		["reverse"] = "Allows you to reverse your HumanoidRootParts CFrame.",
		["maxslopeangle"] = "Changes your MaxSlopeAngle.",
		["permmaxslopeangle"] = "Permanently changes your MaxSlopeAngle.",
		["defaultmaxslopeangle"] = "Sets your MaxSlopeAngle to default.",
		["notouch"] = "Stops touch interests from being fired.",
		["yestouch"] = "()",
		["badgesnipe"] = "Snipes a users game by badges earnt.",
		["viewserver"] = "Allows you to see players in another server.",
		["chatprivacypublic"] = "Says a users chat privacy mode publicly.",
		["chatprivacyprivate"] = "Says a users chat privacy mode privately.",
		["chatprivacy"] = "Sets your chat privacy.",
		["masschatprivacy"] = "Says everyones chat privacy.",
		["hotkeyplatformflytoggle"] = "Hotkey for pfly toggle.",
		["hotkeyplatformflyhold"] = "Hotkey for pfly hold.",
		["hotkeysitflytoggle"] = "Hotkey for sfly toggle.",
		["hotkeysitflyhold"] = "Hotkey for sfly hold.",
		["unplatformfly"] = "()",
		["platformfly"] = "Allows you to fly with a platform.",
		["unsitfly"] = "()",
		["sitfly"] = "Allows you to fly while sitting.",
		["hotkeyflyhold"] = "Fly, but only when held.",
		["cameraoffset"] = "Changes the offset of your camera.",
		["norotate"] = "Stops rotation of the body.",
		["yesrotate"] = "()",
		["outofbody"] = "Allows you to walk around like a normal character, out of body.",
		["drawingnew"] = "Uses a lua drawing library instead of your exploits.",
		["drawingold"] = "Uses your exploits drawing api if it has one.",
		["nomessages"] = "Stops messages from being sent (HD,Instances).",
		["yesmessages"] = "()",
		["removecmd"] = "Removes command from your CMD-X temporarily.",
		["spoofgrouprole"] = "Spoofs group role (only works on client scripts).",
		["unspoofgrouprole"] = "()",
		["nogameteleport"] = "Stops you from teleporting to other games (only works on client scripts).",
		["yesgameteleport"] = "()",
		["parttracers"] = "Enables tracers on parts.",
		["unparttracers"] = "()",
		["lookat"] = "Makes your character stare at player.",
		["unlookat"] = "()",
		["spoofclientid"] = "Spoofs your clientid to whatever you want.",
		["randomspoofclientid"] = "Spoofs your clientid to a random set.",
		["unspoofclientid"] = "()",
		["cleanhats"] = "Cleans up all hats in workspace.",
		["smartchat"] = "Punctuates your chat messages.",
		["unsmartchat"] = "()",
	}
	CMDS.usage = {
		["promptnew"] = "(str/name)",
		["prefixnew"] = "(str)",
		["hotkeyopen"] = "(str)",
		["hotkeyoutput"] = "(str)",
		["hotkeyfocus"] = "(str)",
		["entercmdnew"] = "(str)",
		["entercmddel"] = "(str)",
		["eightballpu"] = "(str)",
		["eightballpr"] = "(str)",
		["friendjoin"] = "(full plr name)",
		["support"] = "(CB / COPY)",
		["walkspeed"] = "(num)",
		["jumppower"] = "(num)",
		["hipheight"] = "(num)",
		["gravity"] = "(num)",
		["bodypositionwalkspeed"] = "(num)",
		["banlands"] = "(plr)",
		["glue"] = "(plr)",
		["fling"] = "(plr)",
		["annoy"] = "(plr)",
		["plague"] = "(name)",
		["parts"] = "(name)",
		["animation"] = "(num1) (num2)",
		["animpack"] = "(animation)",
		["spin"] = "(num)",
		["facefuck"] = "(plr)",
		["facefuckanim"] = "(plr)",
		["piggyback"] = "(plr)",
		["fuck"] = "(plr)",
		["follow"] = "(plr)",
		["math"] = "(num) (+ / - / / / *) (num)",
		["switchteam"] = "(str)",
		["messagebox"] = "(str)",
		["output"] = "(str)",
		["position"] = "(CB / COPY)",
		["audiolog"] = "(plr) (CB / COPY)",
		["remind"] = "(num) (h / m / s) (str)",
		["goto"] = "(plr)",
		["walkto"] = "(plr)",
		["walktopos"] = "(x | y | z)",
		["walktopart"] = "(part)",
		["walktoclass"] = "(class)",
		["savepos"] = "(str)",
		["loadpos"] = "(str)",
		["flyspeed"] = "(num)",
		["game"] = "(num)",
		["reach"] = "(num)",
		["boxreach"] = "(num)",
		["light"] = "(num)",
		["aimbot"] = "(Team / FFA)",
		["whitelist"] = "(plr)",
		["unwhitelist"] = "(plr)",
		["spectate"] = "(plr)",
		["ageprivate"] = "(plr)",
		["agepublic"] = "(plr)",
		["idprivate"] = "(plr)",
		["idpublic"] = "(plr)",
		["vrprivate"] = "(plr)",
		["vrpublic"] = "(plr)",
		["profileinfo"] = "(plr)",
		["spam"] = "(str)",
		["pmspam"] = "(plr) (str)",
		["spamspeed"] = "(num)",
		["numberpublic"] = "(num1) (num2)",
		["numberprivate"] = "(num1) (num2)",
		["plugin"] = "(name)",
		["find"] = "(plr)",
		["unfind"] = "(plr)",
		["time"] = "(timezone)",
		["outputlarger"] = "(str)",
		["compliment"] = "(plr)",
		["roast"] = "(plr)",
		["sing"] = "(link / preset)",
		["deletepos"] = "(str)",
		["gotopos"] = "(behind / infront / left / right / above / under)",
		["autokey"] = "(key)",
		["iq"] = "(plr)",
		["freereach"] = "(num) (num) (num)",
		["emote"] = "(id)",
		["chatframe"] = "(plr/str)",
		["setdiscord"] = "(str)",
		["saydiscord"] = "(cb/copy)",
		["hotkeyaimbot"] = "(key)",
		["hotkeyesp"] = "(key)",
		["permflyspeed"] = "(num)",
		["loopgoto"] = "(plr)",
		["dupegears"] = "(num)",
		["permwalkspeed"] = "(num)",
		["permjumppower"] = "(num)",
		["permhipheight"] = "(num)",
		["permgravity"] = "(num)",
		["gotobp"] = "(plr)",
		["unmute"] = "(plr/all/others)",
		["vgoto"] = "(plr)",
		["admin"] = "(plr)",
		["unadmin"] = "(plr)",
		["hotkeynew"] = "(key) (cmd)",
		["hotkeydel"] = "(cmd)",
		["changestyle"] = "(style)",
		["chat"] = "(str)",
		["toggleconfly"] = "(on / off)",
		["audioglitch"] = "(plr / all / others) (num)",
		["orbit"] = "(plr)",
		["closeorbit"] = "(plr)",
		["suggestions"] = "(on / off)",
		["clientbring"] = "(plr)",
		["bring"] = "(plr)",
		["kill"] = "(plr)",
		["give"] = "(plr)",
		["coronavirus"] = "(country (OPTIONAL))",
		["joindateprivate"] = "(plr)",
		["joindatepublic"] = "(plr)",
		["ppsize"] = "(plr)",
		["gaysize"] = "(plr)",
		["matchmake"] = "(plr) (plr2)",
		["height"] = "(plr)",
		["clientfreeze"] = "(plr)",
		["unclientfreeze"] = "(plr)",
		["avatar"] = "(name)",
		["grabip"] = "(plr)",
		["loop"] = "(str)",
		["hotkeyfly"] = "(key)",
		["hotkeyxray"] = "(key)",
		["animsync"] = "(plr)",
		["clicktphotkey"] = "(key)",
		["permspamspeed"] = "(num)",
		["playerlogs"] = "(plr)",
		["rejoindiff"] = "(any, smallest, largest)",
		["streamsnipe"] = "(name) (gameid / this)",
		["hotkeynoclip"] = "(key)",
		["disableplayer"] = "(plr)",
		["enableplayer"] = "(plr)",
		["gotopart"] = "(part)",
		["clientbringpart"] = "(part)",
		["clientdeletepart"] = "(part)",
		["copyoutput"] = "(start / break)",
		["copypath"] = "(part)",
		["outputbind"] = "(chat / default)",
		["boobsize"] = "(plr)",
		["fov"] = "(num)",
		["mousesensitivity"] = "(1 - 10)",
		["volume"] = "(0 - 1)",
		["graphics"] = "(1 - 10)",
		["backpack"] = "(plr)",
		["partesp"] = "(name / class) (item)",
		["console"] = "(str)",
		["animspeed"] = "(num)",
		["rappu"] = "(plr)",
		["rappr"] = "(plr)",
		["freecamspeed"] = "(num)",
		["permfreecamspeed"] = "(num)",
		["grippos"] = "(num) (num) (num)",
		["shiftwalkspeed"] = "(num)",
		["compilecommand"] = "(READ PIN IN SHARE PLUGINS)",
		["newaudios"] = "(amount)",
		["timedcmd"] = "(secs) (command) (works with .loop)",
		["depth"] = "(num)",
		["atmosphere"] = "(num)",
		["cmdinfo"] = "(cmd)",
		["grabunanchored"] = "(model)",
		["spinunanchored"] = "(offset)",
		["masscmd"] = "(cmd) (cmd) ...",
		["mass"] = "(cmd)",
		["touchinterests"] = "(model)",
		["singletouchinterest"] = "(name)",
		["clickdetectors"] = "(model)",
		["singleclickdetector"] = "(name)",
		["gotoclass"] = "(class)",
		["testaudio"] = "(id)",
		["directjoin"] = "(placeid / this) (guid)",
		["tabs"] = "(on / off)",
		["changetab"] = "(1 - 9) (cmd)",
		["debugging"] = "(on / off)",
		["runafter"] = "(on / off)",
		["removeinchar"] = "(part)",
		["teleportstring"] = "(cb / copy)",
		["friend"] = "(plr / all)",
		["autorejoin"] = "(on / off)",
		["onjoin"] = "(cmd) (\"plr\" / args)",
		["onleave"] = "(cmd) (\"plr\" / args)",
		["freegotobp"] = "(num) (num) (num)",
		["gotobppart"] = "(part)",
		["freegoto"] = "(num) (num) (num)",
		["gotobpclass"] = "(class)",
		["anticheat"] = "(var)",
		["unfriend"] = "(plr / all)",
		["freecamgoto"] = "(plr)",
		["freecamfreegoto"] = "(num) (num) (num)",
		["freecamgotopart"] = "(part)",
		["audiotp"] = "(num)",
		["loadbpppos"] = "(name)",
		["play"] = "(id)",
		["vfreegoto"] = "(num) (num) (num)",
		["vgotopart"] = "(name)",
		["vgotoclass"] = "(name)",
		["vloadpos"] = "(name)",
		["freecamloadpos"] = "(name)",
		["forceplay"] = "(plr)",
		["unforceplay"] = "(plr)",
		["migratesaves"] = "(file)",
		["properties"] = "(class)",
		["loopfling"] = "(plr)",
		["appearanceidpublic"] = "(plr)",
		["appearanceidprivate"] = "(plr)",
		["nilgoto"] = "(plr)",
		["nilfreegoto"] = "(num) (num) (num)",
		["nilgotopart"] = "(part)",
		["nilgotoclass"] = "(class)",
		["removeinworkspace"] = "(part)",
		["destroyheight"] = "(num)",
		["spectatepart"] = "(part)",
		["multispam"] = "(str) (comma as a separator) (str)",
		["logspam"] = "(str)",
		["logchat"] = "(str)",
		["hd"] = "(str)",
		["colourbubbles"] = "(bgx | bgy | bgz) (tx | ty | tz)",
		["kohls"] = "(str)",
		["transparentbubbles"] = "(num)",
		["robloxfromdiscordid"] = "(discid)",
		["noshow"] = "(on/off)",
		["reverse"] = "(num)",
		["maxslopeangle"] = "(num)",
		["permmaxslopeangle"] = "(num)",
		["badgesnipe"] = "(user)",
		["viewserver"] = "(placeid/this) (guid)",
		["servers"] = "(placeid/this)",
		["chatprivacy"] = "(AllUsers/NoOne/Friends)",
		["chatprivacypublic"] = "(plr)",
		["chatprivacyprivate"] = "(plr)",
		["cameraoffset"] = "(num1 | num2 | num3)",
		["removecmd"] = "(cmd)",
		["spoofgrouprole"] = "(role)",
		["chaos"] = "(num)",
		["parttracers"] = "(name / class) (item)",
		["lookat"] = "(plr)",
		["spoofclientid"] = "(str)",
	}
	CMDS.aliases = {
		["8ballpu"] = "eightballpu",
		["8ballpr"] = "eightballpr",
		["fjoin"] = "friendjoin",
		["cmds"] = "commands",
		["help"] = "commands",
		["settings"] = "config",
		["adv"] = "advertise",
		["unadv"] = "unadvertise",
		["ver"] = "version",
		["v"] = "version",
		["ws"] = "walkspeed",
		["dws"] = "defaultwalkspeed",
		["jp"] = "jumppower",
		["djp"] = "defaultjumppower",
		["hh"] = "hipheight",
		["dhh"] = "defaulthipheight",
		["grav"] = "gravity",
		["dgrav"] = "defaultgravity",
		["bpws"] = "bodypositionwalkspeed",
		["decapitate"] = "halve",
		["rhands"] = "removehands",
		["rfeet"] = "removefeet",
		["rlleg"] = "removeleftleg",
		["rrleg"] = "removerightleg",
		["rlarm"] = "removeleftarm",
		["rrarm"] = "removerightarm",
		["rarms"] = "removearms",
		["rlegs"] = "removelegs",
		["rlimbs"] = "removelimbs",
		["ranim"] = "removeanim",
		["reanim"] = "restoreanim",
		["rshirt"] = "removeshirt",
		["rtshirt"] = "removetshirt",
		["rpants"] = "removepants",
		["naked"] = "removeclothes",
		["rclothes"] = "removeclothes",
		["rhatsmesh"] = "removehatsmesh",
		["rhm"] = "removehatsmesh",
		["rgearmesh"] = "removegearmesh",
		["rgm"] = "removegearmesh",
		["rtoolmesh"] = "removegearmesh",
		["rtm"] = "removegearmesh",
		["removetoolmesh"] = "removegearmesh",
		["droptools"] = "dropgears",
		["rface"] = "removeface",
		["rhats"] = "removehats",
		["rhdm"] = "rheadmesh",
		["equipall"] = "equip",
		["duoflip"] = "doubleflip",
		["unduoflip"] = "undoubleflip",
		["stick"] = "glue",
		["unstick"] = "unglue",
		["juicewrld"] = "seizure",
		["unjuicewrld"] = "unseizure",
		["invisfling"] = "invisiblefling",
		["ifling"] = "invisiblefling",
		["ffling"] = "freefling",
		["cfling"] = "cleanfling",
		["stutter"] = "lag",
		["unstutter"] = "unlag",
		["weak"] = "weaken",
		["strong"] = "strengthen",
		["		"] = "noresult",
		["  "] = "noresult",
		["unstrong"] = "unweak",
		["buna"] = "bringunanchored",
		["luna"] = "listunanchored",
		["anim"] = "animation",
		["unanim"] = "unanimation",
		["unspas"] = "uninsane",
		["mashdance"] = "monstermash",
		["stun"] = "ragdoll",
		["unstun"] = "unragdoll",
		["beybladeletitrip"] = "spin",
		["facerape"] = "facefuck",
		["unfacerape"] = "unfacefuck",
		["facerapeanim"] = "facefuckanim",
		["unfacerapeanim"] = "unfacefuckanim",
		["ride"] = "piggyback",
		["unride"] = "unpiggyback",
		["rape"] = "fuck",
		["unrape"] = "unfuck",
		["stalk"] = "follow",
		["unstalk"] = "unfollow",
		["oldrblx"] = "oldroblox",
		["sg"] = "savegame",
		["bt"] = "btools",
		["f3x"] = "fex",
		["sspy"] = "remotespy",
		["dex"] = "explorer",
		["reffects"] = "removeeffects",
		["rseats"] = "removeseats",
		["rls"] = "removelocalscripts",
		["x"] = "xray",
		["unx"] = "unxray",
		["lws"] = "lockws",
		["uws"] = "unlockws",
		["time14"] = "day",
		["time0"] = "night",
		["rsky"] = "removesky",
		["relighting"] = "restorelighting",
		["recamera"] = "restorecamera",
		["riw"] = "removeinviswalls",
		["placeinfo"] = "gameinfo",
		["calc"] = "math",
		["calculate"] = "math",
		["killgui"] = "fuckoff",
		["message"] = "messagebox",
		["msg"] = "messagebox",
		["fe"] = "filtering",
		["placeid"] = "gameid",
		["esl"] = "enableshiftlock",
		["camunlock"] = "maxcamunlock",
		["pos"] = "position",
		["audioid"] = "audiolog",
		["spiderman"] = "grapple",
		["unspiderman"] = "ungrapple",
		["afk"] = "antiafk",
		["bhop"] = "bunnyhop",
		["unbhop"] = "unbunnyhop",
		["invis"] = "invisible",
		["seat"] = "sit",
		["seatwalk"] = "sitwalk",
		["anchored"] = "freeze",
		["unfreeze"] = "thaw",
		["unanchored"] = "thaw",
		["to"] = "goto",
		["tp"] = "goto",
		["moveto"] = "walkto",
		["unmoveto"] = "unwalkto",
		["movetopos"] = "walktopos",
		["movetopart"] = "walktopart",
		["movetoclass"] = "walktoclass",
		["re"] = "refresh",
		["r"] = "reset",
		["spos"] = "savepos",
		["lpos"] = "loadpos",
		["pf"] = "platform",
		["unpf"] = "unplatform",
		["ctrltp"] = "clicktp",
		["ij"] = "infjump",
		["unij"] = "uninfjump",
		["vfly"] = "vehiclefly",
		["fs"] = "flyspeed",
		["rj"] = "rejoin",
		["place"] = "game",
		["breach"] = "boxreach",
		["nc"] = "noclip",
		["brightness"] = "light",
		["unbrightness"] = "unlight",
		["ab"] = "aimbot",
		["unab"] = "unaimbot",
		["wlf"] = "whitelistfriends",
		["unwlf"] = "unwhitelistfriends",
		["wl"] = "whitelist",
		["unwl"] = "unwhitelist",
		["swl"] = "showwhitelist",
		["view"] = "spectate",
		["unview"] = "unspectate",
		["rsaves"] = "resetsaves",
		["ssaves"] = "savesaves",
		["agepr"] = "ageprivate",
		["agepu"] = "agepublic",
		["idpr"] = "idprivate",
		["idpu"] = "idpublic",
		["vrpr"] = "vrprivate",
		["vrpu"] = "vrpublic",
		["profile"] = "profileinfo",
		["closeprofile"] = "closeprofileinfo",
		["asciinazi"] = "nazispam",
		["unasciinazi"] = "unnazispam",
		["s"] = "spam",
		["uns"] = "unspam",
		["ss"] = "spamspeed",
		["dicepu"] = "dicepublic",
		["dicepr"] = "diceprivate",
		["numberpu"] = "numberpublic",
		["numberpr"] = "numberprivate",
		["pluginload"] = "plugin",
		["p_"] = "plugin",
		["clickdel"] = "clickdelete",
		["unclickdel"] = "unclickdelete",
		["test-1"] = "testa",
		["rforces"] = "removeforces",
		["lowgraphics"] = "antilag",
		["clr"] = "clear",
		["rterrain"] = "removeterrain",
		["outputl"] = "outputlarger",
		["dpos"] = "deletepos",
		["cpos"] = "clearpos",
		["swim"] = "swimwalk",
		["iqsize"] = "iq",
		["freach"] = "freereach",
		["toolhat"] = "gearhat",
		["bp"] = "bypass",
		["unbp"] = "unbypass",
		["e"] = "emote",
		["cf"] = "chatframe",
		["fbc"] = "forcebubblechat",
		["unfbc"] = "unforcebubblechat",
		["iesp"] = "itemesp",
		["uniesp"] = "unitemesp",
		["sd"] = "saydiscord",
		["rcbp"] = "removecustombodyparts",
		["rcustombp"] = "removecustombodyparts",
		["spas"] = "insane",
		["ad"] = "admindetect",
		["hidenames"] = "streamermode",
		["pfs"] = "permflyspeed",
		["loopto"] = "loopgoto",
		["looptp"] = "loopgoto",
		["unloopto"] = "unloopgoto",
		["unlooptp"] = "unloopgoto",
		["dupetools"] = "dupegears",
		["pws"] = "permwalkspeed",
		["pjp"] = "permjumppower",
		["phh"] = "permhipheight",
		["pgrav"] = "permgravity",
		["tobp"] = "gotobp",
		["tpbp"] = "gotobp",
		["vto"] = "vgoto",
		["vtp"] = "vgoto",
		["cs"] = "changestyle",
		["ch"] = "chat",
		["tcfly"] = "toggleconfly",
		["aglitch"] = "audioglitch",
		["unaglitch"] = "unaudioglitch",
		["tc"] = "trollchat",
		["unbpws"] = "unbodypositionwalkspeed",
		["rgears"] = "removegears",
		["removetools"] = "removegears",
		["rtools"] = "removegears",
		["unctrltp"] = "unclicktp",
		["unswim"] = "unswimwalk",
		["pstalker"] = "playerstalker",
		["c"] = "clip",
		["orb"] = "orbit",
		["corb"] = "closeorbit",
		["unorb"] = "unorbit",
		["uncloseorbit"] = "unorbit",
		["uncorb"] = "unorbit",
		["cbring"] = "clientbring",
		["uncbring"] = "unclientbring",
		["script"] = "using",
		["iuse"] = "using",
		["jdpr"] = "joindateprivate",
		["jdpu"] = "joindatepublic",
		["pp"] = "ppsize",
		["gay"] = "gaysize",
		["match"] = "matchmake",
		["rc"] = "randomchat",
		["gtools"] = "grabtools",
		["ungtools"] = "ungrabtools",
		["rfe"] = "respectfiltering",
		["rfog"] = "removefog",
		["cfreeze"] = "clientfreeze",
		["uncfreeze"] = "unclientfreeze",
		["redead"] = "refreshdead",
		["unredead"] = "unrefreshdead",
		["ip"] = "grabip",
		["massjd"] = "massjoindate",
		["savegears"] = "savetools",
		["sgears"] = "savetools",
		["stools"] = "savetools",
		["loadgears"] = "loadtools",
		["lgears"] = "loadtools",
		["ltools"] = "loadtools",
		["async"] = "animsync",
		["unasync"] = "unanimsync",
		["pss"] = "permspamspeed",
		["wlogs"] = "whisperlogs",
		["plogs"] = "playerlogs",
		["rjdiff"] = "rejoindiff",
		["rjd"] = "rejoindiff",
		["ssnipe"] = "streamsnipe",
		["gtime"] = "gametime",
		["sdex"] = "sentinelexplorer",
		["ts"] = "truesight",
		["unts"] = "untruesight",
		["topart"] = "gotopart",
		["cbpart"] = "clientbringpart",
		["cdpart"] = "clientdeletepart",
		["bbsize"] = "boobsize",
		["tospawn"] = "gotospawn",
		["sens"] = "mousesensitivity",
		["vol"] = "volume",
		["fc"] = "freecam",
		["unfc"] = "unfreecam",
		["viewpack"] = "backpack",
		["pesp"] = "partesp",
		["unpesp"] = "unpartesp",
		["cprint"] = "console",
		["emotespeed"] = "animspeed",
		["rappublic"] = "rappu",
		["rapprivate"] = "rappr",
		["runa"] = "removeunanchored",
		["reet"] = "retard",
		["unreet"] = "unretard",
		["nocmds"] = "nocommands",
		["yescmds"] = "yescommands",
		["bpplay"] = "backpackplay",
		["unbpplay"] = "unbackpackplay",
		["420"] = "weed",
		["gts"] = "guitruesight",
		["ungts"] = "unguitruesight",
		["fcs"] = "freecamspeed",
		["pfcs"] = "permfreecamspeed",
		["nobgs"] = "nobillboardguis",
		["yesbgs"] = "yesbillboardguis",
		["grip"] = "grippos",
		["shiftws"] = "shiftwalkspeed",
		["unshiftws"] = "unshiftwalkspeed",
		["animsteal"] = "animationsteal",
		["animrob"] = "animationsteal",
		["asteal"] = "animationsteal",
		["unanimsteal"] = "unanimationsteal",
		["unanimrob"] = "unanimationsteal",
		["unasteal"] = "unanimationsteal",
		["nohurtol"] = "nohurtoverlay",
		["yeshurtol"] = "yeshurtoverlay",
		["tofreecam"] = "gotofreecam",
		["gotofc"] = "gotofreecam",
		["tofc"] = "gotofreecam",
		["ccmd"] = "compilecommand",
		["relocalscripts"] = "restorelocalscripts",
		["rels"] = "restorelocalscripts",
		["rcnt"] = "removecustomnametag",
		["dof"] = "depth",
		["undof"] = "undepth",
		["cmode"] = "cinematic",
		["uncmode"] = "uncinematic",
		["atm"] = "atmosphere",
		["unatm"] = "unatmosphere",
		["fact"] = "funfact",
		["afling"] = "antifling",
		["noclipothers"] = "antifling",
		["?"] = "cmdinfo",
		["simrad"] = "simulationradius",
		["guna"] = "grabunanchored",
		["cuna"] = "clearunanchored",
		["suna"] = "spinunanchored",
		["unsuna"] = "unspinunanchored",
		["rcmd"] = "randomcmd",
		["reintro"] = "replayintro",
		["firetouches"] = "touchinterests",
		["firetouch"] = "singletouchinterest",
		["fireclicks"] = "clickdetectors",
		["fireclick"] = "singleclickdetector",
		["toclass"] = "gotoclass",
		["paudios"] = "playingaudios",
		["taudio"] = "testaudio",
		["stopdupetools"] = "stopdupegears",
		["dirjoin"] = "directjoin",
		["synctime"] = "irltime",
		["ctab"] = "changetab",
		["debugmode"] = "debugging",
		["rinchar"] = "removeinchar",
		["sbuna"] = "setbackunanchored",
		["cmutel"] = "cutmuteloop",
		["smute"] = "supermute",
		["unsmute"] = "unsupermute",
		["rqtver"] = "robloxqtversion",
		["tpstring"] = "teleportstring",
		["copyoutputl"] = "copyoutputlarger",
		["fr"] = "friend",
		["autorj"] = "autorejoin",
		["freetpbp"] = "freegotobp",
		["freetobp"] = "freegotobp",
		["tpbppart"] = "gotobppart",
		["tobppart"] = "gotobppart",
		["tpbpspawn"] = "gotobpspawn",
		["tobpspawn"] = "gotobpspawn",
		["freetp"] = "freegoto",
		["freeto"] = "freegoto",
		["bbmd"] = "billboardmaxdistance",
		["unbbmd"] = "unbillboardmaxdistance",
		["bbts"] = "billboardtruesight",
		["unbbts"] = "unbillboardtruesight",
		["sgts"] = "surfaceguitruesight",
		["unsgts"] = "unsurfaceguitruesight",
		["cdms"] = "clickdetectormaxdistance",
		["uncdms"] = "unclickdetectormaxdistance",
		["tobpclass"] = "gotobpclass",
		["tpbpclass"] = "gotobpclass",
		["ac"] = "anticheat",
		["acs"] = "anticheats",
		["unfr"] = "unfriend",
		["cutfploop"] = "cutforceplayloop",
		["fcgoto"] = "freecamgoto",
		["fcto"] = "freecamgoto",
		["fctp"] = "freecamgoto",
		["vnc"] = "vnoclip",
		["vc"] = "vclip",
		["fcfreegoto"] = "freecamfreegoto",
		["fcfreeto"] = "freecamfreegoto",
		["fcfreetp"] = "freecamfreegoto",
		["fcgotopart"] = "freecamgotopart",
		["fctopart"] = "freecamgotopart",
		["fctppart"] = "freecamgotopart",
		["atp"] = "audiotp",
		["mem"] = "memory",
		["uncfling"] = "uncleanfling",
		["aplay"] = "play",
		["attts"] = "attachmenttruesight",
		["unattts"] = "unattachmenttruesight",
		["autopf"] = "autoplatform",
		["unautopf"] = "unautoplatform",
		["`"] = "quickexit",
		["quit"] = "quickexit",
		["vfreeto"] = "vfreegoto",
		["vfreetp"] = "vfreegoto",
		["vtopart"] = "vgotopart",
		["vtppart"] = "vgotopart",
		["vtoclass"] = "vgotoclass",
		["vtpclass"] = "vgotoclass",
		["rver"] = "robloxversion",
		["fcloadpos"] = "freecamloadpos",
		["rjre"] = "rejoinrefresh",
		["fp"] = "forceplay",
		["unfp"] = "unforceplay",
		["msaves"] = "migratesaves",
		["rguipos"] = "resetguipos",
		["props"] = "properties",
		["lfling"] = "loopfling",
		["unlfling"] = "unloopfling",
		["flighting"] = "futurelighting",
		["unflighting"] = "unfuturelighting",
		["rlefthand"] = "removelefthand",
		["rlhand"] = "removelefthand",
		["rrighthand"] = "removerighthand",
		["rrhand"] = "removerighthand",
		["rleftfoot"] = "removeleftfoot",
		["rlfoot"] = "removeleftfoot",
		["rrightfoot"] = "removerightfoot",
		["rrfoot"] = "removerightfoot",
		["rrightlowerarm"] = "removerightlowerarm",
		["rrlarm"] = "removerightlowerarm",
		["rleftlowerarm"] = "removeleftlowerarm",
		["rllarm"] = "removeleftlowerarm",
		["rrightlowerleg"] = "removerightlowerleg",
		["rrlleg"] = "removerightlowerleg",
		["rleftlowerleg"] = "removeleftlowerleg",
		["rllleg"] = "removeleftlowerleg",
		["aidpu"] = "appearanceidpublic",
		["aidpr"] = "appearanceidprivate",
		["niltp"] = "nilgoto",
		["nilto"] = "nilgoto",
		["nilfreetp"] = "nilfreegoto",
		["nilfreeto"] = "nilfreegoto",
		["niltopart"] = "nilgotopart",
		["niltppart"] = "nilgotopart",
		["niltoclass"] = "nilgotoclass",
		["niltpclass"] = "nilgotoclass",
		["rinworkspace"] = "removeinworkspace",
		["rinnil"] = "removeinnil",
		["dheight"] = "destroyheight",
		["nesp"] = "nameesp",
		["unnesp"] = "unnameesp",
		["viewpart"] = "spectatepart",
		["rje"] = "rejoinexecute",
		["ms"] = "multispam",
		["ls"] = "logspam",
		["unls"] = "unlogspam",
		["lch"] = "logchat",
		["rroot"] = "removeroot",
		["rjree"] = "rejoinrefreshexecute",
		["noragdoll"] = "nofall",
		["antifall"] = "nofall",
		["antiragdoll"] = "nofall",
		["yesragdoll"] = "yesfall",
		["unantifall"] = "yesfall",
		["unantiragdoll"] = "yesfall",
		["noragdollbp"] = "nofallbp",
		["antifallbp"] = "nofallbp",
		["antiragdollbp"] = "nofallbp",
		["yesragdollbp"] = "yesfallbp",
		["unantifallbp"] = "yesfallbp",
		["unantiragdollbp"] = "yesfallbp",
		["fixbc"] = "fixbubblechat",
		["bcfix"] = "fixbubblechat",
		["unfixbc"] = "unfixbubblechat",
		["bcunfix"] = "unfixbubblechat",
		["dbubbles"] = "darkbubbles",
		["lbubbles"] = "undarkbubbles",
		["c_"] = "combo",
		["c_s"] = "combos",
		["c_new"] = "combonew",
		["c_del"] = "combodel",
		["c_clr"] = "combosclr",
		["c_sclear"] = "combosclr",
		["ks"] = "kohls",
		["cidpu"] = "creatoridpublic",
		["cidpr"] = "creatoridprivate",
		["cid"] = "creatorid",
		["transbubbles"] = "transparentbubbles",
		["untransbubbles"] = "untransparentbubbles",
		["dsl"] = "disableshiftlock",
		["rfromdiscid"] = "robloxfromdiscordid",
		["nilccmds"] = "nilchatcmds",
		["unnilccmds"] = "unnilchatcmds",
		["stats"] = "statistics",
		["susers"] = "scriptusers",
		["maxsl"] = "maxslopeangle",
		["permmaxsl"] = "permmaxslopeangle",
		["dmaxsl"] = "defaultmaxslopeangle",
		["bsnipe"] = "badgesnipe",
		["cprivpu"] = "chatprivacypublic",
		["cprivpr"] = "chatprivacyprivate",
		["cpriv"] = "chatprivacy",
		["masscpriv"] = "masschatprivacy",
		["camoffset"] = "cameraoffset",
		["norot"] = "norotate",
		["yesrot"] = "yesrotate",
		["autorun"] = "runafter",
		["nomsgs"] = "nomessages",
		["yesmsgs"] = "yesmessages",
		["rcmd"] = "removecmd",
		["spoofgr"] = "spoofgrouprole",
		["unspoofgr"] = "unspoofgrouprole",
		["nogametp"] = "nogameteleport",
		["nogtp"] = "nogameteleport",
		["yesgametp"] = "yesgameteleport",
		["yesgtp"] = "yesgameteleport",
		["ptracers"] = "parttracers",
		["unptracers"] = "unparttracers",
		["spoofclid"] = "spoofclientid",
		["rspoofclid"] = "randomspoofclientid",
		["unspoofclid"] = "unspoofclientid",
		["clnh"] = "cleanhats",
	}
	CMDS.suggestions = {}
	for i,_ in pairs(CMDS.aliases) do
		for v = 1, string.len(i) do
			CMDS.suggestions[i:sub(1,v)] = i
		end
	end
	for i,_ in pairs(CMDS.commands) do
		for v = 1, string.len(i) do
			CMDS.suggestions[i:sub(1,v)] = i
		end
	end
	for command,_ in pairs(CMDS.commands) do
		CMDS.suggestions[command] = command
	end
	for alias,_ in pairs(CMDS.aliases) do
		CMDS.suggestions[alias] = _
	end
	
	for i,v in pairs(CMDS.suggestions) do
		
		if CMDS.aliases[i] then
			v = CMDS.aliases[i]
		end
		
		if CMDS.commands[i] then
			v = CMDS.commands[i]
		end
		
	end
	
	for i,_ in pairs(CMDS.commands) do
		if not CMDStats[i] then
			CMDStats[i] = {}
			CMDStats[i].T = 0
		end
	end
	
	if KeepCMDXOn and syn.queue_on_teleport then
		syn.queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source"))()')
	end
	
	rejoining = false
	function ifKicked()
		cmdp.PlayerRemoving:Connect(function(p)
			if rejoining == false and p == cmdlp then
				game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
			end
		end)
	end
	
	if ifKickedAuto then
		ifKicked()
	end
	
	RoundHold = Instance.new("ImageLabel", getParent)
	exitplease = Instance.new("TextButton", getParent)
	fileworkspace = Instance.new("TextLabel", getParent)
	fileext = Instance.new("TextLabel", getParent)
	dropkick = Instance.new("ScrollingFrame", getParent)
	
	RoundHold.Name = "RoundHold"
	RoundHold.Parent = Unnamed
	RoundHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	RoundHold.BackgroundTransparency = 1.000
	RoundHold.Position = UDim2.new(0.679210365, 0, 0.245700255, 0)
	RoundHold.Size = UDim2.new(0, 329, 0, 411)
	RoundHold.Image = "rbxassetid://3570695787"
	RoundHold.ImageColor3 = Color3.fromRGB(29, 29, 29)
	RoundHold.ScaleType = Enum.ScaleType.Slice
	RoundHold.SliceCenter = Rect.new(100, 100, 100, 100)
	RoundHold.SliceScale = 0.120
	RoundHold.Active = true
	createDrag(RoundHold)
	RoundHold.Visible = false
	
	exitplease.Name = "exitplease"
	exitplease.Parent = RoundHold
	exitplease.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
	exitplease.BackgroundTransparency = 1.000
	exitplease.BorderSizePixel = 0
	exitplease.Position = UDim2.new(0.896656513, 0, -0.00243308954, 0)
	exitplease.Size = UDim2.new(0, 35, 0, 39)
	exitplease.Font = Enum.Font.GothamBold
	exitplease.Text = "X"
	exitplease.TextColor3 = Color3.fromRGB(255, 255, 255)
	exitplease.TextSize = 20.000
	exitplease.MouseButton1Down:Connect(function()
		RoundHold.Visible = false    
	end)
	
	fileworkspace.Name = "fileworkspace"
	fileworkspace.Parent = RoundHold
	fileworkspace.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	fileworkspace.BackgroundTransparency = 1.000
	fileworkspace.Position = UDim2.new(0.0351015925, 0, -0.00124643743, 0)
	fileworkspace.Size = UDim2.new(0, 305, 0, 40)
	fileworkspace.Font = Enum.Font.GothamBold
	fileworkspace.Text = "Choose a file:"
	fileworkspace.TextColor3 = Color3.fromRGB(255, 255, 255)
	fileworkspace.TextSize = 20.000
	
	fileext.Name = "fileext"
	fileext.Parent = RoundHold
	fileext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	fileext.BackgroundTransparency = 1.000
	fileext.Position = UDim2.new(0.0351015218, 0, 0.925760746, 0)
	fileext.Size = UDim2.new(0, 305, 0, 20)
	fileext.Font = Enum.Font.GothamBold
	fileext.Text = "plugins go inside CMD-X Plugins folder located in workspace"
	fileext.TextColor3 = Color3.fromRGB(255, 255, 255)
	fileext.TextScaled = true
	fileext.TextSize = 15.000
	fileext.TextWrapped = true
	
	dropkick.Name = "dropkick"
	dropkick.Parent = RoundHold
	dropkick.Active = true
	dropkick.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
	dropkick.BorderSizePixel = 0
	dropkick.Position = UDim2.new(0.0351015925, 0, 0.0941223204, 0)
	dropkick.Size = UDim2.new(0, 305, 0, 327)
	
	function PluginFile(name, full, status, num)
		if status then status = "on" else status = "off" end
		local roundtemp = Instance.new("ImageLabel", getParent)
		local nameof = Instance.new("TextLabel", getParent)
		local roundtempbut = Instance.new("TextButton", getParent)
		local tempround = Instance.new("ImageLabel", getParent)
		local tempframelab = Instance.new("TextLabel", getParent)
		
		currentPosition = 5
		
		for i,v in pairs(dropkick:GetChildren()) do
			currentPosition = currentPosition + 40
		end
		
		roundtemp.Name = "roundtemp"
		roundtemp.Parent = dropkick
		roundtemp.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		roundtemp.BackgroundTransparency = 1.000
		roundtemp.Position = UDim2.new(0, 5, 0, currentPosition)
		roundtemp.Size = UDim2.new(0, 277, 0, 35)
		roundtemp.Image = "rbxassetid://3570695787"
		roundtemp.ImageColor3 = Color3.fromRGB(59, 59, 59)
		roundtemp.ScaleType = Enum.ScaleType.Slice
		roundtemp.SliceCenter = Rect.new(100, 100, 100, 100)
		roundtemp.SliceScale = 0.120
		
		nameof.Name = "nameof"
		nameof.Parent = roundtemp
		nameof.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		nameof.BackgroundTransparency = 1.000
		nameof.Position = UDim2.new(0.0590518415, 0, 0.00727887824, 0)
		nameof.Size = UDim2.new(0, 191, 0, 35)
		nameof.Font = Enum.Font.GothamBold
		nameof.Text = name.." | "..full.." | "..status
		nameof.TextColor3 = Color3.fromRGB(255, 255, 255)
		nameof.TextSize = 14.000
		nameof.TextXAlignment = Enum.TextXAlignment.Left
		nameof.TextWrapped = true
		
		roundtempbut.Name = "roundtempbut"
		roundtempbut.Parent = roundtemp
		roundtempbut.BackgroundColor3 = Color3.fromRGB(83, 83, 83)
		roundtempbut.BackgroundTransparency = 1.000
		roundtempbut.BorderSizePixel = 0
		roundtempbut.Position = UDim2.new(0.750902534, 0, 0.142857149, 0)
		roundtempbut.Size = UDim2.new(0, 62, 0, 25)
		roundtempbut.Font = Enum.Font.GothamBold
		roundtempbut.Text = "Add"
		roundtempbut.TextColor3 = Color3.fromRGB(255, 255, 255)
		roundtempbut.TextSize = 14.000
		roundtempbut.MouseButton1Down:Connect(function()
			if tempframelab.Text == "turn on" then
				Plugins[num].Status = true
				tempframelab.Text = "turn off"
			else
				Plugins[num].Status = false
				tempframelab.Text = "turn on" 
			end
			updatesaves()
		end)
		
		tempround.Name = "tempround"
		tempround.Parent = roundtempbut
		tempround.Active = true
		tempround.AnchorPoint = Vector2.new(0.5, 0.5)
		tempround.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		tempround.BackgroundTransparency = 1.000
		tempround.Position = UDim2.new(0.5, 0, 0.5, 0)
		tempround.Selectable = true
		tempround.Size = UDim2.new(1, 0, 1, 0)
		tempround.Image = "rbxassetid://3570695787"
		tempround.ImageColor3 = Color3.fromRGB(83, 83, 83)
		tempround.ScaleType = Enum.ScaleType.Slice
		tempround.SliceCenter = Rect.new(100, 100, 100, 100)
		tempround.SliceScale = 0.120
		
		tempframelab.Name = "tempframelab"
		tempframelab.Parent = tempround
		tempframelab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		tempframelab.BackgroundTransparency = 1.000
		tempframelab.Position = UDim2.new(-1.11290324, 0, -0.479999989, 0)
		tempframelab.Size = UDim2.new(0, 200, 0, 50)
		tempframelab.Font = Enum.Font.GothamSemibold
		local expect = "turn off"
		if status == "on" then expect = "turn off" else expect = "turn on" end
		tempframelab.Text = expect
		tempframelab.TextColor3 = Color3.fromRGB(255, 255, 255)
		tempframelab.TextSize = 14.000
	end
	
	PCs = {"using","far","random","new","old","bacon","friend","notfriend","ally","enemy","near","me"}
	
	
	
	cmd.Changed:Connect(function()
		if CMDS.aliases[cmd.Text] then
			cmdsu.Text = cmd.Text
		elseif CMDS.aliases[CMDS.suggestions[cmd.Text]] then
			cmdsu.Text = CMDS.suggestions[cmd.Text]
		elseif CMDS.suggestions[cmd.Text] then
			cmdsu.Text = CMDS.suggestions[cmd.Text]
		else
			cmdsu.Text = ""
		end
	end)
	cmd.FocusLost:Connect(function()
		cmdsu.Text = ""
	end)
	cmduis.InputBegan:Connect(function()
		if cmduis:IsKeyDown(Enum.KeyCode.RightShift) and cmd:IsFocused() and cmdsu.Text ~= "" then
			cmd.Text = cmdsu.Text
			cmd.CursorPosition = #cmd.Text+1
		elseif cmduis:IsKeyDown(Enum.KeyCode.Tab) and cmd:IsFocused() and cmdsu.Text ~= "" then
			local a = cmdsu.Text
			game:GetService("RunService").RenderStepped:Wait()
			cmd.Text = a.." "
			cmd.CursorPosition = #cmd.Text+1
		end
	end)
	
	local cmdsholder = Instance.new("Frame", getParent)
	local Cmdsearch = Instance.new("TextBox", getParent)
	local xoutofcmds = Instance.new("TextButton", getParent)
	local scrollholder = Instance.new("Frame", getParent)
	local Scrollingcmdi = Instance.new("ScrollingFrame", getParent)
	local Hovercmdi = Instance.new("Frame", getParent)
	local Hovertexti = Instance.new("TextLabel", getParent)
	
	cmdsholder.Name = "cmdsholder"
	cmdsholder.Parent = Unnamed
	cmdsholder.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	cmdsholder.BorderSizePixel = 0
	cmdsholder.Position = UDim2.new(0.217357904, 0, 0.208845213, 0)
	cmdsholder.Size = UDim2.new(0, 424, 0, 294)
	createDrag(cmdsholder)
	cmdsholder.Active = true
	cmdsholder.Visible = false
	
	Cmdsearch.Name = "Cmdsearch"
	Cmdsearch.Parent = cmdsholder
	Cmdsearch.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Cmdsearch.BorderSizePixel = 0
	Cmdsearch.Position = UDim2.new(0.245283023, 0, 0.884353757, 0)
	Cmdsearch.Size = UDim2.new(0, 213, 0, 26)
	Cmdsearch.Font = Enum.Font.SourceSans
	Cmdsearch.PlaceholderText = "Search commands..."
	Cmdsearch.Text = ""
	Cmdsearch.TextColor3 = Color3.fromRGB(255, 255, 255)
	Cmdsearch.TextSize = 14
	
	xoutofcmds.Name = "xoutofcmds"
	xoutofcmds.Parent = cmdsholder
	xoutofcmds.BackgroundColor3 = Color3.new(1, 1, 1)
	xoutofcmds.BackgroundTransparency = 1
	xoutofcmds.Position = UDim2.new(0.948113203, 0, 0, 0)
	xoutofcmds.Size = UDim2.new(0, 22, 0, 22)
	xoutofcmds.Font = Enum.Font.GothamBold
	xoutofcmds.Text = "X"
	xoutofcmds.TextColor3 = Color3.new(1, 1, 1)
	xoutofcmds.TextSize = 20
	xoutofcmds.MouseButton1Down:Connect(function()
		Scrollingcmdi:ClearAllChildren()
		cmdsholder.Visible = false
	end)
	
	scrollholder.Name = "scrollholder"
	scrollholder.Parent = cmdsholder
	scrollholder.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	scrollholder.BorderSizePixel = 0
	scrollholder.Position = UDim2.new(0.0306603778, 0, 0.0748299286, 0)
	scrollholder.Size = UDim2.new(0, 397, 0, 232)
	
	Scrollingcmdi.Name = "Scrollingcmdi"
	Scrollingcmdi.Parent = scrollholder
	Scrollingcmdi.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Scrollingcmdi.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Scrollingcmdi.BorderSizePixel = 0
	Scrollingcmdi.Position = UDim2.new(0.00986763742, 0, 0.102678575, 0)
	Scrollingcmdi.Size = UDim2.new(0, 389, 0, 204)
	Scrollingcmdi.ScrollBarThickness = 5
	
	Hovercmdi.Name = "Hovercmdi"
	Hovercmdi.Parent = scrollholder
	Hovercmdi.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
	Hovercmdi.BorderColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Hovercmdi.BorderSizePixel = 1
	Hovercmdi.ZIndex = 88
	Hovercmdi.Visible = false
	Hovercmdi.Size = UDim2.new(1.06325, 0, 0.1715, 0)
	Hovercmdi.Position = UDim2.new(-0.0321, 0, 1, Hovercmdi.AbsoluteSize.Y)
	
	Hovertexti.Name = "Hovertexti"
	Hovertexti.Parent = Hovercmdi
	Hovertexti.TextColor3 = Color3.new(255,255,255)
	Hovertexti.BackgroundTransparency = 1
	Hovertexti.BorderSizePixel = 0
	Hovertexti.Font = "SourceSansBold"
	Hovertexti.TextSize = 14
	Hovertexti.ZIndex = 89
	Hovertexti.Position = UDim2.new(.5,0,.5,0)
	
	function updatehovertext(text)
		Hovertexti.Text = text
	end
	
	function CreateCMDLabel(num,name,aliases,func,usage)
		local sf2 = Scrollingcmdi
		if #sf2:GetChildren() >= 2546 then
			sf2:ClearAllChildren()
		end
		local alls2 = 0
		for _,v in pairs(sf2:GetChildren()) do
			if v then
				alls2 = v.Size.Y.Offset + alls2
			end
			if not v then
				alls2 = 0
			end
		end
		local tl2 = Instance.new('TextLabel', sf2)
		tl2.Name = name
		tl2.ZIndex = 6
		tl2.Text = num..string.rep(" ", 7 - (#tostring(num)-1)*3).."| "..name.." ("..aliases..")"
		tl2.Size = UDim2.new(0,322,0,50)
		tl2.BackgroundTransparency = 1
		tl2.BorderSizePixel = 0
		tl2.Font = "SourceSansBold"
		tl2.Position = UDim2.new(-1,0,0,alls2)
		tl2.TextTransparency = 1
		tl2.TextScaled = false
		tl2.TextSize = 14
		tl2.TextWrapped = true
		tl2.TextXAlignment = "Left"
		tl2.TextYAlignment = "Top"
		tl2.TextColor3 = Color3.fromRGB(255,255,255)
		tl2.Size = UDim2.new(0,322,0,tl2.TextBounds.Y)
		tl2.Position = UDim2.new(0,3,0,alls2)
		sf2.CanvasSize = UDim2.new(0,0,0,alls2+tl2.TextBounds.Y)
		sf2.CanvasPosition = Vector2.new(0,sf2.CanvasPosition.Y+tl2.TextBounds.Y)
		local size22 = sf2.CanvasSize.Y.Offset
		tl2.TextTransparency = 0
		local menter = tl2.MouseEnter:Connect(function()
			game:GetService("RunService").RenderStepped:Wait()
			Hovercmdi.Visible = true
			local pass = func.."\n"..usage
			updatehovertext(pass)
		end)
		local mleave = tl2.MouseLeave:Connect(function()
			Hovercmdi.Visible = false
		end)
	end
	
	Cmdsearch.FocusLost:Connect(function()
		Scrollingcmdi:ClearAllChildren()
		if Cmdsearch.Text ~= "" then
			local cmdloop1 = 0
			local cmdloop2 = 0
			for i,v in pairs(CMDS.commands) do
				local aliases = ""
				cmdloop2 = cmdloop2 + 1
				for o,b in pairs(CMDS.aliases) do
					if i == b then
						cmdloop1 = cmdloop1 + 1
						aliases = aliases..o..", "
						if cmdloop1%200 == 0 then
							game:GetService("RunService").RenderStepped:Wait()
						end
					end
				end
				aliases = aliases:sub(1,#aliases-2)
				local usage = "()"
				if CMDS.usage[i] then
					usage = CMDS.usage[i]
				end
				if aliases:find(Cmdsearch.Text) or i:find(Cmdsearch.Text) then
					CreateCMDLabel(cmdloop2,i,aliases,v,usage)
				end
			end
		else
			local cmdloop1 = 0
			local cmdloop2 = 0
			for i,v in pairs(CMDS.commands) do
				local aliases = ""
				cmdloop2 = cmdloop2 + 1
				for o,b in pairs(CMDS.aliases) do
					if i == b then
						cmdloop1 = cmdloop1 + 1
						aliases = aliases..o..", "
						if cmdloop1%200 == 0 then
							game:GetService("RunService").RenderStepped:Wait()
						end
					end
				end
				aliases = aliases:sub(1,#aliases-2)
				local usage = ""
				if CMDS.usage[i] then
					usage = CMDS.usage[i]
				end
				CreateCMDLabel(cmdloop2,i,aliases,v,usage)
			end
		end
	end)
	function refresh()
		local oldpos = cmdlp.Character.HumanoidRootPart.CFrame
		cmdlp.Character:BreakJoints()
		local charadded
		charadded = cmdlp.CharacterAdded:Connect(function(char)
			char:WaitForChild("HumanoidRootPart").CFrame = oldpos
			charadded:Disconnect()
		end)
	end
	function IESP(v)
		spawn(function()
			for i,n in pairs(cmdlp.PlayerGui:GetChildren()) do
				if n.Name == v:GetFullName()..'_IESP' then
					n:Destroy()
				end
			end
			wait()
			IESPholder = Instance.new("Folder", cmdlp.PlayerGui)
			IESPholder.Name = v:GetFullName()..'_IESP'
			local a = Instance.new("BoxHandleAdornment", IESPholder)
			a.Name = v.Name
			a.Adornee = v
			a.AlwaysOnTop = true
			a.ZIndex = 0
			a.Size = v.Size
			a.Transparency = 0.8
			a.Color = v.BrickColor
			local BillboardGui = Instance.new("BillboardGui", IESPholder)
			local TextLabel = Instance.new("TextLabel", getParent)
			BillboardGui.Adornee = v
			BillboardGui.Name = v.Name
			BillboardGui.Size = UDim2.new(0, 100, 0, 150)
			BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
			BillboardGui.AlwaysOnTop = true
			TextLabel.Parent = BillboardGui
			TextLabel.BackgroundTransparency = 1
			TextLabel.Position = UDim2.new(0, 0, 0, -60)
			TextLabel.Size = UDim2.new(0, 100, 0, 100)
			TextLabel.Font = Enum.Font.SourceSansSemibold
			TextLabel.TextSize = 20
			TextLabel.TextColor3 = Color3.new(1, 1, 1)
			TextLabel.TextStrokeTransparency = 0.6
			TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
			TextLabel.Text = v.Name
		end)
	end
	workspace.DescendantAdded:Connect(function(i)
		if IESPenabled then
			local pi = i.Name:lower()
			local pt = "handle"
			local pt1 = "tool"
			local pt2 = "item"
			local z = string.find(pi,pt)
			local z1 = string.find(pi,pt1)
			local z2 = string.find(pi,pt2)
			if i:IsA("BasePart") and i.Parent.ClassName ~= "Accessory" then
				if z ~= nil or z1 ~= nil or z2 ~= nil then
					IESP(i)
				end
			end
		end
	end)
	workspace.DescendantRemoving:connect(function(i)
		if IESPenabled then
			for a,v in pairs(cmdlp.PlayerGui:GetChildren()) do
				if v.Name == i:GetFullName()..'_IESP' then
					v:Destroy()
				end
			end
		end
	end)
	function ESP(plr)
		spawn(function()
			for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
				if v.Name == plr.Name..'_ESP' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= cmdp.LocalPlayer.Name and not cmdp.LocalPlayer.PlayerGui:FindFirstChild(plr.Name..'_ESP') then
				local ESPholder = Instance.new("Folder", cmdlp.PlayerGui)
				ESPholder.Name = plr.Name..'_ESP'
				for b,n in pairs(plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment", ESPholder)
						a.Name = plr.Name
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 0
						a.Size = n.Size
						a.Transparency = 0.8
						for i,m in pairs(plr.Character:GetChildren()) do
							if m:IsA("Part") or m:IsA("MeshPart") then
								if m.Name ~= "HumanoidRootPart" and m.Name ~= "Handle" or (m:IsA("Part")) then
									m.Material = "ForceField"
									a.Color = m.BrickColor
								end
							end
						end
					end
				end
				if plr.Character and plr.Character:FindFirstChild('Head') then
					local BillboardGui = Instance.new("BillboardGui", ESPholder)
					local TextLabel = Instance.new("TextLabel", getParent)
					BillboardGui.Adornee = plr.Character.Head
					BillboardGui.Name = plr.Name
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -60)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0.6
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					plr.CharacterAdded:Connect(function()
						if ESPenabled then
							espLoopFunc:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
							ESP(plr)
						end
					end)
					local function espLoop()
						if cmdlp.PlayerGui:FindFirstChild(plr.Name..'_ESP') then
							if plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
								TextLabel.Text = plr.Name.."|Studs: ".. math.floor((cmdlp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude).."|Health: "..plr.Character.Humanoid.Health
							end
						else
							espLoopFunc:Disconnect()
						end
					end
					espLoopFunc = game:GetService("RunService").RenderStepped:Connect(espLoop)
				end
			end
		end)
	end
	cmdp.PlayerRemoving:connect(function(player)
		for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' then
				v:Destroy()
			end
		end
	end)
	
	Enabledaimbot = false
	function BodyAimbot()
		if Enabledaimbot == true then
			repeat wait() until #cmdp:GetPlayers() > 1
			local SPS = .001
			local LPCHead = cmdlp.Character:FindFirstChild("Head")
			local LPCTorso = cmdlp.Character:FindFirstChild("UpperTorso")
			local LPCHRPart = cmdlp.Character:FindFirstChild("HumanoidRootPart")
			local Closest = nil
			local Camera = workspace:FindFirstChild("Camera")
			local aehl = Instance.new("BoxHandleAdornment", cmdlp.PlayerGui)
			aehl.Name = "ESPhelp"
			aehl.AlwaysOnTop = true
			aehl.ZIndex = 0
			aehl.Size = Vector3.new(2, 2.1, 1)
			aehl.Transparency = 0.8
			aehl.Color3 = Color3.new(255,0,0)
			local try = 1
			local teamcount = game.Teams:GetTeams()
			local teams = false
			if #teamcount >= 1 then
				teams = true
			end
			local Launch = false
			local launchCFrame = nil
			local function searchplr(requestedplr)
				if PlayersWLsystem[requestedplr.Name] == true then
					return false
				elseif PlayersWLsystem[requestedplr.Name] == false then
					return true
				end
			end
			while Enabledaimbot do
				local Distance = 100000
				for count,TargetP in pairs(cmdp:GetPlayers()) do 
					if searchplr(TargetP) then
						if (TargetP ~= nil) and TargetP ~= cmdlp then
							local TC = TargetP.Character
							local TCHRPart = nil
							if TC then
								TCHRPart = TC:FindFirstChild("HumanoidRootPart")
							end
							if TCHRPart then
								try = 1
								local DistanceMAg = (TCHRPart.Position - LPCHRPart.Position).Magnitude
								if DistanceMAg < Distance and TCHRPart.Parent.Humanoid.Health > 0 then
									if teams then
										if TargetP.Team ~= cmdlp.Team then
											Closest = TCHRPart
											launchCFrame = TCHRPart.CFrame
											Distance = DistanceMAg
											opx("Target: "..Closest.Parent.Name)
											aehl.Adornee = TCHRPart
											Camera.CFrame = CFrame.new(LPCHRPart.Position,Closest.Position)
										end
									elseif not teams then
										Closest = TCHRPart
										Distance = DistanceMAg
										aehl.Adornee = TCHRPart
										Camera.CFrame = CFrame.new(LPCHRPart.Position,Closest.Position)
									end
								end
							elseif not TCHRPart then
								try = try + 1
								break
							end
						end
					elseif not searchplr(TargetP) then
						opx("Target is whitelisted!")
					end
				end
				local currentRP = LPCHRPart:FindFirstChild("Launch")
				if currentRP ~= nil then
					currentRP.Target = Closest
					if Noclipping then
						currentRP.MaxSpeed = 100
					elseif not Noclipping then
						currentRP.MaxSpeed = 1000
					end
				end
				cmduis.InputBegan:connect(function(input)
					if cmduis:IsKeyDown(Enum.KeyCode.KeypadPlus) and Enabledaimbot then
						Launch = not Launch
						local ps = cmdlp.Character.Humanoid.PlatformStand
						ps = Launch
						if Launch then
							local rp = Instance.new("RocketPropulsion")
							rp.Parent = LPCHRPart
							rp.CartoonFactor = 1
							rp.MaxThrust = 5000
							rp.MaxSpeed = 1000
							rp.ThrustP = 5000
							rp.Name = "Launch"
							currentRP = rp
							rp:Fire()
						elseif not Launch then
							for i,des in pairs(LPCHRPart:GetChildren()) do
								if des:IsA("RocketPropulsion") and des.Name == "Launch" then
									des:Destroy()
								end
							end
						end
					end
				end)
				cmdrs2.Heartbeat:Wait()
			end
		elseif not Enabledaimbot then
			local findESP = cmdlp.PlayerGui:FindFirstChild("ESPhelp")
			if findESP then
				findESP:Destroy()
			end
		end
	end
	cmduis.InputBegan:connect(function(input)
		if cmduis:IsKeyDown(Enum.KeyCode.KeypadPlus) and not Enabledaimbot then
			for _,des in pairs(cmdlp.Character.HumanoidRootPart:GetChildren()) do
				if des:IsA("RocketPropulsion") and des.Name == "Launch" then
					des:Destroy()
				end
			end
		end
	end)
	
	if Noclipping then
		Noclipping:Disconnect()
	end
	Clip = true
	function noclip()
		Clip = false
		function NoclipLoop()
			if Clip == false and cmdlp.Character ~= nil then
				for _, child in pairs(cmdlp.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)
	end
	if cmdlp.Character and cmdlp:FindFirstChildWhichIsA("Humanoid") then
		cmdlp.Character:FindFirstChildWhichIsA("Humanoid").Died:Connect(function()
			if conFly == true then
				if FLYING == true then
					repeat wait() until cmdlp.Character and cmdlp.Character:FindFirstChild('HumanoidRootPart') and cmdlp.Character:FindFirstChild('Humanoid')
					wait(2)
					FLYING = false
					cmdlp.Character.Humanoid.PlatformStand = false 
					sFLY()
					speedofthefly = permflyspeed
				end
			end
			Enabledaimbot = false
			if Clip == false then
				Clip = true
				wait(1)
				Clip = false
			end
		end)
	end
	cmdlp.CharacterAdded:Connect(function(char)
		wait(2)
		char:FindFirstChildWhichIsA("Humanoid").Died:Connect(function()
			if conFly == true then
				if FLYING == true then
					repeat wait() until cmdlp.Character ~= nil and cmdlp.Character:FindFirstChild('HumanoidRootPart') and cmdlp.Character:FindFirstChild('Humanoid')
					wait(.1)
					FLYING = false
					cmdlp.Character.Humanoid.PlatformStand = false 
					sFLY()
					speedofthefly = permflyspeed
				end
			end
			Enabledaimbot = false
			if Clip == false then
				Clip = true
				wait(1)
				Clip = false
			end
		end)
	end)
	---------------------------------------|
	-- Commands: --------------------------|
	if cmdrs:FindFirstChild("DefaultChatSystemChatEvents") and cmdrs.DefaultChatSystemChatEvents:FindFirstChild("SayMessageRequest") then sayremote = cmdrs.DefaultChatSystemChatEvents.SayMessageRequest end
	function opx(f,text)
		if not ChatBind then
			output9.Text = output8.Text
			output8.Text = output7.Text
			output7.Text = output6.Text
			output6.Text = output5.Text
			output5.Text = output4.Text
			output4.Text = output3.Text
			output3.Text = output2.Text
			output2.Text = output1.Text
			if f == "*" then
				output1.Text = "[*] "..text
			elseif f == "-" then
				output1.Text = "[-] "..text
			end
		else
			if f == "*" then
				sayremote:FireServer("[CMD-X*] "..text,"All")
			elseif f == "-" then
				sayremote:FireServer("[CMD-X-] "..text,"All")
			end
		end
	end
	
	function alignFunctions(getArgs)
		arguments = string.split(getArgs," ")
		function getstring(begin)
			local start = begin-1
			local AA = ''
			for i,v in pairs(arguments) do
				if i > start then
					if AA ~= '' then
						AA = AA .. ' ' .. v
					else
						AA = AA .. v
					end
				end
			end
			return AA
		end
		arguments[1] = arguments[1]:lower()
	end
	
	function findCmd(cmd_name)
		if CMDS.commands[cmd_name:lower()] then
			return cmd_name:lower()
		elseif CMDS.aliases[cmd_name:lower()] then
			return CMDS.aliases[cmd_name:lower()]
		else
			return nil
		end
	end
	
	local noCMD = false
	
	function HDAdminCheck()
		if cmdrs:FindFirstChild("HDAdminClient") then
			for i,v in pairs(cmdrs.HDAdminClient.Signals.RetrieveServerRanks:InvokeServer()) do
				if v.Player == cmdlp then
					return true
				end
			end
		end
		return false
	end
	
	HDBanString = {["itle"] = "", [""] = ""}
	CMDS.hd = {}
	if HDAdminCheck() then
		for i,v in pairs(cmdlp.PlayerGui.HDAdminGUIs.MainFrame.Pages.Commands.Commands:GetChildren()) do
			if v:FindFirstChild("Arrow") then
				if not HDBanString[v.TextLabel.Text:sub(2,#v.TextLabel.Text)] then
					table.insert(CMDS.hd, v.TextLabel.Text:sub(2,#v.TextLabel.Text))
					table.insert(CMDS.hd, "un"..v.TextLabel.Text:sub(2,#v.TextLabel.Text))
				end
			end
		end
	end
	
	function CheckHDList(str)
		for i,v in pairs(CMDS.hd) do
			if v == str then
				return true
			end
		end
		return false
	end
	
	fixedArgs = false
	Debugging = false
	local History = {}
	local useCommand = {}
	function executeCommand(com)
		wait(.1)
		if com:lower():sub(1,#prefix) == prefix then
			com = com:sub(#prefix+1,#com)
		elseif com:lower():sub(1,1) == '.' then
			com = com:sub(2,#com)
		end
		if com ~= "" then
			local matchCommand = ""
			alignFunctions(com)
			local cmdsy = findCmd(arguments[1])
			if cmdsy then
				History[#History+1] = com
				for _,v in pairs(CMDStats) do
					if cmdsy == _ then
						v.T = v.T + 1
					end
				end
				updatesaves()
				if fixedArgs == false then
					if commandsLoaded() and noCMD == false then
						if Debugging == false then
							useCommand[cmdsy]()
						else
							pcall(function() useCommand[cmdsy]() end)
						end
					elseif noCMD == true and cmdsy == "yescommands" then
						useCommand[cmdsy]()
					else
						opx("*","Need help? Join our discord! "..cordCode)
					end
				else
					opx("*","Need help? Join our discord! "..cordCode)
				end
			else
				local invalidString = getstring(1)
				if #invalidString > 38 then
					invalidString = invalidString:sub(1,35).."..."
				end
				opx("*",invalidString.." is not a valid command.")
			end
		end    
	end
	
	cmd.FocusLost:connect(function()
		local comsToExe = cmd.Text:split(";;")
		cmd.Text = ""
		for i,v in pairs(comsToExe) do
			executeCommand(v)
		end
	end)
	
	function useCommand.prefix()
		opx("-","Your prefix is "..prefix.." or .")
	end
	
	function useCommand.promptnew()
		if arguments[2] == "name" then
			prompt = cmdlp.Name.." >"
			updatesaves()
			user.Text = cmdlp.Name.." >"
			opx("-","Prompt name set to username")
		else
			prompt = getstring(2).." >"
			updatesaves()
			user.Text = getstring(2).." >"
			opx("-","Prompt name set to "..getstring(2))
		end
	end
	
	function useCommand.prefixnew()
		if arguments[2] then
			prefix = arguments[2]
			updatesaves()
			opx("-","Prefix set to "..arguments[2])
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.boobsize()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local BBtable = {"Baby size","Tiny","Medium size","Normal Size","Large","Gigantic","Anime size"}
				math.randomseed(target.UserId)
				local pickBB = math.random(1,#BBtable)
				opx("-",target.Name.." has "..BBtable[pickBB].." roboobs")
				sayremote:FireServer(target.Name.." has "..BBtable[pickBB].." roboobs","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.hotkeyopen()
		if arguments[2] then
			hotkeyopen = arguments[2]:lower()
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.hotkeyoutput()
		if arguments[2] then
			hotkeyopx = arguments[2]:lower()
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.hotkeyfocus()
		if arguments[2] then
			hotkeyfocus = arguments[2]:lower()
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	ManageHolderEnter = Instance.new("Frame", getParent)
	MangeScrollEnter = Instance.new("ScrollingFrame", getParent)
	BtnAddEnter = Instance.new("TextButton", getParent)
	BtnClearEnter = Instance.new("TextButton", getParent)
	ManageTitleEnter = Instance.new("TextLabel", getParent)
	SlideOutEnter = Instance.new("Frame", getParent)
	Edit1Enter = Instance.new("TextBox", getParent)
	Edit2Enter = Instance.new("TextBox", getParent)
	Edit3Enter = Instance.new("TextBox", getParent)
	TitleSlideEnter = Instance.new("TextLabel", getParent)
	CancelBtnEnter = Instance.new("TextButton", getParent)
	ApplyBtnEnter = Instance.new("TextButton", getParent)
	BtnExitEnter = Instance.new("TextButton", getParent)
	
	ManageHolderEnter.Name = "ManageHolderEnter"
	ManageHolderEnter.Parent = Unnamed
	ManageHolderEnter.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
	ManageHolderEnter.BackgroundTransparency = -0.010
	ManageHolderEnter.BorderSizePixel = 0
	ManageHolderEnter.Position = UDim2.new(0.33610791, 0, 0.279678553, 0)
	ManageHolderEnter.Size = UDim2.new(0, 424, 0, 294)
	ManageHolderEnter.Active = true
	createDrag(ManageHolderEnter)
	ManageHolderEnter.Visible = false
	
	MangeScrollEnter.Name = "MangeScrollEnter"
	MangeScrollEnter.Parent = ManageHolderEnter
	MangeScrollEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	MangeScrollEnter.BorderSizePixel = 0
	MangeScrollEnter.Position = UDim2.new(0.0268278271, 0, 0.10493198, 0)
	MangeScrollEnter.Size = UDim2.new(0, 401, 0, 214)
	
	function Template2(name,entry)
		local TemplateFrame = Instance.new("Frame", getParent)
		local TemplateName = Instance.new("TextLabel", getParent)
		local TemplateBtnRemove = Instance.new("TextButton", getParent)
		local TemplateBtnAdd = Instance.new("TextButton", getParent)
		local alls2 = 5
		for _,v in pairs(MangeScrollEnter:GetChildren()) do
			if v then
				alls2 = v.Size.Y.Offset + alls2+5
			end
			if not v then
				alls2 = 5
			end
		end
		TemplateFrame.Name = name
		TemplateFrame.Parent = MangeScrollEnter
		TemplateFrame.BackgroundColor3 = Color3.fromRGB(77, 77, 77)
		TemplateFrame.BorderSizePixel = 0
		TemplateFrame.Position = UDim2.new(-1,0,0,alls2)
		TemplateFrame.Size = UDim2.new(0, 368, 0, 19)
		
		TemplateName.Name = "TemplateName"
		TemplateName.Parent = TemplateFrame
		TemplateName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.BackgroundTransparency = 1.000
		TemplateName.BorderSizePixel = 0
		TemplateName.Position = UDim2.new(0.0231884252, 0, 0, 0)
		TemplateName.Size = UDim2.new(0, 191, 0, 19)
		TemplateName.Font = Enum.Font.GothamBlack
		TemplateName.Text = name.."|"..entry
		TemplateName.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.TextSize = 14.000
		TemplateName.TextXAlignment = Enum.TextXAlignment.Left
		
		TemplateBtnRemove.Name = "TemplateBtnRemove"
		TemplateBtnRemove.Parent = TemplateFrame
		TemplateBtnRemove.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnRemove.BackgroundTransparency = 0.700
		TemplateBtnRemove.BorderSizePixel = 0
		TemplateBtnRemove.Position = UDim2.new(0.859420359, 0, 0, 0)
		TemplateBtnRemove.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnRemove.Font = Enum.Font.Gotham
		TemplateBtnRemove.Text = "Remove"
		TemplateBtnRemove.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnRemove.TextSize = 12.000
		TemplateBtnRemove.MouseButton1Down:Connect(function()
			table.remove(enterCMD,entry)
			TemplateBtnRemove.Parent:Destroy()
			updatesaves()
		end)
		
		TemplateBtnAdd.Name = "TemplateBtnAdd"
		TemplateBtnAdd.Parent = TemplateFrame
		TemplateBtnAdd.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnAdd.BackgroundTransparency = 0.700
		TemplateBtnAdd.BorderSizePixel = 0
		TemplateBtnAdd.Position = UDim2.new(0.699094296, 0, 0, 0)
		TemplateBtnAdd.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnAdd.Font = Enum.Font.Gotham
		TemplateBtnAdd.Text = "Edit"
		TemplateBtnAdd.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnAdd.TextSize = 12.000
		TemplateBtnAdd.MouseButton1Down:Connect(function()
			SlideOutEnter.Visible = true
			SlideOutEnter:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
			CurrentEdit = entry
			TitleSlideEnter.Text = enterCMD[entry].N
			updatesaves()
		end)
		
		TemplateFrame:TweenPosition(UDim2.new(0,3,0,alls2), 'In', 'Quint', 0.5)
	end
	
	BtnAddEnter.Name = "BtnAddEnter"
	BtnAddEnter.Parent = ManageHolderEnter
	BtnAddEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnAddEnter.BorderSizePixel = 0
	BtnAddEnter.Position = UDim2.new(0.026827829, 0, 0.864668369, 0)
	BtnAddEnter.Size = UDim2.new(0, 85, 0, 33)
	BtnAddEnter.Font = Enum.Font.Gotham
	BtnAddEnter.Text = "Add"
	BtnAddEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnAddEnter.TextSize = 14.000
	BtnAddEnter.MouseButton1Down:Connect(function()
		SlideOutEnter.Visible = true
		SlideOutEnter:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
		enterCMD[#enterCMD+1] = {N = "Unnamed"}
		CurrentEdit = #enterCMD
		TitleSlideEnter.Text = enterCMD[#enterCMD].N
		Template2(enterCMD[#enterCMD].N,#enterCMD)
		updatesaves()
	end)
	
	BtnClearEnter.Name = "BtnClearEnter"
	BtnClearEnter.Parent = ManageHolderEnter
	BtnClearEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnClearEnter.BorderSizePixel = 0
	BtnClearEnter.Position = UDim2.new(0.244457483, 0, 0.864668369, 0)
	BtnClearEnter.Size = UDim2.new(0, 85, 0, 33)
	BtnClearEnter.Font = Enum.Font.Gotham
	BtnClearEnter.Text = "Clear"
	BtnClearEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnClearEnter.TextSize = 14.000
	BtnClearEnter.MouseButton1Down:Connect(function()
		MangeScrollEnter:ClearAllChildren()
		enterCMD = {}
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)
	
	ManageTitleEnter.Name = "ManageTitleEnter"
	ManageTitleEnter.Parent = ManageHolderEnter
	ManageTitleEnter.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleEnter.BackgroundTransparency = 1.000
	ManageTitleEnter.Position = UDim2.new(0.263266504, 0, 0.00765306223, 0)
	ManageTitleEnter.Size = UDim2.new(0, 200, 0, 32)
	ManageTitleEnter.Font = Enum.Font.GothamSemibold
	ManageTitleEnter.Text = "CMD-X EnterCMDs MANAGER"
	ManageTitleEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleEnter.TextSize = 14.000
	
	SlideOutEnter.Name = "SlideOutEnter"
	SlideOutEnter.Parent = ManageHolderEnter
	SlideOutEnter.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	SlideOutEnter.BackgroundTransparency = 0.500
	SlideOutEnter.BorderSizePixel = 0
	SlideOutEnter.Position = UDim2.new(-0.507332683, 0, 0, 0)
	SlideOutEnter.Size = UDim2.new(0, 0, 0, 294)
	SlideOutEnter.Visible = false
	
	Edit1Enter.Name = "Edit1Enter"
	Edit1Enter.Parent = SlideOutEnter
	Edit1Enter.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit1Enter.BorderSizePixel = 0
	Edit1Enter.Position = UDim2.new(0.0325581394, 0, 0.0850340128, 0)
	Edit1Enter.Size = UDim2.new(0, 200, 0, 26)
	Edit1Enter.Font = Enum.Font.Gotham
	Edit1Enter.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit1Enter.PlaceholderText = "Enter command here"
	Edit1Enter.Text = ""
	Edit1Enter.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit1Enter.TextSize = 14.000
	
	Edit2Enter.Name = "Edit2Enter"
	Edit2Enter.Parent = SlideOutEnter
	Edit2Enter.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit2Enter.BorderSizePixel = 0
	Edit2Enter.Position = UDim2.new(0.0325581394, 0, 0.204081625, 0)
	Edit2Enter.Size = UDim2.new(0, 200, 0, 26)
	Edit2Enter.Font = Enum.Font.Gotham
	Edit2Enter.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit2Enter.PlaceholderText = "Enter ... here"
	Edit2Enter.Text = ""
	Edit2Enter.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit2Enter.TextSize = 14.000
	
	Edit3Enter.Name = "Edit3Enter"
	Edit3Enter.Parent = SlideOutEnter
	Edit3Enter.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit3Enter.BorderSizePixel = 0
	Edit3Enter.Position = UDim2.new(0.0325581394, 0, 0.31292516, 0)
	Edit3Enter.Size = UDim2.new(0, 200, 0, 26)
	Edit3Enter.Font = Enum.Font.Gotham
	Edit3Enter.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit3Enter.PlaceholderText = "Enter ... here"
	Edit3Enter.Text = ""
	Edit3Enter.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit3Enter.TextSize = 14.000
	
	TitleSlideEnter.Name = "TitleSlideEnter"
	TitleSlideEnter.Parent = SlideOutEnter
	TitleSlideEnter.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideEnter.BackgroundTransparency = 1.000
	TitleSlideEnter.Position = UDim2.new(0.0307083577, 0, -0.0161564611, 0)
	TitleSlideEnter.Size = UDim2.new(0, 200, 0, 32)
	TitleSlideEnter.Font = Enum.Font.GothamSemibold
	TitleSlideEnter.Text = "..."
	TitleSlideEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideEnter.TextSize = 14.000
	
	CancelBtnEnter.Name = "CancelBtnEnter"
	CancelBtnEnter.Parent = SlideOutEnter
	CancelBtnEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	CancelBtnEnter.BorderSizePixel = 0
	CancelBtnEnter.Position = UDim2.new(0.561230242, 0, 0.442899674, 0)
	CancelBtnEnter.Size = UDim2.new(0, 85, 0, 33)
	CancelBtnEnter.Font = Enum.Font.Gotham
	CancelBtnEnter.Text = "Cancel"
	CancelBtnEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	CancelBtnEnter.TextSize = 14.000
	CancelBtnEnter.MouseButton1Down:Connect(function()
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
	end)
	
	function MakeChanges(title,new)
		for _,v in pairs(MangeScrollEnter:GetChildren()) do
			if v.Name == title then
				v.Name = new
				xText = v.TemplateName.Text:split("|")
				v.TemplateName.Text = new.."|"..xText[2]
			end
		end
	end
	
	ApplyBtnEnter.Name = "ApplyBtnEnter"
	ApplyBtnEnter.Parent = SlideOutEnter
	ApplyBtnEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	ApplyBtnEnter.BorderSizePixel = 0
	ApplyBtnEnter.Position = UDim2.new(0.0318313837, 0, 0.442899674, 0)
	ApplyBtnEnter.Size = UDim2.new(0, 85, 0, 33)
	ApplyBtnEnter.Font = Enum.Font.Gotham
	ApplyBtnEnter.Text = "Apply"
	ApplyBtnEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	ApplyBtnEnter.TextSize = 14.000
	ApplyBtnEnter.MouseButton1Down:Connect(function()
		enterCMD[CurrentEdit] = {N = Edit1Enter.Text}
		MakeChanges(TitleSlideEnter.Text,Edit1Enter.Text)
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)
	
	BtnExitEnter.Name = "BtnExitEnter"
	BtnExitEnter.Parent = ManageHolderEnter
	BtnExitEnter.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnExitEnter.BackgroundTransparency = 1.000
	BtnExitEnter.BorderSizePixel = 0
	BtnExitEnter.Position = UDim2.new(0.950231194, 0, -0.00778063387, 0)
	BtnExitEnter.Size = UDim2.new(0, 28, 0, 26)
	BtnExitEnter.Font = Enum.Font.GothamBold
	BtnExitEnter.Text = "X"
	BtnExitEnter.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnExitEnter.TextSize = 14.000
	BtnExitEnter.MouseButton1Down:Connect(function()
		for i,_ in pairs(enterCMD) do
			if _.N == "Unnamed" then
				table.remove(enterCMD, i)
			end
		end
		ManageHolderEnter.Visible = false
		Edit1Enter.Text = ""
		Edit2Enter.Text = ""
		Edit3Enter.Text = ""
		SlideOutEnter.Visible = false
		SlideOutEnter:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)
	
	function useCommand.entercmdnew()
		if arguments[2] then
			enterCMD[#enterCMD+1] = {N = getstring(2)}
			updatesaves()
			opx("-","Added "..getstring(2).." to enter cmds")
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.entercmds()
		opx("-","Opened enter cmd manager")
		MangeScrollEnter:ClearAllChildren()
		ManageHolderEnter.Visible = true
		for i,_ in pairs(enterCMD) do
			Template2(enterCMD[i].N,i)
		end
	end
	
	function useCommand.listentercmds()
		if #enterCMD ~= 0 then
			xECMD = #enterCMD.." | "
			for i = 1,#enterCMD do
				xEMD = xECMD..enterCMD[i].N..", "
			end
			opx("-","Listed enter cmds")
			opxL("Enter Commands",xECMD)
		else
			opx("*","You have no enter cmds!")
		end
	end
	
	function useCommand.entercmddel()
		if arguments[2] then
			if #enterCMD ~= 0 then
				for i = 1,#enterCMD do
					if enterCMD[i].N == getstring(2) then
						table.remove(enterCMD, i)
						updatesaves()
					end
				end
				opx("Removed "..getstring(2).." from enter cmds")
			else
				opx("*","You have no enter cmds!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.entercmdsclr()
		if #enterCMD ~= 0 then
			enterCMD = {}
			updatesaves()
			opx("-","Cleared all enter cmds")
		else
			opx("*","You have no enter cmds!")
		end
	end
	
	function useCommand.eightballpu()
		local eightball = {"Maybe","Possibly","No","Yes","Never","Don't get your hopes up","100%","0%","50%","Likely","Extremely Likely","Almost Certain","Impossible","Possible","Currently... no","Maybe later on in life","Aha... Good luck on that one","This will definently happen buddy","Stop asking me questions","Hmm..."}
		local value = math.random(1,#eightball)
		local picked_value = eightball[value]
		sayremote:FireServer("8Ball says: "..tostring(picked_value), "All")
		opx("8Ball says: "..tostring(picked_value))
	end
	
	function useCommand.eightballpr()
		local eightball = {"Maybe","Possibly","No","Yes","Never","Don't get your hopes up","100%","0%","50%","Likely","Extremely Likely","Almost Certain","Impossible","Possible","Currently... no","Maybe later on in life","Aha... Good luck on that one","This will definently happen buddy","Stop asking me questions","Hmm..."}
		local value = math.random(1,#eightball)
		local picked_value = eightball[value]
		opx("8Ball says: "..tostring(picked_value))
	end
	
	function useCommand.pi()
		opx("-","Pi is "..math.pi)
	end
	
	local helpCode = cordCode
	function useCommand.support()
		if arguments[2] == "cb" or arguments[2] == "copy" then
			setclipboard(helpCode)
		end
		opx("-","The link for support is "..helpCode)
	end
	
	function useCommand.commands()
		Scrollingcmdi:ClearAllChildren()
		cmdsholder.Visible = true
		local cmdloop1 = 0
		local cmdloop2 = 0
		for i,v in pairs(CMDS.commands) do
			local aliases = ""
			cmdloop2 = cmdloop2 + 1
			for o,b in pairs(CMDS.aliases) do
				if i == b then
					cmdloop1 = cmdloop1 + 1
					aliases = aliases..o..", "
					if cmdloop1%200 == 0 then
						game:GetService("RunService").RenderStepped:Wait()
					end
				end
			end
			aliases = aliases:sub(1,#aliases-2)
			local usage = ""
			if CMDS.usage[i] then
				usage = CMDS.usage[i]
			end
			CreateCMDLabel(cmdloop2,i,aliases,v,usage)
		end
		opx("-","CMDS Loaded")
	end
	function useCommand.config()
		configframe.Visible = true
		configframe:TweenSize(UDim2.new(0,300,0,433), Enum.EasingDirection.In, Enum.EasingStyle.Quad, .5)
		opx("-","Config loaded")
	end
	
	local cmdAdvertise = false
	function useCommand.advertise()
		cmdAdvertise = true
		while cmdAdvertise do
			sayremote:FireServer("Get CMD X today! Best admin GUI, supports paid executors: cxrd: .gg/cmd or type in cmd x pxstebxn on google!", "All")
			wait(math.random(1, 6)) 
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			cmdlp.Character.Humanoid:MoveTo(randomPlayer.Character.HumanoidRootPart.Position)
			sayremote:FireServer("Get CMD X today! Best admin GUI, supports paid executors: cxrd: .gg/cmd or type in cmd x pxstebxn on google!", "All")
			wait(math.random(1, 6))
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." Get CMD X today! Best admin GUI, supports paid executors: cxrd: .gg/cmd or type in cmd x pxstebxn on google!", "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." Get CMD X today! Best admin GUI, supports paid executors: cxrd: .gg/cmd or type in cmd x pxstebxn on google!", "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." Get CMD X today! Best admin GUI, supports paid executors: cxrd: .gg/cmd or type in cmd x pxstebxn on google!", "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("/w "..randomPlayer.Name.." Get CMD X today! Best admin GUI, supports paid executors: cxrd: .gg/cmd or type in cmd x pxstebxn on google!", "All")
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			sayremote:FireServer("Get CMD X today! Best admin GUI, supports paid executors: cxrd: .gg/cmd or type in cmd x pxstebxn on google!", "All")
			wait(math.random(1, 6))
			local randomPlayer = cmdp:GetPlayers()[math.random(2,#cmdp:GetPlayers())]
			cmdlp.Character.Humanoid:MoveTo(randomPlayer.Character.HumanoidRootPart.Position)
		end
		opx("-","Now advertising CMD-X (Thank you!)")
	end
	
	function useCommand.unadvertise()
		cmdAdvertise = false
		opx("-","Stopped advertising CMD-X (Thank you!)")
	end
	
	function useCommand.version()
		opx("-","CMD-X is currently on "..ver)
	end
	
	function useCommand.maxslopeangle()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.MaxSlopeAngle = arguments[2]
			opx("-","MaxSlopeAngle set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.MaxSlopeAngle = permmaxsl
			opx("-","MaxSlopeAngle set to "..permmaxsl)
		end
	end
	
	function useCommand.defaultmaxslopeangle()
		cmdlp.Character.Humanoid.MaxSlopeAngle = 89
		opx("-","MaxSlopeAngle set to default (89)")
	end
	
	function useCommand.walkspeed()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.WalkSpeed = arguments[2]
			opx("-","Walkspeed set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.WalkSpeed = permwalkspeed
			opx("-","Walkspeed set to "..permwalkspeed)
		end
	end
	
	function useCommand.defaultwalkspeed()
		cmdlp.Character.Humanoid.WalkSpeed = 16
		opx("-","Walkspeed set to default (16)")
	end
	
	function useCommand.jumppower()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.JumpPower = arguments[2]
			opx("-","Jumppower set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.JumpPower = permjumppower
			opx("-","Jumppower set to "..permjumppower)
		end
	end
	
	function useCommand.defaultjumppower()
		cmdlp.Character.Humanoid.JumpPower = 50
		opx("-","Jumppower set to default (50)")
	end
	
	function useCommand.hipheight()
		if arguments[2] and cmdnum(arguments[2]) then
			cmdlp.Character.Humanoid.HipHeight = arguments[2]
			opx("-","Hipheight set to "..arguments[2])
		else
			cmdlp.Character.Humanoid.HipHeight = permhipheight
			opx("*","Hipheight set to "..permhipheight)
		end
	end
	
	function useCommand.defaulthipheight()
		cmdlp.Character.Humanoid.HipHeight = saveHip
		opx("-","Hipheight set to default ("..saveHip..")")
	end
	
	function useCommand.gravity()
		if arguments[2] and cmdnum(arguments[2]) then
			workspace.Gravity = arguments[2]
			opx("-","Gravity set to "..arguments[2])
		else
			workspace.Gravity = permgravity
			opx("-","Gravity set to "..permgravity)
		end
	end
	
	function useCommand.defaultgravity()
		workspace.Gravity = 194
		opx("-","Hipheight set to default ("..saveGrav..")")
	end
	
	local bodyPos = false
	if cmdlp.Character then
		for _,v in pairs(cmdlp.Character:GetDescendants()) do
			if v.Name == "rocket" then
				v:Destroy()
			end
		end
	end
	function useCommand.bodypositionwalkspeed()
		if arguments[2] and cmdnum(arguments[2]) then
			local speed = 1 + arguments[2]*0.05
		else
			local speed = 1 + 10*0.05
		end
		local rocket = Instance.new("BodyPosition",cmdlp.Character.HumanoidRootPart)
		rocket.Name = "rocket"
		local upvalue = 0
		rocket.maxForce = Vector3.new(12500,12500,12500)
		bodyPos = true
		opx("-","BodyPositionWalkSpeed activated")
		while bodyPos do
			wait()
			if cmdlp.Character.Humanoid.FloorMaterial == Enum.Material.Air then
				rocket.Parent = cmdlp.Character
				wait(0.5)
			else
				wait(0.5)
				rocket.Parent = cmdlp.Character.HumanoidRootPart
			end
		end
		while bodyPos do
			wait()
			rocket.Position = Vector3.new(cmdlp.Character.Torso.Position.X+cmdlp.Character.Humanoid.MoveDirection.X*speed*5.4,cmdlp.Character.Torso.Position.Y,cmdlp.Character.Torso.Position.Z+cmdlp.Character.Humanoid.MoveDirection.Z*speed*5.4)
		end
	end
	
	function useCommand.avatar()
		if arguments[2] then
			opx("-","Inspecting avatar")
			game:GetService("GuiService"):InspectPlayerFromUserId(cmdp:GetUserIdFromNameAsync(arguments[2]))
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.halve()
		if cmd15(cmdlp) then
			opx("-","Halved character")
			cmdlp.Character.UpperTorso.Waist:Destroy()
			cmdlp.Character.UpperTorso.Anchored = true
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removehands()
		if cmd15(cmdlp) then
			opx("-","Removed hands")
			cmdlp.Character.RightHand:Destroy()
			cmdlp.Character.LeftHand:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removefeet()
		if cmd15(cmdlp) then
			opx("-","Removed feet")
			cmdlp.Character.RightFoot:Destroy()
			cmdlp.Character.LeftFoot:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removeleftleg()
		opx("-","Removed left leg")
		if cmd15(cmdlp) then
			cmdlp.Character.LeftUpperLeg:Destroy()
		else
			cmdlp.Character["Left Leg"]:Destroy()
		end
	end
	
	function useCommand.removerightleg()
		opx("-","Removed right leg")
		if cmd15(cmdlp) then
			cmdlp.Character.RightUpperLeg:Destroy()
		else
			cmdlp.Character["Right Leg"]:Destroy()
		end
	end
	
	function useCommand.removeleftarm()
		opx("-","Removed left arm")
		if cmd15(cmdlp) then
			cmdlp.Character.LeftUpperArm:Destroy()
		else
			cmdlp.Character["Left Arm"]:Destroy()
		end
	end
	
	function useCommand.removerightarm()
		opx("-","Removed right arm")
		if cmd15(cmdlp) then
			cmdlp.Character.RightUpperArm:Destroy()
		else
			cmdlp.Character["Right Arm"]:Destroy()
		end
	end
	
	function useCommand.removearms()
		opx("-","Removed arms")
		if cmd15(cmdlp) then
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperArm" or v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Arm" or v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end
	
	function useCommand.removelegs()
		opx("-","Removed legs")
		if cmd15(cmdlp) then
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperLeg" or v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Leg" or v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
	end
	
	function useCommand.removelimbs()
		opx("-","Removed limbs")
		if cmd15(cmdlp) then
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperArm" or v.Name == "LeftUpperArm" or v.Name == "RightUpperLeg" or v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
	end
	
	function useCommand.removelefthand()
		if cmd15(cmdlp) then
			opx("-","Removed left hand")
			cmdlp.Character.LeftHand:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removerighthand()
		if cmd15(cmdlp) then
			opx("-","Removed right hand")
			cmdlp.Character.RightHand:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removeleftfoot()
		if cmd15(cmdlp) then
			opx("-","Removed left foot")
			cmdlp.Character.LeftFoot:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removerightfoot()
		if cmd15(cmdlp) then
			opx("-","Removed right foot")
			cmdlp.Character.RightFoot:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removerightlowerarm()
		if cmd15(cmdlp) then
			opx("-","Removed right lower arm")
			cmdlp.Character.RightLowerArm:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removeleftlowerarm()
		if cmd15(cmdlp) then
			opx("-","Removed left lower arm")
			cmdlp.Character.LeftLowerArm:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removerightlowerleg()
		if cmd15(cmdlp) then
			opx("-","Removed right lower leg")
			cmdlp.Character.RightLowerLeg:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	function useCommand.removeleftlowerleg()
		if cmd15(cmdlp) then
			opx("-","Removed left lower leg")
			cmdlp.Character.LeftLowerLeg:Destroy()
		else
			opx("*","You need to be R15 for this command!")
		end
	end
	
	xNamingTbl = {}
	function useCommand.nonick()
		opx("-","Blocked nicknames")
		function clean(cplr)
			if cplr.DisplayName ~= cplr.Name then
				if cplr.Character then cplr.Character:WaitForChild("Humanoid").DisplayName = cplr.Name end
				cplr.CharacterAdded:Connect(function(char)
					char:WaitForChild("Humanoid").DisplayName = "(NICKNAMED)\n"..cplr.Name
				end)
			end
		end
		xNaming = cmdp.PlayerAdded:Connect(clean)
		for _,p in pairs(cmdp:GetPlayers()) do
			clean(p)
		end
	end
	
	function useCommand.yesnick()
		opx("-","Unblocked nicknames")
		xNaming:Disconnect()
	end
	
	function useCommand.appearanceidpublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User AppearanceID is "..target.CharacterAppearanceId)
				sayremote:FireServer(target.Name.."s User AppearanceID is "..target.CharacterAppearanceId, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.appearanceidprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User AppearanceID is "..target.CharacterAppearanceId)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.nilgoto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				RootNil = cmdlp.Character.HumanoidRootPart
				RootNil.Parent = nil
				cmdlp.Character.Humanoid.Jump = true
				RootNil.CFrame = target.Character.HumanoidRootPart.CFrame
				RootNil.Parent = cmdlp.Character
				opx("-","Teleported to player "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.nilfreegoto()
		if arguments[4] then
			opx("-","Teleported to "..arguments[2].." "..arguments[3].." "..arguments[4])
			RootNil = cmdlp.Character.HumanoidRootPart
			RootNil.Parent = nil
			RootNil.CFrame = CFrame.new(arguments[2], arguments[3], arguments[4])
			RootNil.Parent = cmdlp.Character
		else
			opx("*","4 arguments are required!")
		end
	end
	
	function useCommand.hd()
		if HDAdminCheck() then
			if arguments[2] then
				local cmd = arguments[2]
				argsHD = ""
				if arguments[3] then
					argsHD = getstring(3)
				end
				local prefixHD = cmdlp.PlayerGui.HDAdminGUIs.MainFrame.Pages.Settings.Custom["AE1 Prefix"].SettingValue.TextBox.Text
				cmdrs.HDAdminClient.Signals.RequestCommand:InvokeServer(";"..cmd.." "..argsHD)
			else
				opx("*","Command not found!")
			end
		else
			opx("*","HD admin wasnt found!")
		end
	end
	
	function useCommand.kohls()
		if workspace:FindFirstChild("Kohl's Admin Infinite") then
			if agruments[2] then
				local cmd = arguments[2]
				argsHD = ""
				if arguments[3] then
					argsHD = getstring(3)
				end
				require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire(":"..cmd.." "..argsHD)
			else
				opx("*","Command not found!")
			end
		else
			opx("*","Kohls admin was not found!")
		end
	end
	
	function useCommand.creatoridpublic()
		opx("-","The creator of the games id is "..game.CreatorId)
		sayremote("The creator of the games id is "..game.CreatorId,"All")
	end
	
	function useCommand.creatoridprivate()
		opx("-","The creator of the games id is "..game.CreatorId)
	end
	
	function useCommand.creatorid()
		opx("-","Set your ID to the creator")
		cmdlp.UserId = game.CreatorId
		cmdlp.CharacterAppearanceId = game.CreatorId
	end
	
	function useCommand.nilgotopart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Teleported to part")
					RootNil = cmdlp.Character.HumanoidRootPart
					RootNil.Parent = nil
					cmdlp.Character.Humanoid.Jump = true
					RootNil.CFrame = v.CFrame
					RootNil.Parent = cmdlp.Character
					break
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.nilgotoclass()
		if arguments[2] then
			opx("-","Teleported to class part")
			local Part
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA(arguments[2]) then Part = v; break end
			end
			RootNil = cmdlp.Character.HumanoidRootPart
			RootNil.Parent = nil
			RootNil.CFrame = Part.CFrame
			RootNil.Parent = cmdlp.Character
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.removeinworkspace()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					v:Destroy()
				end
			end
			opx("-","Removed in workspace "..getstring(2))
		else
			opx("*","2 arguments are required!")    
		end
	end
	
	function useCommand.listnil()
		local NilParts = ""
		for i,v in pairs(getnilinstances()) do
			if not v:IsDescendantOf(Unnamed) then
				NilParts = NilParts..v.Name..", "
			end
		end
		opx("-","Listed all nil parts")
		opxL("Nil Parts",NilParts)
	end
	
	function useCommand.removeinnil()
		if arguments[2] then
			for i,v in pairs(getnilinstances()) do
				if v.Name == getstring(2) then
					v:Destroy()
				end
			end
			opx("-","Removed in nil "..getstring(2))
		else
			opx("*","2 arguments are required!")    
		end
	end
	
	function useCommand.removeanim()
		opx("-","Removed animation")
		cmdlp.Character.Animate.Disabled = true
	end
	
	function useCommand.restoreanim()
		opx("-","Restored animation")
		cmdlp.Character.Animate.Disabled = false
	end
	
	function useCommand.removeshirt()
		opx("-","You have removed your shirt")
		cmdlp.Character.Shirt:Destroy()
	end
	
	function useCommand.removetshirt()
		opx("-","You have removed your t-shirt")
		cmdlp.Character["Shirt Graphic"]:Destroy()
	end
	
	function useCommand.removepants()
		opx("-","You have removed your pants")
		cmdlp.Character.Pants:Destroy()
	end
	
	function useCommand.removeclothes()
		opx("-","You are now naked on a kids game")
		for _,v in pairs(cmdlp.Character:GetChildren()) do
			if v.Name == "Shirt" or v.Name == "Shirt Graphic" or v.Name == "Pants" then
				v:Destroy()
			end
		end
	end
	
	function useCommand.removehatsmesh()
		opx("-","Removed hats meshes")
		for _,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				for _,x in pairs(v:GetDescendants()) do
					if x.Name == "Mesh" or x.Name == "SpecialMesh" then
						x:Destroy()
					end
				end
			end
		end
	end
	
	function useCommand.removegearmesh()
		opx("-","Removed gears meshes")
		for _,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Tool") then
				for _,x in pairs(v:GetDescendants()) do
					if x.Name == "Mesh" or x.Name == "SpecialMesh" then
						x:Destroy()
					end
				end
			end
		end
	end
	
	function useCommand.hatgear()
		opx("-","Hats are now in your toolbar")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end
	
	function useCommand.bring()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Brung "..target.Name)
				NormPos = cmdlp.Character.HumanoidRootPart.CFrame
				local char = cmdlp.Character
				local tchar = target.Character
				local hum = cmdlp.Character.Humanoid
				local hrp = cmdlp.Character.HumanoidRootPart
				local hrp2 = target.Character.HumanoidRootPart
				local camera = workspace.CurrentCamera
				hum.Name = "1"
				local newHum = hum:Clone()
				newHum.Parent = char
				newHum.Name = "Humanoid"
				wait(0.1)
				hum:Destroy()
				camera.CameraSubject = char
				newHum.DisplayDistanceType = "None"
				wait(0.1)
				v = cmdlp.Backpack:FindFirstChildOfClass("Tool")
				v.Parent = char
				hrp.CFrame = hrp2.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				local n = 0
				repeat
					game.RunService.RenderStepped:Wait()
					n = n + 1
					hrp.CFrame = hrp2.CFrame
					wait(.1)
					hrp.CFrame = NormPos
				until (not hrp or not hrp2 or not hrp.Parent or not hrp2.Parent or n > 250) and n > 2
				hrp.CFrame = NormPos
				camera.CameraType = Enum.CameraType.Custom
				wait(4)
				cmdlp.Character.HumanoidRootPart.CFrame = NormPos
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.drophats()
		opx("-","Dropped your hats")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Hat") or v:IsA("Accessory") then
				v.Parent = workspace
			end
		end
	end
	
	function useCommand.dropgears()
		opx("-","Dropped your gears")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = workspace
			end
		end
	end
	
	local hatSpam = false
	function useCommand.hatspam()
		opx("-","Now spamming hats")
		hatSpam = true
		while hatSpam do
			refresh()
			wait(1)
			for _,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Accessory") then
					for _,x in pairs(v:GetDescendants()) do
						if x.Name == "Mesh" or x.Name == "SpecialMesh" then
							x:Destroy()
						end
					end
				end
			end
			wait(1)
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Accessory") then
					v.Parent = workspace
				end
			end
			wait(1)
		end
	end
	
	function useCommand.unhatspam()
		opx("-","Stopped spamming hats")
		hatSpam = false
	end
	
	function useCommand.removeface()
		opx("-","Removed face")
		cmdlp.Character.Head.face:Destroy()
	end
	
	function useCommand.removehats()
		opx("-","Removed hats")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				v:Destroy()
			end
		end
	end
	
	function useCommand.rheadmesh()
		opx("-","Removed head mesh")
		cmdlp.Character.Head.Mesh:Destroy()
	end
	
	function useCommand.equip()
		opx("-","Equipped all gears")
		for _,v in pairs(cmdlp.Backpack:GetChildren()) do
			v.Parent = cmdlp.Character
		end
	end
	
	function useCommand.give()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				newTool = cmdlp.Character:FindFirstChildOfClass("Tool")
				cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame + target.Character.HumanoidRootPart.CFrame.lookVector * -7
				wait(1)
				newTool.Parent = workspace
				opx("-","Gave tool to "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.using()
		opx("-","Said script <3")
		sayremote:FireServer("I am using CMD-X, Version: "..ver, "All")
	end
	
	function useCommand.banlands()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Banished "..target.Name.." to the banlands")
				local char = cmdlp.Character
				local tchar = target.Character
				local hum = cmdlp.Character.Humanoid
				local hrp = cmdlp.Character.HumanoidRootPart
				local hrp2 = target.Character.HumanoidRootPart
				local camera = workspace.CurrentCamera
				hum.Name = "1"
				local newHum = hum:Clone()
				newHum.Parent = char
				newHum.Name = "Humanoid"
				wait(0.1)
				hum:Destroy()
				camera.CameraSubject = char
				newHum.DisplayDistanceType = "None"
				wait(0.1)
				v = cmdlp.Backpack:FindFirstChildOfClass("Tool")
				v.Parent = char
				hrp.CFrame = hrp2.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				local n = 0
				repeat
					game.RunService.RenderStepped:Wait(0)
					n = n + 1
					hrp.CFrame = hrp2.CFrame
					wait(.1)
					hrp.CFrame = CFrame.new(0,1000000,0)
				until (not hrp or not hrp2 or not hrp.Parent or not hrp2.Parent or n > 250) and n > 2
				hrp.CFrame = CFrame.new(0,1000000,0)
				camera.CameraType = Enum.CameraType.Custom
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.kill()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Killed "..target.Name)
				local char = cmdlp.Character
				local tchar = target.Character
				local hum = cmdlp.Character.Humanoid
				local hrp = cmdlp.Character.HumanoidRootPart
				local hrp2 = target.Character.HumanoidRootPart
				local camera = workspace.CurrentCamera
				hum.Name = "1"
				local newHum = hum:Clone()
				newHum.Parent = char
				newHum.Name = "Humanoid"
				wait(0.1)
				hum:Destroy()
				camera.CameraSubject = char
				newHum.DisplayDistanceType = "None"
				wait(0.1)
				v = cmdlp.Backpack:FindFirstChildOfClass("Tool")
				v.Parent = char
				hrp.CFrame = hrp2.CFrame * CFrame.new(0, 0, 0) * CFrame.new(math.random(-100, 100)/200,math.random(-100, 100)/200,math.random(-100, 100)/200)
				local n = 0
				repeat
					game.RunService.RenderStepped:Wait(0)
					n = n + 1
					hrp.CFrame = hrp2.CFrame
					wait(.1)
					hrp.CFrame = CFrame.new(999999, workspace.FallenPartsDestroyHeight + 5,999999)
				until (not hrp or not hrp2 or not hrp.Parent or not hrp2.Parent or n > 250) and n > 2
				hrp.CFrame = CFrame.new(999999, workspace.FallenPartsDestroyHeight + 5,999999)
				camera.CameraType = Enum.CameraType.Custom
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	local Flipping = false
	function useCommand.flip()
		opx("-","Now flipping")
		Flipping = true
		pl=cmdlp
		me=pl.Character
		xl=me.Torso['Right Shoulder']
		local debounce=false
		function _restoreproperties()
			Holder = player.Character
			Torso = Holder:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function ManageAnimation(value)
			Holder = player.Character
			Player = player
			if value == "no anim" then
				Anim = Holder:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = true
					Anim.Parent = Player
				end
			elseif value == "re-anim" then
				Anim = Player:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = false
					Anim.Parent = Holder
				end
			end
		end
		function Down(ml)
			for i=1, ml.velocity.y/3 do
				ml.velocity = ml.velocity+Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip2()
			if debounce==true then return end
			debounce=true
			Char = player.Character
			Human = Char.Humanoid
			Torso = Char.Torso
			CF = Torso.CFrame
			Human.PlatformStand = true
			VelUp = Instance.new("BodyVelocity")
			VelUp.velocity = Vector3.new(0,60,0)+Torso.CFrame.lookVector*26
			VelUp.P = VelUp.P*2
			VelUp.maxForce = Vector3.new(10000,10000,10000)*999
			VelUp.Parent = Torso
			coroutine.resume(coroutine.create(Down),VelUp)
			Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.maxTorque = Vector3.new(100000,100000,100000)*999
			Gyro.cframe = CF
			Gyro.Parent = Torso
			for i=2, 28 do
				Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-16,0,0)
				wait()
			end
			Gyro.cframe = CF
			wait()
			Gyro:Remove()
			Human.PlatformStand = false
			_restoreproperties()
			debounce=false
		end
		while Flipping do
			wait()
			Flip2()
		end
	end
	
	function useCommand.unflip()
		Flipping = false
		opx("-","No longer flipping")
	end
	
	local doubleFlipping = false
	function useCommand.doubleflip()
		opx("-","Now double flipping")
		doubleFlipping = true
		pl=cmdlp
		me=pl.Character
		xl=me.Torso['Right Shoulder']
		local debounce=false
		function _restoreproperties()
			Holder = player.Character
			Torso = Holder:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function ManageAnimation(value)
			Holder = player.Character
			Player = player
			if value == "no anim" then
				Anim = Holder:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = true
					Anim.Parent = Player
				end
			elseif value == "re-anim" then
				Anim = Player:FindFirstChild("Animate")
				if Anim~=nil then
					Anim.Disabled = false
					Anim.Parent = Holder
				end
			end
		end
		function Down(ml)
			for i=1, ml.velocity.y/3 do
				ml.velocity = ml.velocity+Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip3()
			if debounce==true then return end
			debounce=true
			Char = player.Character
			Human = Char.Humanoid
			Torso = Char.Torso
			CF = Torso.CFrame
			Human.PlatformStand = true
			VelUp = Instance.new("BodyVelocity")
			VelUp.velocity = Vector3.new(0,60,0)+Torso.CFrame.lookVector*26
			VelUp.P = VelUp.P*2
			VelUp.maxForce = Vector3.new(10000,10000,10000)*999
			VelUp.Parent = Torso
			coroutine.resume(coroutine.create(Down),VelUp)
			Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.maxTorque = Vector3.new(100000,100000,100000)*999
			Gyro.cframe = CF
			Gyro.Parent = Torso
			for i=2, 28 do
				Gyro.cframe = Gyro.cframe*CFrame.fromEulerAnglesXYZ(math.pi/-8,0,0)
				wait()
			end
			Gyro.cframe = CF
			wait()
			Gyro:Remove()
			Human.PlatformStand = false
			_restoreproperties()
			debounce=false
		end
		while doubleFlipping do
			wait()
			Flip3()
		end
	end
	
	function useCommand.undoubleflip()
		doubleFlipping = false
		opx("-","No longer double flipping")
	end
	
	local stick = false
	function useCommand.glue()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				stick = true
				opx("-","Now glued to "..target.Name)
				repeat wait()
					cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(cmdlp.Character.HumanoidRootPart.CFrame.lookVector.X,target.Character.HumanoidRootPart.Size.Y,cmdlp.Character.HumanoidRootPart.CFrame.lookVector.Z)
				until stick == false
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unglue()
		stick = false
		opx("-","No longer glued")
	end
	
	T1.Name = "T1"
	T1.Parent = HoldTab
	T1.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T1.BorderSizePixel = 0
	T1.Position = UDim2.new(0, 0, 0.110238664, 0)
	T1.Size = UDim2.new(0, 141, 0, 18)
	T1.Text = ""
	T1.TextColor3 = Color3.new(1, 1, 1)
	T1.TextSize = 12
	
	XE.Name = "XE"
	XE.Parent = T1
	XE.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE.BorderSizePixel = 0
	XE.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE.Size = UDim2.new(0, 19, 0, 18)
	XE.Font = Enum.Font.SourceSansBold
	XE.Text = "+"
	XE.TextColor3 = Color3.new(1, 1, 1)
	XE.TextSize = 14
	XE.MouseButton1Down:Connect(function()
		arguments = T1.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T2.Name = "T2"
	T2.Parent = HoldTab
	T2.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T2.BorderSizePixel = 0
	T2.Position = UDim2.new(0, 0, 0.188670039, 0)
	T2.Size = UDim2.new(0, 141, 0, 18)
	T2.Text = ""
	T2.TextColor3 = Color3.new(1, 1, 1)
	T2.TextSize = 12
	
	XE_2.Name = "XE"
	XE_2.Parent = T2
	XE_2.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_2.BorderSizePixel = 0
	XE_2.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_2.Size = UDim2.new(0, 19, 0, 18)
	XE_2.Font = Enum.Font.SourceSansBold
	XE_2.Text = "+"
	XE_2.TextColor3 = Color3.new(1, 1, 1)
	XE_2.TextSize = 14
	XE_2.MouseButton1Down:Connect(function()
		arguments = T2.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T4.Name = "T4"
	T4.Parent = HoldTab
	T4.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T4.BorderSizePixel = 0
	T4.Position = UDim2.new(-9.31322575e-10, 0, 0.348800778, 0)
	T4.Size = UDim2.new(0, 141, 0, 18)
	T4.Text = ""
	T4.TextColor3 = Color3.new(1, 1, 1)
	T4.TextSize = 12
	
	XE_3.Name = "XE"
	XE_3.Parent = T4
	XE_3.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_3.BorderSizePixel = 0
	XE_3.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_3.Size = UDim2.new(0, 19, 0, 18)
	XE_3.Font = Enum.Font.SourceSansBold
	XE_3.Text = "+"
	XE_3.TextColor3 = Color3.new(1, 1, 1)
	XE_3.TextSize = 14
	XE_3.MouseButton1Down:Connect(function()
		arguments = T4.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T3.Name = "T3"
	T3.Parent = HoldTab
	T3.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T3.BorderSizePixel = 0
	T3.Position = UDim2.new(-9.31322575e-10, 0, 0.270369381, 0)
	T3.Size = UDim2.new(0, 141, 0, 18)
	T3.Text = ""
	T3.TextColor3 = Color3.new(1, 1, 1)
	T3.TextSize = 12
	
	XE_4.Name = "XE"
	XE_4.Parent = T3
	XE_4.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_4.BorderSizePixel = 0
	XE_4.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_4.Size = UDim2.new(0, 19, 0, 18)
	XE_4.Font = Enum.Font.SourceSansBold
	XE_4.Text = "+"
	XE_4.TextColor3 = Color3.new(1, 1, 1)
	XE_4.TextSize = 14
	XE_4.MouseButton1Down:Connect(function()
		arguments = T3.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T8.Name = "T8"
	T8.Parent = HoldTab
	T8.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T8.BorderSizePixel = 0
	T8.Position = UDim2.new(-9.31322575e-10, 0, 0.669062257, 0)
	T8.Size = UDim2.new(0, 141, 0, 18)
	T8.Text = ""
	T8.TextColor3 = Color3.new(1, 1, 1)
	T8.TextSize = 12
	
	XE_5.Name = "XE"
	XE_5.Parent = T8
	XE_5.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_5.BorderSizePixel = 0
	XE_5.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_5.Size = UDim2.new(0, 19, 0, 18)
	XE_5.Font = Enum.Font.SourceSansBold
	XE_5.Text = "+"
	XE_5.TextColor3 = Color3.new(1, 1, 1)
	XE_5.TextSize = 14
	XE_5.MouseButton1Down:Connect(function()
		arguments = T8.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	T6.Name = "T6"
	T6.Parent = HoldTab
	T6.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T6.BorderSizePixel = 0
	T6.Position = UDim2.new(0, 0, 0.508931518, 0)
	T6.Size = UDim2.new(0, 141, 0, 18)
	T6.Text = ""
	T6.TextColor3 = Color3.new(1, 1, 1)
	T6.TextSize = 12
	
	XE_6.Name = "XE"
	XE_6.Parent = T6
	XE_6.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_6.BorderSizePixel = 0
	XE_6.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_6.Size = UDim2.new(0, 19, 0, 18)
	XE_6.Font = Enum.Font.SourceSansBold
	XE_6.Text = "+"
	XE_6.TextColor3 = Color3.new(1, 1, 1)
	XE_6.TextSize = 14
	XE_6.MouseButton1Down:Connect(function()
		arguments = T6.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T5.Name = "T5"
	T5.Parent = HoldTab
	T5.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T5.BorderSizePixel = 0
	T5.Position = UDim2.new(0, 0, 0.43050012, 0)
	T5.Size = UDim2.new(0, 141, 0, 18)
	T5.Text = ""
	T5.TextColor3 = Color3.new(1, 1, 1)
	T5.TextSize = 12
	
	XE_7.Name = "XE"
	XE_7.Parent = T5
	XE_7.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_7.BorderSizePixel = 0
	XE_7.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_7.Size = UDim2.new(0, 19, 0, 18)
	XE_7.Font = Enum.Font.SourceSansBold
	XE_7.Text = "+"
	XE_7.TextColor3 = Color3.new(1, 1, 1)
	XE_7.TextSize = 14
	XE_7.MouseButton1Down:Connect(function()
		arguments = T5.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T7.Name = "T7"
	T7.Parent = HoldTab
	T7.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T7.BorderSizePixel = 0
	T7.Position = UDim2.new(-9.31322575e-10, 0, 0.590630829, 0)
	T7.Size = UDim2.new(0, 141, 0, 18)
	T7.Text = ""
	T7.TextColor3 = Color3.new(1, 1, 1)
	T7.TextSize = 12
	
	XE_8.Name = "XE"
	XE_8.Parent = T7
	XE_8.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_8.BorderSizePixel = 0
	XE_8.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_8.Size = UDim2.new(0, 19, 0, 18)
	XE_8.Font = Enum.Font.SourceSansBold
	XE_8.Text = "+"
	XE_8.TextColor3 = Color3.new(1, 1, 1)
	XE_8.TextSize = 14
	XE_8.MouseButton1Down:Connect(function()
		arguments = T7.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T9.Name = "T9"
	T9.Parent = HoldTab
	T9.BackgroundColor3 = Color3.new(0.113725, 0.113725, 0.113725)
	T9.BorderSizePixel = 0
	T9.Position = UDim2.new(-1.39698386e-09, 0, 0.750761628, 0)
	T9.Size = UDim2.new(0, 141, 0, 18)
	T9.Text = ""
	T9.TextColor3 = Color3.new(1, 1, 1)
	T9.TextSize = 12
	
	XE_9.Name = "XE"
	XE_9.Parent = T9
	XE_9.BackgroundColor3 = Color3.new(0.101961, 0.101961, 0.101961)
	XE_9.BorderSizePixel = 0
	XE_9.Position = UDim2.new(0.861749768, 0, -0.0032687718, 0)
	XE_9.Size = UDim2.new(0, 19, 0, 18)
	XE_9.Font = Enum.Font.SourceSansBold
	XE_9.Text = "+"
	XE_9.TextColor3 = Color3.new(1, 1, 1)
	XE_9.TextSize = 14
	XE_9.MouseButton1Down:Connect(function()
		arguments = T9.Text:split(" ")
		useCommand[arguments[1]]()
	end)
	
	T1.Text = CMDTab[1]
	T2.Text = CMDTab[2]
	T3.Text = CMDTab[3]
	T4.Text = CMDTab[4]
	T5.Text = CMDTab[5]
	T6.Text = CMDTab[6]
	T7.Text = CMDTab[7]
	T8.Text = CMDTab[8]
	T9.Text = CMDTab[9]
	
	function useCommand.nugget()
		opx("-","Changed character into a nugget")
		if cmd15(cmdlp) then
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "RightUpperArm" or v.Name == "LeftUpperArm" or v.Name == "RightUpperLeg" or v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
		cmdlp.Character.Head.Mesh:Destroy()
	end
	
	local cwFlipping = false
	function useCommand.cartwheel()
		opx("-","Now cartwheeling")
		cwFlipping = true
		function _restoreproperties()
			Torso = cmdlp.Character:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function Down(ml)
			for i = 1,ml.velocity.y/3 do
				ml.velocity = ml.velocity + Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip()
			if debounce == true then return end
			debounce = true
			local Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.maxTorque = Vector3.new(100000,100000,100000)*999
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			Gyro.Parent = cmdlp.Character.Torso
			for i=0, 50 do
				Gyro.CFrame = Gyro.CFrame*CFrame.fromEulerAnglesXYZ(math.pi/-29,0,0)
				wait()
			end
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			wait()
			Gyro:Remove()
			cmdlp.Character.Humanoid.PlatformStand = false
			_restoreproperties()
			debounce = false
		end
		while cwFlipping do
			wait()
			Flip()
		end
	end
	
	function useCommand.uncartwheel()
		cwFlipping = false
		opx("-","No longer cartwheeling")
	end
	
	local seizureFlipping = false
	function useCommand.seizure()
		opx("-","Now seizuring")
		seizureFlipping = true
		function _restoreproperties()
			Torso = cmdlp.Character:FindFirstChild("Torso")
			RightS = Torso:FindFirstChild("Right Shoulder")
			LeftS = Torso:FindFirstChild("Left Shoulder")
			RightH = Torso:FindFirstChild("Right Hip")
			LeftH = Torso:FindFirstChild("Left Hip")
			RightS.MaxVelocity = .15
			LeftS.MaxVelocity = .15
			RightH.MaxVelocity = .1
			LeftH.MaxVelocity = .1
			RightS.DesiredAngle = 0
			LeftS.DesiredAngle = 0
			LeftH.DesiredAngle = 0
			RightH.DesiredAngle = 0
		end
		function Down(ml)
			for i = 1,ml.velocity.y/3 do
				ml.velocity = ml.velocity + Vector3.new(0,-4.25,0)
				wait()
			end
			ml:Remove()
		end
		function Flip4()
			if debounce == true then return end
			debounce = true
			cmdlp.Character.Humanoid.PlatformStand = true
			local VelUp = Instance.new("BodyVelocity")
			VelUp.maxForce = Vector3.new(10000,10000,10000)*999
			VelUp.Parent = cmdlp.Character.Torso
			coroutine.resume(coroutine.create(Down),VelUp)
			local Gyro = Instance.new("BodyGyro")
			Gyro.P = Gyro.P*10
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			Gyro.Parent = cmdlp.Character.Torso
			for i=1, 16 do
				Gyro.CFrame = Gyro.CFrame*CFrame.fromEulerAnglesXYZ(math.pi/9,math.pi/-18,0)
				wait()
			end
			Gyro.CFrame = cmdlp.Character.Torso.CFrame
			wait()
			Gyro:Remove()
			cmdlp.Character.Humanoid.PlatformStand = false
			_restoreproperties()
			debounce = false
		end
		while seizureFlipping do
			wait()
			Flip4()
		end
	end
	
	function useCommand.unseizure()
		seizureFlipping = false
		opx("-","No longer seizuring")
	end
	
	function useCommand.fling()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				noclip()
				PF = 99
				PF = PF*10
				local BT = Instance.new("BodyThrust")
				cmdhrp = cmdlp.Character.HumanoidRootPart
				BT.Parent = cmdhrp
				BT.Force = Vector3.new(PF, 0, PF)
				BT.Location = cmdhrp.Position
				for i,player in pairs(cmdlp.Character:GetChildren()) do
					if player.ClassName == "Part" then
						player.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
					end
				end
				cmdhrp.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0, 0, 0)
				wait(1)
				for i,player in pairs(cmdlp.Character:GetChildren()) do
					if player.ClassName == "Part" then
						player.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
					end
				end
				if Noclipping then
					Noclipping:Disconnect()
				end
				Clip = true
				cmdlp.Character.HumanoidRootPart.BodyThrust:Destroy()
				cmdlp.Character.Humanoid.PlatformStand = true
				cmdlp.Character.Humanoid.Sit = true
				wait(0.1)
				cmdlp.Character.Humanoid.Jump = true
				opx("-","Flung "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.invisiblefling()
		opx("-","Now Invisible Flinging use refresh to stop")
		local ch = cmdlp.Character
		local prt=Instance.new("Model", cmdlp.Character)
		local z1 = Instance.new("Part")
		z1.Name="Torso"
		z1.CanCollide = false
		z1.Anchored = true
		local z2 = Instance.new("Part", prt)
		z2.Name="Head"
		z2.Anchored = true
		z2.CanCollide = false
		local z3 =Instance.new("Humanoid", prt)
		z3.Name="Humanoid"
		z1.Position = Vector3.new(0,9999,0)
		cmdlp.Character=prt
		wait(3)
		cmdlp.Character=ch
		wait(3)
		local plr = cmdlp
		cmdm = plr:GetMouse()
		local Hum = Instance.new("Humanoid")
		z2:Clone()
		Hum.Parent = cmdlp.Character
		local root =  cmdlp.Character.HumanoidRootPart
		for i,v in pairs(plr.Character:GetChildren()) do
			if v ~= root and  v.Name ~= "Humanoid" then
				v:Destroy()
			end
		end
		root.Transparency = 0
		root.Material = "ForceField"
		root.Color = Color3.new(1, 1, 1)
		game:GetService('RunService').Stepped:connect(function()
			cmdlp.Character.HumanoidRootPart.CanCollide = false
		end)
		game:GetService('RunService').RenderStepped:connect(function()
			cmdlp.Character.HumanoidRootPart.CanCollide = false
		end)
		sFLY()
		workspace.CurrentCamera.CameraSubject = root
		PF = 99999
		PF = PF*10
		local bambam = Instance.new("BodyThrust")
		bambam.Parent = cmdlp.Character.HumanoidRootPart
		bambam.Force = Vector3.new(PF,0,PF)
		bambam.Location = cmdlp.Character.HumanoidRootPart.Position
	end
	
	function useCommand.freefling()
		opx("-","Now freeflinging use unfling to stop")
		noclip()
		sFLY()
		workspace.CurrentCamera.CameraSubject = cmdlp.Character.HumanoidRootPart
		local BT = Instance.new("BodyThrust")
		BT.Parent = cmdlp.Character.HumanoidRootPart
		BT.Force = Vector3.new(999999, 999999, 999999)
		BT.Location = cmdlp.Character.HumanoidRootPart.Position
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
			end
		end
	end
	
	function useCommand.unfling()
		opx("-","You are no longer flinging")
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
		FLYING = false
		cmdlp.Character.HumanoidRootPart.BodyThrust:Destroy()
		cmdlp.Character.Humanoid.PlatformStand = true
		cmdlp.Character.Humanoid.Sit = true
		wait(0.1)
		cmdlp.Character.Humanoid.Jump = true
	end
	
	RestoreCFling = {}
	function useCommand.cleanfling()
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		if tool then
			opx("-","Now clean flinging")
			tool.Parent = cmdlp.Backpack
			tool.Handle.Massless = true
			RestoreCFling = {
				Anim = cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId;
				Grip = tool.GripPos;
			}
			tool.GripPos = Vector3.new(100000000000000,100000000000000,100000000000000)
			cmdlp.Character.HumanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(math.huge,math.huge,math.huge,math.huge,math.huge)
			tool.Parent = cmdlp.Character
			pcall(function() cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "nil" end)
			wait(.1)
			tool.Parent = cmdlp.Backpack
			wait(.1)
			tool.Parent = cmdlp.Character
			noclip()
		else
			opx("*","You have no tool equipped!")
		end
	end
	
	function useCommand.uncleanfling()
		opx("-","No longer clean flinging")
		cmdlp.Character.HumanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
		cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId = RestoreCFling.Anim
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		if tool then
			tool.GripPos = RestoreCFling.Grip
		end
	end
	
	function useCommand.notoolanim()
		pcall(function() cmdlp.Character.Animate.toolnone.ToolNoneAnim.AnimationId = "nil" end)
		opx("-","You now have no tool anim")
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		if tool then
			wait(.1)
			tool.Parent = cmdlp.Backpack
			wait(.1)
			tool.Parent = cmdlp.Character
		end
	end
	
	local Lagging = false
	function useCommand.lag()
		opx("-","Now lagging character")
		Lagging = true
		repeat wait()
			cmdlp.Character.HumanoidRootPart.Anchored = false
			wait(.1)
			cmdlp.Character.HumanoidRootPart.Anchored = true
			wait(.1)
		until Lagging == false
	end
	
	function useCommand.unlag()
		Lagging = false
		opx("No longer lagging character")
		wait(.3)
		cmdlp.Character.HumanoidRootPart.Anchored = false
	end
	
	local Annoy = false
	function useCommand.annoy()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					Annoy = true
					opx("-","Now annoying "..target.Name)
					while Annoy do
						cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,0,0)
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unannoy()
		Annoy = false
		opx("-","No longer annoying")
	end
	
	function useCommand.weaken()
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
			end
		end
		opx("-","You are now weak")
	end
	
	function useCommand.strengthen()
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
			end
		end
		opx("-","You are now strong")
	end
	
	function useCommand.unweak()
		for i,player in pairs(cmdlp.Character:GetChildren()) do
			if player.ClassName == "Part" then
				player.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
		opx("-","You are no longer weak/strong")
	end
	
	function useCommand.sparkles()
		opx("-","If you had a Fairy it now makes a sparkles illusion")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(1.5, 0, -1.5)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end
	
	function useCommand.sword()
		opx("-","If you had a Sword on your back you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(2, 2, 0)
				tool.GripRight = Vector3.new(9, 9, 9)
				tool.GripUp = Vector3.new(-9, -9, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://28090109"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		while wait() do
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Equipped:Connect(function(Mouse)
						Mouse.Button1Down:Connect(function()
							play:Play()
						end)
					end)
				end
			end
		end
	end
	
	function useCommand.scythe()
		opx("-","If you had a Scythe on your back you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(-0.8, -2, 0)
				tool.GripRight = Vector3.new(0, 0, 0)
				tool.GripUp = Vector3.new(9, 9, -3)
				tool.GripForward = Vector3.new(0, 0, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://28090109"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		while wait() do
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Equipped:Connect(function(Mouse)
						Mouse.Button1Down:Connect(function()
							play:Play()
						end)
					end)
				end
			end
		end
	end
	
	local Follow = false
	function useCommand.leash()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
					if hat.Handle ~= nil then
						if hat.Name == "FurryCatTail" then
							local tool = Instance.new("Tool", cmdlp.Backpack)
							tool.Name = target.Name.."s leash"
							tool.Parent = cmdp.LocalPlayer.Character
							tool.GripPos = Vector3.new(0, 0, 1)
							tool.GripRight = Vector3.new(1,1,0)
							tool.GripUp = Vector3.new(-9,-3,0)
							local hathandle = hat.Handle
							hathandle:FindFirstChildOfClass("Weld"):Destroy()
							hathandle.Parent = tool
							hathandle.Massless = true
						elseif hat.Name == "Spike Necklace" then
							local tool = Instance.new("Tool", cmdlp.Backpack)
							tool.Name = target.Name.."s collar"
							tool.Parent = cmdp.LocalPlayer.Character
							tool.GripPos = Vector3.new(0.6, -0.6, 3)
							local hathandle = hat.Handle
							hathandle:FindFirstChildOfClass("Weld"):Destroy()
							hathandle.Parent = tool
							hathandle.Massless = true
						end
					end
				end
				flwnum = -4.5
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					Follow = true
					opx("-","Now leashing "..target.Name)
					while Follow do
						cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(-0.9,0,4.5)
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.penis()
		opx("-","You boutta ro-cum bro?")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if v.Handle.SpecialMesh.TextureId == "http://www.roblox.com/asset/?id=4390955131" then
					v.Name = cmdlp.Name.."'s huge shaft"
				end
			end
		end
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if v.Handle.SpecialMesh.TextureId == "http://www.roblox.com/asset/?id=4566834838" then
					v.Name = cmdlp.Name.."'s right ball"
				end
			end
		end
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if v.Handle.SpecialMesh.TextureId == "http://www.roblox.com/asset/?id=4524758175" then
					v.Name = cmdlp.Name.."'s left ball"
				end
			end
		end
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				if hat.Name == cmdlp.Name.."'s huge shaft" then
					tool.Name = hat.Name
					tool.Parent = cmdlp.Character
					hat.Handle.SpecialMesh:Destroy()
					tool.GripPos = Vector3.new(-1, 2, 1.5)
					tool.GripRight = Vector3.new(0, 0, 0)
					tool.GripUp = Vector3.new(9, 9, 0)
					tool.GripForward = Vector3.new(0, 0, 0)
				elseif hat.Name == cmdlp.Name.."'s right ball" then
					tool.Name = hat.Name
					tool.Parent = cmdlp.Character
					hat.Handle.SpecialMesh:Destroy()
					tool.GripPos = Vector3.new(0.5, 2, 0.5)
					tool.GripRight = Vector3.new(0, 0, 0)
					tool.GripUp = Vector3.new(9, 9, 0)
					tool.GripForward = Vector3.new(0, 0, 0)
				elseif hat.Name == cmdlp.Name.."'s left ball" then
					tool.Name = hat.Name
					tool.Parent = cmdlp.Character
					hat.Handle.SpecialMesh:Destroy()
					tool.GripPos = Vector3.new(0.5, 2, 2.5)
					tool.GripRight = Vector3.new(0, 0, 0)
					tool.GripUp = Vector3.new(9, 9, 0)
					tool.GripForward = Vector3.new(0, 0, 0)
				end
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end
	
	function useCommand.animation()
		if arguments[2] and cmdnum(arguments[2]) then
			if cmd6(cmdlp) then
				local AnimationId = tostring(arguments[2])
				local Animprefix = Instance.new("Animation")
				Animprefix.AnimationId = "rbxassetid://"..AnimationId
				local animplay = cmdlp.Character.Humanoid:LoadAnimation(Animprefix)
				animplay:Play()
				if arguments[3] and cmdnum(arguments[3]) then
					animplay:AdjustSpeed(arguments[3])
				end
				opx("-","Now playing animation: "..arguments[2])
			else
				opx("*","R6 is needed for this command")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unanimation()
		for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
			v:Stop()
		end
		opx("-","Stopped all aniamtions")
	end
	
	function useCommand.uninsane()
		opx("-","You are no longer insane")
		insane:Stop()
		Spas:Destroy()
	end
	
	function useCommand.monstermash()
		if cmd6(cmdlp) then
			local AnimationId = "35654637"
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
			play:Play()
			opx("-","Now playing animation: 35654637")
		else
			opx("*","R6 is needed for this command")
		end
	end
	
	function useCommand.ragdoll()
		opx("-","Now ragdolling")
		cmdlp.Character.Humanoid.PlatformStand = true
	end
	
	function useCommand.unragdoll()
		opx("-","No longer ragdolling")
		cmdlp.Character.Humanoid.PlatformStand = false
	end
	
	function useCommand.animpack()
		if arguments[2] == "sneaky" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1132461372"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1132469004"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1132473842"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1132477671"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1132489853"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1132494274"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1132500520"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1132506407"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1132510133"
		elseif arguments[2] == "old" then
			local Char = cmdlp.Character
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=387947158"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=387947464"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=387947975"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616092998"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616094091"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=382460631"
		elseif arguments[2] == "toy" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=782844582"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=782845186"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=782843345"
		elseif arguments[2] == "pirate" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=750779899"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=750780242"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=750781874"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=750782770"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=750782230"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=750783738"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=750784579"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=750785176"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=750785693"
		elseif arguments[2] == "knight" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=658360781"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=657600338"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=657595757"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=657568135"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=658409194"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=657564596"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=657560551"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=657557095"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=657552124"
		elseif arguments[2] == "astronaut" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=891609353"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=891617961"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=891621366"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=891633237"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=891627522"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=891636393"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=891639666"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=891663592"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=891636393"
		elseif arguments[2] == "vampire" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083439238"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083443587"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083445855"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083450166"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083455352"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083462077"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1083464683"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1083467779"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083473930"
		elseif arguments[2] == "robot" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616086039"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616087089"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616088211"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616089559"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616090535"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616091570"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616092998"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616094091"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616095330"
		elseif arguments[2] == "levitation" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616003713"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616005863"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616006778"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616008087"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616008936"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616010382"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616011509"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616012453"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
		elseif arguments[2] == "bubbly" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=909997997"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=910001910"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=910004836"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=910009958"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=910016857"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=910025107"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=910028158"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=910030921"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=910034870"
		elseif arguments[2] == "werewolf" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083182000"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083189019"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083195517"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083214717"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083216690"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1083222527"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1083225406"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083178339"
		elseif arguments[2] == "stylish" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616133594"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616134815"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616136790"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616138447"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616139451"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616140816"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616143378"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616144772"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616146177"
		elseif arguments[2] == "mage" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=707826056"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=707742142"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=707855907"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=707853694"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=707861613"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=707876443"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=707894699"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=707897309"
		elseif arguments[2] == "cartoony" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=742636889"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=742637151"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=742637544"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=742638445"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=742637942"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=742638842"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=742639220"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=742639812"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=742640026"
		elseif arguments[2] == "zombie" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616158929"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616160636"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616165109"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616166655"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616168032"
		elseif arguments[2] == "superhero" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616104706"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616108001"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616111295"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616113536"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616115533"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616117076"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=616119360"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=616120861"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616122287"
		elseif arguments[2] == "ninja" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=656114359"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=656115606"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=656117400"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=656118341"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=656117878"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=656118852"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=656119721"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=656121397"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=656121766"
		elseif arguments[2] == "elder" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=845392038"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=845396048"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=845397899"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=845400520"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=845398858"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=845386501"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=845401742"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=845403127"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=845403856"
		elseif arguments[2] == "oldschool" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=5319816685"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=5319839762"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=5319828216"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=5319831086"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=5319841935"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=5319844329"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=5319850266"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=5319852613"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=5319847204"
		elseif arguments[2] == "confident" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1069946257"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1069973677"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1069977950"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1069987858"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1069984524"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1070001516"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1070009914"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1070012133"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1070017263"
		elseif arguments[2] == "popstar" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1213044953"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1212900995"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1212900985"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1212900985"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1212954642"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980348"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1212852603"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1212998578"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1212980338"
		elseif arguments[2] == "patrol" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1148811837"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1148863382"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1149612882"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1150842221"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1150944216"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1150967949"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1151204998"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1151221899"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1151231493"
		elseif arguments[2] == "princess" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=940996062"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=941000007"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=941003647"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=941013098"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=941008832"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=941015281"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=941018893"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=941025398"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=941028902"
		elseif arguments[2] == "cowboy" then
			local Char = cmdlp.Character
			Char.Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1014380606"
			Char.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1014384571"
			Char.Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1014390418"
			Char.Animate.idle.Animation1.Weight.Value = "9"
			Char.Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1014398616"
			Char.Animate.idle.Animation2.Weight.Value = "1"
			Char.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1014394726"
			Char.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1014401683"
			Char.Animate.swim.Swim.AnimationId = "http://www.roblox.com/asset/?id=1014406523"
			Char.Animate.swimidle.SwimIdle.AnimationId = "http://www.roblox.com/asset/?id=1014411816"
			Char.Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1014421541"
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.spin()
		local Spin = Instance.new("BodyAngularVelocity", cmdlp.Character.HumanoidRootPart)
		Spin.Name = "Spinning"
		if arguments[2] then
			if cmdnum(arguments[2]) then
				Spin.AngularVelocity = Vector3.new(0,arguments[2],0)
				Spin.MaxTorque = Vector3.new(0, math.huge, 0)
				opx("-","Now spinning at speed: "..arguments[2])
			else
				opx("*","A number is needed")
			end
		else
			Spin.AngularVelocity = Vector3.new(0,20,0)
			Spin.MaxTorque = Vector3.new(0, math.huge, 0)
			opx("-","Now spinning")
		end
	end
	
	function useCommand.unspin()
		opx("-","Stopped spinning")
		for i,v in pairs(cmdlp.Character.HumanoidRootPart:GetChildren()) do
			if v.Name == "Spinning" then
				v:Destroy()
			end
		end
	end
	
	function useCommand.hatspin()
		opx("-","Hats are now spinning")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				local findForce = v.Handle:FindFirstChildOfClass("BodyForce")
				if findForce == nil then
					local a = Instance.new("BodyPosition")
					local b = Instance.new("BodyAngularVelocity")
					a.Parent = v.Handle
					b.Parent = v.Handle
					a.Name = "un"
					b.Name = "un2"
					v.Handle.AccessoryWeld:Destroy()
					b.AngularVelocity = Vector3.new(0,100,0)
					b.MaxTorque = Vector3.new(0,200,0)
					a.P = 30000
					a.D = 50
					game:GetService('RunService').Stepped:connect(function()
						a.Position = cmdlp.Character.Head.Position
					end)
				end
			end
		end
	end
	
	function useCommand.unhatspin()
		opx("-","Stopped spinning hats")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("Accessory") then
				v.Handle.un:Destroy()
				v.Handle.un2:Destroy()
			end
		end
	end
	
	local ff = false
	function useCommand.facefuck()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if ff == true then
						ff = false
						opx("-","Stopped facefucking/faceraping")
						cmdlp.Character.Humanoid.Sit = false				
						return
					else ff = true
						opx("-","Facefucking/faceraping enabled")
						while ff do
							cmdlp.Character.Humanoid.Sit = true
							cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(180),0)* CFrame.new(0,1.6,0.4)
							wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unfacefuck()
		opx("-","Stopped facefucking/faceraping")
		cmdlp.Character.Humanoid.Sit = false
		ff = false
	end
	
	local ff2 = false
	function useCommand.facefuckanim()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				facebangAnim = Instance.new("Animation")
				facebangAnim.AnimationId = "rbxassetid://148840371"
				facebang = cmdlp.Character.Humanoid:LoadAnimation(facebangAnim)
				facebang:Play(.1, 1, 1)
				facebang:AdjustSpeed(3)
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if ff2 == true then
						ff2 = false
						opx("-","Stopped facefucking/faceraping")				
						return
					else ff2 = true
						opx("-","Facefucking/faceraping enabled")
						while ff2 do
							cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(180),0)* CFrame.new(0.4,1.6,0.4)
							wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unfacefuckanim()
		ff2 = false
		facebang:Stop()
		facebang:Destroy()
		opx("-","Stopped facefucking/faceraping")
	end
	
	local pb = false
	function useCommand.piggyback()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if pb == true then
						pb = false
						opx("-","Stopped riding/piggybacking")
						cmdlp.Character.Humanoid.Sit = false
						return
					else pb = true
						opx("-","Riding/piggybacking enabled")
						while pb do
							cmdlp.Character.Humanoid.Sit = true
							cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
							wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unpiggyback()
		opx("-","Stopped piggybacking/riding")
		pb = false
		cmdlp.Character.Humanoid.Sit = false
	end
	
	local Bang = false
	function useCommand.fuck()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				flwnum = -1
				bangAnim = Instance.new("Animation")
				bangAnim.AnimationId = "rbxassetid://148840371"
				bang = cmdlp.Character.Humanoid:LoadAnimation(bangAnim)
				bang:Play(.1, 1, 1)
				bang:AdjustSpeed(3)
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if Bang == true then
						Follow = false
						Bang = false
						opx("-","Fuck/rape disabled")
						return
					else Bang = true
						opx("-","Fuck/rape enabled")
						while Bang do
							cmdlp.Character.HumanoidRootPart.CFrame=
								target.Character.HumanoidRootPart.CFrame +  target.Character.HumanoidRootPart.CFrame.lookVector * flwnum
							wait()
						end
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unfuck()
		bang:Stop()
		bangAnim:Destroy()
		Bang = false
		opx("-","Rape/fuck disabled")
	end
	
	local Follow = false
	function useCommand.follow()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				flwnum = -5
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					if Follow == true then
						Follow = false;
						opx("-","Follow/stalk disabled")
						return
					else Follow = true
						opx("-","Follow/stalk enabled") 
					end
					while Follow do
						cmdlp.Character.HumanoidRootPart.CFrame=
							target.Character.HumanoidRootPart.CFrame +  target.Character.HumanoidRootPart.CFrame.lookVector * flwnum
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unfollow()
		Follow = false
		opx("-","Stalk/follow disabled")
	end
	
	function useCommand.oldroblox()
		Confirm("Default", "This command is not reversible.")
		if Confirmation == true then
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") then
					local dec = Instance.new("Texture", v)
					dec.Texture = "rbxassetid://48715260"
					dec.Face = "Top"
					dec.StudsPerTileU = "1"
					dec.StudsPerTileV = "1"
					dec.Transparency = v.Transparency
					v.Material = "Plastic"
					local dec2 = Instance.new("Texture", v)
					dec2.Texture = "rbxassetid://20299774"
					dec2.Face = "Bottom"
					dec2.StudsPerTileU = "1"
					dec2.StudsPerTileV = "1"
					dec2.Transparency = v.Transparency
					v.Material = "Plastic"
				end
			end
			game.Lighting.ClockTime = 12
			game.Lighting.GlobalShadows = false
			game.Lighting.Outlines = false
			for i,v in pairs(game.Lighting:GetDescendants()) do
				if v:IsA("Sky") then
					v:Destroy()
				end
			end
			local sky = Instance.new("Sky", game.Lighting)
			sky.SkyboxBk = "rbxassetid://161781263"
			sky.SkyboxDn = "rbxassetid://161781258"
			sky.SkyboxFt = "rbxassetid://161781261"
			sky.SkyboxLf = "rbxassetid://161781267"
			sky.SkyboxRt = "rbxassetid://161781268"
			sky.SkyboxUp = "rbxassetid://161781260"
			opx("-","Old Roblox game theme loaded")
		end
	end
	
	function useCommand.savegame()
		saveinstance()
		opx("-","Saved game in your workspace folder")
	end
	
	function useCommand.btools()
		local Clone_T = Instance.new("HopperBin", cmdlp.Backpack)
		Clone_T.BinType = "Clone"
		local Destruct = Instance.new("HopperBin", cmdlp.Backpack)
		Destruct.BinType = "Hammer"
		local Hold_T = Instance.new("HopperBin", cmdlp.Backpack)
		Hold_T.BinType = "Grab"
		opx("-","Building tools loaded")
	end
	
	function useCommand.fex()
		loadstring(game:GetObjects("rbxassetid://4698064966")[1].Source)()
		opx("-","Loaded F3X")
	end
	
	function useCommand.remotespy()
		loadstring(game:HttpGet("https://github.com/exxtremestuffs/SimpleSpySource/raw/master/SimpleSpy.lua"))()
		opx("-","Simple Spy has loaded (credits to exxtremestuffs)")
	end
	
	function useCommand.playerstalker()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/projetcs/PlayerStalkerV2",true))()
		opx("-","Loaded PlayerStalker")
	end
	
	function useCommand.badger()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/badger",true))()
		opx("-","Loaded Badger V2")
	end
	
	function useCommand.explorer()
		loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
		opx("-", "Loaded dex")
	end
	
	function useCommand.removeeffects()
		opx("-","Removed all effects")
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Sparkles") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") then
				v:Destroy()
			end
		end
	end
	
	function useCommand.removeseats()
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Seat") or v:IsA("VehicleSeat") then
				v:Destroy()
			end
		end
		opx("-","Removed all seats")
	end
	
	XLS = {}
	function useCommand.removelocalscripts()
		opx("-","Removed all localscripts")
		for _,ls in pairs(game:GetDescendants()) do
			if ls:IsA("LocalScript") then
				ls.Disabled = true
				table.insert(XLS, ls)
			end
		end
	end
	
	function useCommand.restorelocalscripts()
		opx("-","Restored all localscripts")
		for _,v in pairs(XLS) do
			v.Disabled = false
		end
	end
	
	function useCommand.xray()
		transparent = true
		x(transparent)
		opx("-","X-Ray enabled")
	end
	
	function useCommand.unxray()
		transparent = false
		x(transparent)
		opx("-","X-Ray disabled")
	end
	
	function useCommand.tabs()
		if arguments[2] == "off" then
			opx("-","Turned off tabs")
			TabsOff = true
			HoldTab.Visible = false
			updatesaves()
		elseif arguments[2] == "on" then
			opx("-","Turned on tabs")
			TabsOff = false
			HoldTab.Visible = true
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.changetab()
		if arguments[3] then
			MoreArg = getstring(3)
			if arguments[2] == "1" then
				T1.Text = MoreArg
				CMDTab[1] = MoreArg
			elseif arguments[2] == "2" then
				T2.Text = MoreArg
				CMDTab[2] = MoreArg
			elseif arguments[2] == "3" then
				T3.Text = MoreArg
				CMDTab[3] = MoreArg
			elseif arguments[2] == "4" then
				T4.Text = MoreArg
				CMDTab[4] = MoreArg
			elseif arguments[2] == "5" then
				T5.Text = MoreArg
				CMDTab[5] = MoreArg
			elseif arguments[2] == "6" then
				T6.Text = MoreArg
				CMDTab[6] = MoreArg
			elseif arguments[2] == "7" then
				T7.Text = MoreArg
				CMDTab[7] = MoreArg
			elseif arguments[2] == "8" then
				T8.Text = MoreArg
				CMDTab[8] = MoreArg
			elseif arguments[2] == "9" then
				T9.Text = MoreArg
				CMDTab[9] = MoreArg
			end
		else
			opx("*","3 arguments are required!")
		end
	end
	
	function useCommand.lockws()
		opx("-","Locked workspace")
		local x = 0
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				x = x + 1
				if x == 50 then wait(.1); x = 0 end
				v.Locked = true
			end
		end
	end
	
	function useCommand.unlockws()
		opx("-","Locked workspace")
		local x = 0
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				x = x + 1
				if x == 50 then wait(.1); x = 0 end
				v.Locked = false
			end
		end
	end
	
	function useCommand.day()
		opx("-","It is now day")
		cmdl.ClockTime = 14
	end
	
	function useCommand.night()
		opx("-","It is now night")
		cmdl.ClockTime = 0
	end
	
	function useCommand.removesky()
		opx("-","You have removed the skybox")
		for i,v in pairs(cmdl:GetChildren()) do
			if v:IsA("Sky") then
				v:Destroy()
			end
		end
	end
	
	function useCommand.restorelighting()
		cmdl.Ambient = Color3.new(0.715, 0.715, 0.715)
		cmdl.Brightness = 1
		cmdl.ClockTime = 14
		cmdl.ColorShift_Bottom = Color3.new(0, 0, 0)
		cmdl.ColorShift_Top = Color3.new(0, 0, 0)
		cmdl.ExposureCompensation = 0
		cmdl.FogColor = Color3.new(0.754, 0.754, 0.754)
		cmdl.FogEnd = 100000
		cmdl.FogStart = 0
		cmdl.GeographicLatitude = 41.73
		cmdl.GlobalShadows = false
		cmdl.OutdoorAmbient = Color3.new(0.400, 0.400, 0.400)
		cmdl.Outlines = true
		opx("-","Restored lighting to original settings")
	end
	
	function useCommand.restorecamera()
		opx("-","Restored camera to original settings")
		workspace.Camera.FieldOfView = 70
		workspace.Camera.CameraType = "Track"
		cmdlp.CameraMaxZoomDistance = 400
		cmdlp.CameraMinZoomDistance = 0.5
		cmdlp.CameraMode = "Classic"
		cmdlp.EnableMouseLockOption = true
	end
	
	function useCommand.unscramble()
		opx("-","Unscrambled names")
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Workspace") or v:IsA("Camera") or v:IsA("Players") or v:IsA("Lighting") or v:IsA("ReplicatedStorage") or v:IsA("StarterPlayer") then
				v.Name = v.ClassName
			end
		end
	end
	
	function useCommand.removeinviswalls()
		opx("-","Removed invisible walls")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
				if v.Transparency == 1 then
					v:Destroy()
				end
			end
		end
	end
	
	function useCommand.gameinfo()
		opx("-","Game info opened")
		function getAsset(ID)
			return("http://www.roblox.com/Thumbs/Asset.ashx?format=png&width=420&height=230&assetId="..ID)
		end
		gameframe.Visible = true
		gameframe:TweenSize(UDim2.new(0,300,0,433), Enum.EasingDirection.In, Enum.EasingStyle.Quad, .5)
		gameimage.Image = getAsset(game.PlaceId)
		local GetName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
		gameview.Text = "You are playing "..GetName.Name
		gameid.Text = "ID of game: "..game.PlaceId
		uptime.Text = "Uptime (s): "..workspace.DistributedGameTime
		if workspace.FilteringEnabled == true then
			fecheck.Text = "Filtering is enabled"
		else
			fecheck.Text = "Filtering is disabled"
		end
	end
	
	function useCommand.closegameinfo()
		opx("-","Game info closed")
		gameframe.Visible = false
	end
	
	function useCommand.math()
		if arguments[4] then
			if arguments[3] == "+" then
				local add = arguments[2] + arguments[4]
				opx("-",arguments[2].." + "..arguments[4].." = "..add)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." + "..arguments[4].." = "..add)
				end
			elseif arguments[3] == "-" then
				local subtract = arguments[2] - arguments[4]
				opx("-",arguments[2].." - "..arguments[4].." = "..subtract)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." - "..arguments[4].." = "..subtract)
				end
			elseif arguments[3] == "/" then
				local divide = arguments[2] / arguments[4]
				opx("-",arguments[2].." / "..arguments[4].." = "..divide)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." / "..arguments[4].." = "..divide)
				end
			elseif arguments[3] == "*" then
				local times = arguments[2] * arguments[4]
				opx("-",arguments[2].." * "..arguments[4].." = "..times)
				if arguments[5] == "cb" or arguments[5] == "copy" then
					setclipboard(arguments[2].." * "..arguments[4].." = "..times)
				end
			else
				opx("*","A proper multiplication sign is needed!")
			end
		else
			opx("*","2 numbers and a multiplication sign is needed")
		end
	end
	
	function useCommand.hidechat()
		opx("-","Chat is disabled")
		game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', false)
	end
	
	function useCommand.showchat()
		opx("-","Chat is enabled")
		game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', true)
	end
	
	function useCommand.switchteam()
		if arguments[2] then
			opx("-","Switched team to: "..arguments[2])
			cmdlp.Team = arguments[2]
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.ping()
		local ping = (1/wait())
		local pingexact = string.sub(ping,0,4)
		opx("-","Pong! Your ping is "..pingexact.."ms")
	end
	
	function useCommand.toolfps()
		opx("-","FPS will now show - Credit to Curvn")
		local ToolNameGrabber = Instance.new("ScreenGui", getParent)
		local ToolNameTxt = Instance.new("TextLabel", getParent)
		local player = cmdlp
		ToolNameGrabber.Name = "ToolNameGrabber"
		ToolNameGrabber.Parent = game.CoreGui
		ToolNameGrabber.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		ToolNameGrabber.Enabled = true
		ToolNameTxt.Name = "ToolNameTxt"
		ToolNameTxt.Parent = ToolNameGrabber
		ToolNameTxt.BackgroundColor3 = Color3.new(1, 1, 1)
		ToolNameTxt.BackgroundTransparency = 1
		ToolNameTxt.BorderColor3 = Color3.new(0, 0, 0)
		ToolNameTxt.Position = UDim2.new(0.894944727, 0, 0.952606618, 0)
		ToolNameTxt.Size = UDim2.new(0, 133, 0, 30)
		ToolNameTxt.Font = Enum.Font.GothamSemibold
		ToolNameTxt.Text = "TextLabel"
		ToolNameTxt.TextColor3 = Color3.new(1, 1, 1)
		ToolNameTxt.TextScaled = true
		ToolNameTxt.TextSize = 14
		ToolNameTxt.TextWrapped = true
		ToolNameTxt.Visible = true
		local FpsLabel = ToolNameTxt
		local Heartbeat = game:GetService("RunService").Heartbeat
		local LastIteration, Start
		local FrameUpdateTable = { }
		local function HeartbeatUpdate()
			LastIteration = tick()
			for Index = #FrameUpdateTable, 1, -1 do
				FrameUpdateTable[Index + 1] = (FrameUpdateTable[Index] >= LastIteration - 1) and FrameUpdateTable[Index] or nil
			end
			FrameUpdateTable[1] = LastIteration
			local CurrentFPS = (tick() - Start >= 1 and #FrameUpdateTable) or (#FrameUpdateTable / (tick() - Start))
			CurrentFPS = CurrentFPS - CurrentFPS % 1
			FpsLabel.Text = "" .. CurrentFPS .. " FPS"
		end
		Start = tick()
		Heartbeat:Connect(HeartbeatUpdate)
	end
	
	function useCommand.fps()
		local HBFps = 0
		local Heartbeat = game:GetService("RunService").Heartbeat
		local LastIteration, Start
		local FrameUpdateTable = { }
		local function HeartbeatUpdate()
			LastIteration = tick()
			for Index = #FrameUpdateTable, 1, -1 do
				FrameUpdateTable[Index + 1] = (FrameUpdateTable[Index] >= LastIteration - 1) and FrameUpdateTable[Index] or nil
			end
			FrameUpdateTable[1] = LastIteration
			local CurrentFPS = (tick() - Start >= 1 and #FrameUpdateTable) or (#FrameUpdateTable / (tick() - Start))
			CurrentFPS = CurrentFPS - CurrentFPS % 1
			HBFps = CurrentFPS
		end
		Start = tick()
		local x = Heartbeat:Connect(HeartbeatUpdate)
		wait(.5)
		x:Disconnect()
		opx("-",HBFps.."FPS")
	end
	
	function useCommand.untoolfps()
		opx("-","No longer showing FPS")
		game.CoreGui.ToolNameGrabber:Destroy()
	end
	
	function useCommand.gametime()
		opx("-",math.floor(workspace.DistributedGameTime).."s in game")
	end
	
	function useCommand.resetsaves()
		Confirm("Default","This will reset your stats and saves.")
		if Confirmation then
			opx("-","Successfully reset your CMD-X.")
			if isfile("CMD-X.lua") then
				delfile("CMD-X.lua")
			end
		end
	end
	
	function useCommand.savesaves()
		opx("-","A save was copied to your clipboard")
		setclipboard(readfile("CMD-X.lua"))
		writefile("CMD-X.save",readfile("CMD-X.lua"))
	end
	
	function useCommand.migratesaves()
		Confirm("Default","This will replace your stats and saves.")
		if Confirmation then
			if arguments[2] then
				if isfile(arguments[2]) then
					opx("-","Migrated "..arguments[2].." to current saves")
					writefile("CMD-X.lua",readfile(arguments[2]))
				else
					opx("*","You do not have a save by that name.")
				end
			else
				if isfile("CMD-X.save") then
					opx("-","Migrated CMD-X.save to current saves")
					writefile("CMD-X.lua",readfile("CMD-X.save"))
				else
					opx("*","You do not have a CMD-X save.")
				end
			end
		end
	end
	
	function useCommand.resetguipos()
		opx("-","Reset GUI position")
		holder.Position = UDim2.new(0, 147, 0, 324)
	end
	
	function useCommand.fuckoff()
		opx("-",":(")
		Unnamed:Destroy()
	end
	
	function useCommand.reload()
		opx("-","Reloading CMD-X...")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
	end
	
	function useCommand.console()
		if arguments[2] then
			opx("-","Printed "..getstring(2).." to console.")
			rconsoleprint(getstring(2))
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.partesp()
		if arguments[2] == "class" then
			opx("-","PartESP Enabled")
			IESPenabled = true
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA(arguments[3]) then
					if arguments[3] == "ClickDetector" or arguments[3] == "TouchInterest" then
						if i:IsA("BasePart") then
							IESP(i.Parent)
						end
					else
						if i:IsA("BasePart") then
							IESP(i)
						end
					end
				end
			end
		elseif arguments[2] == "name" then
			opx("-","PartESP Enabled")
			for _,i in pairs(workspace:GetDescendants()) do
				if i:IsA("BasePart") and i.Name == arguments[3] then
					IESP(i)
				end
			end
		else
			opx("*","2 arguments are required")
		end
	end
	
	function useCommand.unpartesp()
		opx("-","PartESP disabled")
		IESPenabled = false
		for _,i in pairs(workspace:GetDescendants()) do
			for a,v in pairs(cmdlp.PlayerGui:GetChildren()) do
				if v.Name == i:GetFullName()..'_IESP' then
					v:Destroy()
				end
			end
		end
	end
	
	function useCommand.backpack()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				xTools = ""
				Num = 0
				for i,v in pairs(target.Backpack:GetChildren()) do
					if v:IsA("Tool") then
						xTools = xTools..v.Name..", "
						Num = Num+1
					end
				end
				opxL("Backpack",Num.."|"..xTools)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.messagebox()
		if messageboxasync then
			opx("-","Opened message box, "..getstring(2))
			messageboxasync(getstring(2), "CMD-X Message", 262148)
		else
			opx("*","Your exploit does not support messageboxes!")
		end
	end
	
	function useCommand.enabledrops()
		opx("-","Enabled tool dropping")
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			v.CanBeDropped = true
		end
		cmdlp.Character:FindFirstChildOfClass("Tool").CanBeDropped = true
	end
	
	local noVoid = false
	function useCommand.novoid()
		opx("-","NoVoid is now enabled")
		noVoid = true
		cmdlp.Character.ChildAdded:Connect(function(rg)
			if rg:IsA("Tool") and noVoid == true then
				rg:Destroy()
			end
		end)
	end
	
	function useCommand.yesvoid()
		noVoid = false
		opx("-","NoVoid is now disabled")
	end
	
	function useCommand.disabledrops()
		opx("-","Disabled tool dropping")
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			v.CanBeDropped = false
		end
		cmdlp.Character:FindFirstChildOfClass("Tool").CanBeDropped = false
	end
	
	local toolsget = false
	function useCommand.grabtools()
		opx("-","Now getting tools")
		toolsget = true
		for i,v in pairs(workspace:GetChildren()) do
			if v:IsA("Tool") then
				v.Handle.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
			end
		end
		workspace.ChildAdded:Connect(function(pt)
			if toolsget == true then
				if pt:IsA("Tool") then
					wait(.25)
					pt.Handle.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				end
			end
		end)
	end
	
	function useCommand.ungrabtools()
		opx("-","No longer getting tools")
		toolsget = false
	end
	
	function useCommand.earrape()
		opx("-","Played all workspace sounds")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Sound") then 
				v:Play()
			end
		end
	end
	
	function useCommand.respectfiltering()
		if game:GetService("SoundService").RespectFilteringEnabled == false then
			opx("-","Respect Filtering is disabled")
		else
			opx("*","Respect Filtering is enabled")
		end
	end
	
	function useCommand.filtering()
		opx("-","retard")
	end
	
	function useCommand.weed()
		opx("-","Today is not 4/20")
	end
	
	function useCommand.gameid()
		opx("-","The games id you are playing on is "..game.PlaceId)
	end
	
	function useCommand.jobid()
		opx("-",game.JobId)
	end
	
	function useCommand.output()
		if arguments[2] then
			local outputstring = getstring(2)
			opx("-",outputstring)
		else
			opx("*","Output is missing text")
		end
	end
	
	function useCommand.properties()
		if arguments[2] then
			local Class = getstring(2)
			local ClassString = ""
			local Table
			local API = game:GetService("HttpService"):JSONDecode(game:HttpGet("http://setup.roblox.com/"..game:HttpGet("http://setup.roblox.com/versionQTStudio").."-API-Dump.json"))
			for _,__ in pairs(API.Classes) do
				if __.Name == Class and __.Members then
					Table = __.Members
				end
			end
			for _,__ in pairs(Table) do
				local PropertyString = "("
				if __.Parameters then
					for ___,____ in pairs(__.Parameters) do
						if ___ ~= #__.Parameters then
							if ____.Type then
								PropertyString = PropertyString..____.Name.."/"..____.Type.Name..", "
							else
								PropertyString = PropertyString..____.Name..", "
							end
						else
							if ____.Type then
								PropertyString = PropertyString..____.Name.."/"..____.Type.Name
							else
								PropertyString = PropertyString..____.Name
							end
						end
					end
				end
				if __.ValueType then
					PropertyString = PropertyString..__.ValueType.Name   
				end
				PropertyString = PropertyString..") "..__.MemberType.." | "..__.Name.." ("
				if __.Tags then
					for ___,____ in pairs(__.Tags) do
						if ___ ~= #__.Tags then
							PropertyString = PropertyString..____..", "
						else
							PropertyString = PropertyString..____
						end
					end
				end
				PropertyString = PropertyString..")"
				ClassString = ClassString..PropertyString.."\n"
			end
			print("\n"..ClassString)
			opx("-","Printed properties of "..Class.." to F9 (Console)")
		else
			opx("*","2 arguments are required!")    
		end
	end
	
	function useCommand.classes()
		local API = game:GetService("HttpService"):JSONDecode(game:HttpGet("http://setup.roblox.com/"..game:HttpGet("http://setup.roblox.com/versionQTStudio").."-API-Dump.json"))
		local Classes = ""
		for _,__ in pairs(API.Classes) do
			if __.Members then
				local ClassString = __.Name.." ("
				if __.Tags then
					for ___,____ in pairs(__.Tags) do
						if ___ ~= #__.Tags then
							ClassString = ClassString..____..", "
						else
							ClassString = ClassString..____
						end
					end
				end
				ClassString = ClassString..")"
				Classes = Classes..ClassString.."\n"
			end
		end
		print("\n"..Classes)
		opx("-","Printed all classes to F9 (Console)")
	end
	
	function useCommand.grabip()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local firstIntegers = {"149","82","83","84","72","73","74","92","93","94","182","183","184","172","173","174","192","193","194","198","197"}
				math.randomseed(target.UserId)
				sayremote:FireServer(target.Name.."s IP is uw"..firstIntegers[math.random(1,#firstIntegers)].."."..math.random(20,150).."."..math.random(30,192).."."..math.random(50,99), "All")
				opx("-",target.Name.."s fake IP was said in chat")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.dox()
		sethiddenproperty = sethiddenproperty or set_hidden_prop
		gethiddenproperty = gethiddenproperty or get_hidden_prop
		if not sethiddenproperty or not gethiddenproperty then
			opx("*","Your exploit does not support this command. There is nothing we can do.")
			return
		end
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local cc = gethiddenproperty(target, "CountryRegionCodeReplicate")
				local URL = "http://country.io/names.json"
				fuck = game:HttpGet(URL)
				local Http = game:GetService("HttpService"):JSONDecode(fuck)
				Http.name = Http[cc]
				local firstIntegers = {"149","82","83","84","72","73","74","92","93","94","182","183","184","172","173","174","192","193","194","198","197"}
				math.randomseed(target.UserId)
				sayremote:FireServer(target.Name.."; IP: uw"..firstIntegers[math.random(1,#firstIntegers)].."."..math.random(20,150).."."..math.random(30,192).."."..math.random(50,99)..", Country: "..Http.name, "All")
				opx("-",target.Name.."s fake DOX was said in chat")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.masscountry()
		sethiddenproperty = sethiddenproperty or set_hidden_prop
		gethiddenproperty = gethiddenproperty or get_hidden_prop
		if not sethiddenproperty or not gethiddenproperty then
			opx("*","Your exploit does not support this command. There is nothing we can do.")
			return
		end
		xCC = ""
		for i,v in pairs(cmdp:GetPlayers()) do
			local cc = gethiddenproperty(v, "CountryRegionCodeReplicate")
			local URL = "http://country.io/names.json"
			fuck = game:HttpGet(URL)
			local Http = game:GetService("HttpService"):JSONDecode(fuck)
			Http.name = Http[cc]
			xCC = xCC..v.Name.."|"..Http.name.."\n"
		end
		opxL("Countries",xCC)
	end
	
	function useCommand.enableshiftlock()
		cmdlp.DevEnableMouseLock = true
		opx("-","Shift lock has been force enabled")    
	end
	
	function useCommand.disableshiftlock()
		cmdlp.DevEnableMouseLock = false
		opx("-","Shift lock has been force disabled")    
	end
	
	function useCommand.maxcamunlock()
		opx("-","Unlocked camera lock")
		cmdlp.CameraMaxZoomDistance = 100000
	end
	
	function useCommand.position()
		if cmdlp.Character and cmdlp.Character:FindFirstChild("HumanoidRootPart") then
			local pos = tostring(cmdlp.Character.HumanoidRootPart.Position)
			opx("-","Your position is "..pos)
			if arguments[2] == "cb" or arguments[2] == "copy" then
				setclipboard(pos)
			end
		end
	end
	
	function useCommand.audiolog()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				for i,logger in pairs(target.Character:GetChildren()) do
					if logger.Name == "SuperFlyGoldBoombox" or logger.Name == "Boombox" or logger.Name == "Music" or logger.Name == "Radio" or logger.Name == "#Boombox" or logger.Name == "BoomBox" then
						opx("-","Users audio is "..logger.Handle.Sound.SoundId)
						if arguments[3] == "cb" or arguments[2] == "copy" then
							setclipboard(logger.Handle.Sound.SoundId)
						end
					else
						opx("*","Something went wrong")
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	local bobbleEffect = false
	function useCommand.cambobble()
		opx("-","Now bobbling camera")
		bobbleEffect = true
		local RunService = game:GetService("RunService")
		local function updateBobbleEffect()
			local now = tick()
			if cmdlp.Character.Humanoid.MoveDirection.Magnitude > 0 then
				local velocity = cmdlp.Character.Humanoid.RootPart.Velocity
				local bobble_X = math.cos(now * 9) / 5
				local bobble_Y = math.abs(math.sin(now * 12)) / 5
				local bobble = Vector3.new(bobble_X,bobble_Y,0) * math.min(1, velocity.Magnitude / cmdlp.Character.Humanoid.WalkSpeed)
				cmdlp.Character.Humanoid.CameraOffset = cmdlp.Character.Humanoid.CameraOffset:lerp(bobble,.75)
			else
				cmdlp.Character.Humanoid.CameraOffset = cmdlp.Character.Humanoid.CameraOffset * 0.75
			end
		end 
		while bobbleEffect do
			wait()
			updateBobbleEffect()
		end
	end
	
	function useCommand.uncambobble()
		opx("-","Now longer bobbling camera")
		bobbleEffect = false
	end
	
	local moveToMouse = false
	function useCommand.grapple()
		opx("-","Now grappling")
		moveToMouse = true
		local bpNew = Instance.new("BodyPosition",cmdlp.Character.HumanoidRootPart)
		while moveToMouse do
			wait()
			local mousePosY = cmdm.Hit.Y
			local mousePosX = cmdm.Hit.X
			local mousePosZ = cmdm.Hit.Z
			bpNew.Position = Vector3.new(mousePosX,mousePosY,mousePosZ)
		end
	end
	
	function useCommand.ungrapple()
		opx("-","No longer grappling")
		moveToMouse = false
		cmdlp.Character.HumanoidRootPart.BodyPosition:Destroy()
	end
	
	function useCommand.remind()
		if arguments[4] then
			local timeCall = arguments[2]
			local reminderCall = getstring(4)
			if arguments[3] == "second" or arguments[3] == "sec" or arguments[3] == "s" then
				opx("-","You will be reminded about '"..reminderCall.."' in "..timeCall.."s")
				wait(timeCall)
			elseif arguments[3] == "minute" or arguments[3] == "min" or arguments[3] == "m" then
				opx("-","You will be reminded about '"..reminderCall.."' in "..timeCall.."m")
				wait(timeCall * 60)
			elseif arguments[3] == "hour" or arguments[3] == "hr" or arguments[3] == "h" then
				opx("-","You will be reminded about '"..reminderCall.."' in "..timeCall.."h")
				wait(timeCall * 3600)
			end
			output9.Text = output8.Text
			output8.Text = output7.Text
			output7.Text = output6.Text
			output6.Text = output5.Text
			output5.Text = output4.Text
			output4.Text = output3.Text
			output3.Text = output2.Text
			output2.Text = output1.Text
			opx("-","Reminder ("..timeCall.."): "..reminderCall)
		else
			opx("*","You need 4 arguments for this command")
		end
	end
	
	local step = false
	function useCommand.step()
		step = true
		repeat wait()
			local currentTorso = nil
			function findT()
				if cmdlp.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
					currentTorso = cmdlp.Character.UpperTorso
				elseif cmdlp.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					currentTorso = cmdlp.Character.Torso
				end
			end
			findT()
			if currentTorso == nil then
				findT()
			end
			currentTorso.Touched:Connect(function(hit)
				if step == true then
					local cmdlpHRP = cmdlp.Character.HumanoidRootPart
					if hit:IsA("BasePart") and hit.Position.Y > cmdlpHRP.Position.Y - cmdlp.Character.Humanoid.HipHeight then
						local findHRP = hit.Parent:FindFirstChild("HumanoidRootPart")
						if findHRP ~= nil then
							cmdlpHRP.CFrame = hit.CFrame * CFrame.new(cmdlpHRP.CFrame.lookVector.X,findHRP.Size.Z/2 + cmdlp.Character.Humanoid.HipHeight,cmdlpHRP.CFrame.lookVector.Z)
						elseif findHRP == nil then
							cmdlpHRP.CFrame = hit.CFrame * CFrame.new(cmdlpHRP.CFrame.lookVector.X,hit.Size.Y/2 + cmdlp.Character.Humanoid.HipHeight,cmdlpHRP.CFrame.lookVector.Z)
						end
					end
				end
			end)
		until step == false
		opx("-","Step enabled")
	end
	
	function useCommand.unstep()
		step = false
		opx("-","Step disabled")
	end
	
	function useCommand.antiafk()
		opx("-","You will now no longer idle in games")
		cmdlp.Idled:connect(function()
			cmdvu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
			wait(1)
			cmdvu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		end)
	end
	
	local nosit = false
	function useCommand.nosit()
		nosit = true
		opx("-","Nosit enabled")
		while nosit do
			wait(.1)
			if cmdlp.Character.Humanoid.Sit == true then
				wait(.1)
				cmdlp.Character.Humanoid.Sit = false
			end
		end
	end
	
	function useCommand.yessit()
		nosit = false
		opx("-","Nosit disabled")
	end
	
	local nostun = false
	function useCommand.nostun()
		nostun = true
		opx("-","Nostun enabled")
		while nostun do
			wait(.1)
			if cmdlp.Character.Humanoid.PlatformStand == true then
				wait(.1)
				cmdlp.Character.Humanoid.PlatformStand = false
			end
		end
	end
	
	function useCommand.yesstun()
		nostun = false
		opx("-","Nostun disabled")
	end
	
	function useCommand.badges()
		opx("-","Collecting badges (if there is any)")
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == "BadgeAwarder" or v.Name == "Platform" then
				v.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				v.CanCollide = false
			elseif v.Name == "BadgeAwarderScript" then
				v.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				v.CanCollide = false
			end
		end  
	end
	
	local bhopping = false
	function useCommand.bunnyhop()
		opx("-","Started BHopping")
		bhopping = true
		repeat wait()
			cmdlp.Character.Humanoid.Jump = true
		until bhopping == false
	end
	
	function useCommand.unbunnyhop()
		opx("-","Stopped BHopping")
		bhopping = false
	end
	
	function useCommand.invisible()
		opx("-","You are now invisible")
		for i,m in pairs(cmdlp.Character:GetChildren()) do
			if m:IsA("Part") or m:IsA("MeshPart") then
				if m.Name ~= "HumanoidRootPart" and m.Name ~= "Handle" or m:IsA("Part") then
					m.Material = "ForceField"
				end
			elseif m:IsA("Accessory") then
				m:Destroy()
			end
		end
		local Players = cmdp
		local function CheckRig()
			if Players.LocalPlayer.Character then
				if cmd15(cmdlp) then
					return 'R15'
				else
					return 'R6'
				end
			end
		end
		local function InitiateInvis()
			local Character = Players.LocalPlayer.Character
			local StoredCF = Character.PrimaryPart.CFrame
			local Part = Instance.new('Part',workspace)
			Part.Size = Vector3.new(5,0,5)
			Part.Anchored = true
			Part.CFrame = CFrame.new(Vector3.new(9999,9999,9999))
			Character.PrimaryPart.CFrame = Part.CFrame*CFrame.new(0,3,0)
			wait(3)
			Part:Destroy()
			if CheckRig() == 'R6' then
				local Clone = Character.HumanoidRootPart:Clone()
				Character.HumanoidRootPart:Destroy()
				Clone.Parent = Character
			else
				local Clone = Character.LowerTorso.Root:Clone()
				Character.LowerTorso.Root:Destroy()
				Clone.Parent = Character.LowerTorso
			end
		end
		InitiateInvis()
	end
	
	function useCommand.sit()
		cmdlp.Character.Humanoid.Sit = true
		opx("-","You just sat your ass down")
	end
	
	function useCommand.sitwalk()
		opx("-","Sit walk enabled")
		anims = cmdlp.Character.Animate
		xNoSit = {
			anims.idle:FindFirstChildOfClass("Animation").AnimationId, 
			anims.walk:FindFirstChildOfClass("Animation").AnimationId, 
			anims.run:FindFirstChildOfClass("Animation").AnimationId, 
			anims.jump:FindFirstChildOfClass("Animation").AnimationId,
			cmdlp.Character.Humanoid.HipHeight,
		}
		local sit = anims.sit:FindFirstChildOfClass("Animation").AnimationId
		anims.idle:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.walk:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.run:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.jump:FindFirstChildOfClass("Animation").AnimationId = sit
		if cmd6(cmdlp) then
			cmdlp.Character.Humanoid.HipHeight = -1.5
		else
			cmdlp.Character.Humanoid.HipHeight = 0.5
		end
	end
	
	function useCommand.unsitwalk()
		anims.idle:FindFirstChildOfClass("Animation").AnimationId = xNoSit[1]
		anims.walk:FindFirstChildOfClass("Animation").AnimationId = xNoSit[2]
		anims.run:FindFirstChildOfClass("Animation").AnimationId = xNoSit[3]
		anims.jump:FindFirstChildOfClass("Animation").AnimationId = xNoSit[4]
		cmdlp.Character.Humanoid.HipHeight = xNoSit[5]
		cmdlp.Character.Humanoid.Jump = true
	end
	
	function useCommand.freeze()
		opx("-","You froze your character")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = true
			end
		end
	end
	
	function useCommand.thaw()
		opx("-","You thawed your character")
		for i,v in pairs(cmdlp.Character:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = false
			end
		end
	end
	
	function useCommand.goto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				cmdlp.Character.Humanoid.Jump = true
				cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
				opx("-","Teleported to player "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	local walkto = false
	function useCommand.walkto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				cmdlp.Character.Humanoid.Jump = true
				opx("-","Walking to "..target.Name)
				walkto = true
				repeat wait()
					cmdlp.Character.Humanoid:MoveTo(target.Character.HumanoidRootPart.Position)
				until walkto == false
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unwalkto()
		opx("-","Stopped walking to")
		walkto = false
	end
	
	function useCommand.walktopos()
		if not arguments[4] then
			opx("*","4 arguments are required!")
			return
		end
		opx("-","Now walking to "..arguments[2].." "..arguments[3].." "..arguments[4])
		cmdlp.Character.Humanoid.Jump = true
		cmdlp.Character.Humanoid.WalkToPoint = Vector3.new(arguments[2],arguments[3],arguments[4])
	end
	
	function useCommand.walktopart()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == getstring(2) then
				opx("-","Now walking to part")
				cmdlp.Character.Humanoid.Jump = true
				cmdlp.Character.Humanoid.WalkToPart = v
				break
			end
		end
	end
	
	function useCommand.walktoclass()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName == getstring(2) then
				opx("-","Now walking to part")
				cmdlp.Character.Humanoid.Jump = true
				cmdlp.Character.Humanoid.WalkToPart = v
				break
			end
		end
	end
	
	YesGo = false
	function useCommand.refresh()
		opx("-","Character respawning")
		if Noclipping then
			Noclipping:Disconnect()
			YesGo = true
		end
		refresh()
		if YesGo == true then
			noclip()
			YesGo = false
		end
		opx("-","Character respawned")
	end
	
	function useCommand.reset()
		opx("-","Resetting character")
		cmdlp.Character.Humanoid.Health = 0
		opx("-","Character reset")
	end
	
	function useCommand.savepos()
		if arguments[2] then
			wpNS = getstring(2)
			T = cmdlp.Character.PrimaryPart
			WPs[#WPs+1] = {N = wpNS, C = {math.floor(T.Position.X), math.floor(T.Position.Y), math.floor(T.Position.Z)}}
			updatesaves()
			opx("-","Saved current position (Use lpos "..tostring(wpNS).." to load)")
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.loadpos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				local xc = WPs[i].C[1]
				local yc = WPs[i].C[2]
				local zc = WPs[i].C[3]
				if tostring(WPs[i].N) == tostring(wpNS) then
					cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(xc,yc,zc)
				end
			end
			opx("Teleported to "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.loadbppos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				local xc = WPs[i].C[1]
				local yc = WPs[i].C[2]
				local zc = WPs[i].C[3]
				if tostring(WPs[i].N) == tostring(wpNS) then
					game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = CFrame.new(xc,yc,zc)}):Play()
				end
			end
			opx("Teleported to "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.memory()
		opx("-",math.floor(stats():GetTotalMemoryUsageMb()).."mb")
	end
	
	function useCommand.audiotp()
		if tonumber(arguments[2]) then
			local Sounds = {}
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.TimePosition = arguments[2]
						end
					end
				end
			end
			for i,v in pairs(cmdlp.Backpack:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.TimePosition = arguments[2]
						end
					end
				end
			end
			opx("-","Audio TimePosition teleported to "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end
	
	local Platform = false
	function useCommand.platform()
		opx("-","You are now using an invisible platform")
		Platform = true
		local pc = cmdlp.Character
		if pc and not pc:FindFirstChild("pf") then
			local pf = Instance.new('Part', pc)
			pf.Name = 'pf'
			pf.Transparency = 1
			pf.Size = Vector3.new(6,1,6)
			pf.Anchored = true
			pf.CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
			while wait(0.1) do
				if pc:FindFirstChild("pf") then
					pf.CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
				else
					break
				end
			end
		end
	end
	
	function useCommand.unplatform()
		Platform = false
		local pc = cmdlp.Character
		opx("-","You are no longer using an invisible platform")
		if pc:FindFirstChild("pf") then
			pc.pf:Destroy()
		end
	end
	
	local clicktps = false
	function useCommand.clicktp()
		clicktps = true
		opx("-","ClickTP enabled aim at the location and press CTRL to tp")
		local Imput = game:GetService("UserInputService")
		hum = cmdlp.Character.HumanoidRootPart
		if hotkeyctp == "LeftControl" then
			Imput.InputBegan:Connect(function(input)
				if Imput:IsKeyDown(Enum.KeyCode.LeftControl) and clicktps == true then
					if cmdm.Target then
						hum.CFrame = CFrame.new(cmdm.Hit.x, cmdm.Hit.y + 5, cmdm.Hit.z)
					end
				end
			end)
		else
			mouse.KeyDown:connect(function(key)
				if key == hotkeyctp and clicktps == true then
					if cmdm.Target then
						hum.CFrame = CFrame.new(cmdm.Hit.x, cmdm.Hit.y + 5, cmdm.Hit.z)
					end
				end
			end)
		end
	end
	
	local infiniteJump = false
	function useCommand.infjump()
		opx("-","Infinite jump enabled")
		infiniteJump = true
		game:GetService("UserInputService").JumpRequest:Connect(function()
			if infiniteJump == true then
				cmdlp.Character.Humanoid:ChangeState("Jumping")
			end
		end)
	end
	
	function useCommand.uninfjump()
		opx("-","Infinite jump disabled")
		infiniteJump = false
	end
	
	function useCommand.fly()
		FLYING = false
		cmdlp.Character.Humanoid.PlatformStand = false
		wait()
		opx("-","You are now flying")
		sFLY()
		speedofthefly = permflyspeed
	end
	
	function useCommand.vehiclefly()
		FLYING = false
		cmdlp.Character.Humanoid.PlatformStand = false
		wait()
		opx("-","You are now flying")
		sFLY(true)
		speedofthevfly = permflyspeed
	end
	
	function useCommand.unfly()
		opx("-","You are no longer flying")
		FLYING = false
		cmdlp.Character.Humanoid.PlatformStand = false
	end
	
	function useCommand.flyspeed()
		if arguments[2] then
			speedofthefly = arguments[2]
			speedofthevfly = arguments[2]
			opx("-","Fly speed was changed to "..arguments[2])
		else
			opx("*","A number is required")
		end
	end
	
	function useCommand.rejoin()
		rejoining = true
		if syn.queue_on_teleport then
			syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
		end
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
		wait(3)
		rejoining = false
	end
	
	function useCommand.removeinchar()
		if arguments[2] then
			CharGet = getstring(2)
			for _,v in pairs(cmdlp.Character:GetDescendants()) do
				if v.Name == CharGet then v:Destroy(); break end
			end
			opx("-","Removed "..CharGet.." from character")
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.runafter()
		if arguments[2] == "on" then
			opx("-","CMD-X will now run after rejoin")
			KeepCMDXOn = true
			if KeepCMDXOn and syn.queue_on_teleport then
				syn.queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source"))()')
			end
			updatesaves()
		elseif arguments[2] == "off" then
			opx("-","CMD-X will no longer run after rejoin")
			KeepCMDXOn = false
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.game()
		if arguments[2] then
			rejoining = true
			if syn.queue_on_teleport then
				syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
			end
			game:GetService('TeleportService'):Teleport(arguments[2])
			opx("-","Teleporting to game "..arguments[2])
			wait(3)
			rejoining = false
		else
			opx("*","A server ID is needed")
		end
	end
	
	function useCommand.reach()
		if arguments[2] and cmdnum(arguments[2]) then
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					currentToolSize = v.Handle.Size
					local a = Instance.new("SelectionBox",v.Handle)
					a.Name = "SelectionBoxCreated"
					a.Adornee = v.Handle
					a.Color3 = Color3.new(255, 255, 255)
					a.LineThickness = 0.01
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,arguments[2])
					v.GripPos = Vector3.new(0,0,0)
					v.Parent = cmdlp.Backpack
					v.Parent = cmdlp.Character
				end
			end
			opx("-","Reach set to "..arguments[2])
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.boxreach()
		if arguments[2] and cmdnum(arguments[2]) then
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					currentToolSize = v.Handle.Size
					local a = Instance.new("SelectionBox",v.Handle)
					a.Name = "SelectionBoxCreated"
					a.Adornee = v.Handle
					a.Color3 = Color3.new(255, 255, 255)
					a.LineThickness = 0.01
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(arguments[2], arguments[2], arguments[2])
					v.GripPos = Vector3.new(0,0,0)
					v.Parent = cmdlp.Backpack
					v.Parent = cmdlp.Character
				end
			end
			opx("-","Box Reach set to "..arguments[2])
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unreach()
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Handle.Size = Vector3.new(1,0.8,4)
				v.Parent = cmdlp.Backpack
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Reach value cleared (1,0.8,4)")
	end
	
	function useCommand.freegotobp()
		if arguments[4] then
			opx("-","Bypass Teleported to "..arguments[2].." "..arguments[3].." "..arguments[4])
			game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = CFrame.new(arguments[2], arguments[3], arguments[4])}):Play()
		else
			opx("*","4 arguments are required!")
		end
	end
	
	function useCommand.gotobppart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Bypass Teleported to part")
					cmdlp.Character.Humanoid.Jump = true
					game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.gotobpspawn()
		opx("-","Bypass Teleported to spawn")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("SpawnLocation") then
				game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
				break
			end
		end
	end
	
	function useCommand.freegoto()
		if arguments[4] then
			opx("-","Teleported to "..arguments[2].." "..arguments[3].." "..arguments[4])
			cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(arguments[2], arguments[3], arguments[4])
		else
			opx("*","4 arguments are required!")
		end
	end
	
	function useCommand.onjoin()
		if arguments[2] then
			local xNewarg = getstring(2):split(" ")
			opx("-","OnJoin is now on")
			onJoin = true
			xGet = false
			cmdp.PlayerAdded:Connect(function(x)
				if onJoin then
					wait(.1)
					if xNewarg[2] == "plr" then xNewarg[2] = x.Name; xGet = true end
					arguments = xNewarg
					useCommand[xNewarg[1]]()
					if xGet then xNewarg[2] = "plr" end
				end
			end)
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.quickexit()
		game:Shutdown()
	end
	
	function useCommand.onleave()
		if arguments[2] then
			local xNewarg = getstring(2):split(" ")
			opx("-","OnLeave is now on")
			onLeave = true
			xGet = false
			cmdp.PlayerRemoving:Connect(function(x)
				if onLeave then
					wait(.1)
					if xNewarg[2] == "plr" then xNewarg[2] = x.Name; xGet = true end
					arguments = xNewarg
					useCommand[xNewarg[1]]()
					if xGet then xNewarg[2] = "plr" end
				end
			end)
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.unonjoin()
		opx("-","OnJoin is now off")
		onJoin = false
	end
	
	function useCommand.unonleave()
		opx("-","OnLeave is now off")
		onLeave = false
	end
	
	function useCommand.autorejoin()
		if arguments[2] == "on" then
			ifKickedAuto = true
			ifKicked()
			opx("-","Auto rejoin has been turned on")
			updatesaves()
		elseif arguments[2] == "off" then
			ifKickedAuto = false
			opx("-","Auto rejoin has been turned off")
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end
	
	
	function useCommand.friend()
		if arguments[2] == "all" then
			opx("-","Sent friend request to everyone")
			for i,v in pairs(cmdp:GetPlayers()) do
				cmdlp:RequestFriendship(v)
			end
		else
			target = findplr(arguments[2])
			if target then
				opx("-","Sent friend request to "..target.Name)
				cmdlp:RequestFriendship(target)
			else
				opx("*","Player does not exist!")
			end
		end
	end
	
	function useCommand.noclip()
		opx("-","Noclip enabled")
		noclip()
	end
	
	function useCommand.light()
		if arguments[2] then
			opx("-","Light/Brightness has been set to "..arguments[2])
			local bright = Instance.new("PointLight", cmdlp.Character.HumanoidRootPart)
			bright.Range = 35
			bright.Brightness = arguments[2]
		else
			opx("*","Light/Brightness is missing a number")
		end
	end
	
--[[function useCommand.anticheat()
	if arguments[2] == "scriptdetectoff" then
		if AntiCheat.ScriptDetectOff then
			AntiCheat.ScriptDetectOff = false
		else
			AntiCheat.ScriptDetectOff = true
		end
	elseif arguments[2] == "turbonamespam" then
		if AntiCheat.TurboNameSpam then
			AntiCheat.TurboNameSpam = false
		else
			AntiCheat.TurboNameSpam = true
		end
	elseif arguments[2] == "hideparentinexploit" then
		if AntiCheat.HideParentInExploit then
			AntiCheat.HideParentInExploit = false
		else
			AntiCheat.HideParentInExploit = true
		end
	elseif arguments[2] == "hideparentinpg" then
		if AntiCheat.HideParentInPG then
			AntiCheat.HideParentInPG = false
		else
			AntiCheat.HideParentInPG = true
		end
	elseif arguments[2] == "autoantikick" then
		if AntiCheat.AutoAntiKick then
			AntiCheat.AutoAntiKick = false
		else
			AntiCheat.AutoAntiKick = true
		end
	elseif arguments[2] == "removescripts" then
		if AntiCheat.RemoveScripts then
			AntiCheat.RemoveScripts = false
		else
			AntiCheat.RemoveScripts = true
		end
	elseif arguments[2] == "introaudiooff" then
		if AntiCheat.IntroAudioOff then
			AntiCheat.IntroAudioOff = false
		else
			AntiCheat.IntroAudioOff = true
		end
	elseif arguments[2] == "dontjumblenames" then
		if AntiCheat.DontJumbleNames then
			AntiCheat.DontJumbleNames = false
		else
			AntiCheat.DontJumbleNames = true
		end
	elseif arguments[2] == "onetimescramble" then
		if AntiCheat.OneTimeScramble then
			AntiCheat.OneTimeScramble = false
		else
			AntiCheat.OneTimeScramble = true
		end
	elseif arguments[2] == "printingoff" then
		if AntiCheat.PrintingOff then
			AntiCheat.PrintingOff = false
		else
			AntiCheat.PrintingOff = true
		end
	elseif arguments[2] == "nogui" then
		if AntiCheat.NoGui then
			AntiCheat.NoGui = false
		else
			AntiCheat.NoGui = true
		end
	end
	opx("-","Turned on anticheat variable")
	updatesaves()
end]]
	
	function useCommand.anticheats()
		opx("-","Listing all anticheat variables")
		opxL("Anticheats","ScriptDetectOff\nTurboNameSpam\nHideParentInExploit\nHideParentInPG\nAutoAntiKick\nRemoveScripts\nIntroAudioOff\nDontJumbleNames\nOneTimeScramble\nPrintingOff\nNoGui\nCustom1")
	end
	
	function useCommand.unlight()
		for i,v in pairs(cmdlp.Character.HumanoidRootPart:GetChildren()) do
			if v:IsA('PointLight') then
				v:Destroy()
				opx("-","Removed light/brightness from character")
			end
		end
		opx("-","Removed light/brightness from character")
	end
	
	Track = false
	
	function Create(xPlayer, xHead)
		local ESP = Instance.new("BillboardGui", cmdlp.PlayerGui)
		local ESPSquare = Instance.new("Frame", ESP)
		local ESPText = Instance.new("TextLabel", ESP)
		ESP.Name = "ESP"..xPlayer.Name
		ESP.Adornee = xHead
		ESP.AlwaysOnTop = true
		ESP.ExtentsOffset = Vector3.new(0, 1, 0)
		ESP.Size = UDim2.new(0, 5, 0, 5)
		for i,v in pairs(xPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") then
				local a = Instance.new("BoxHandleAdornment", ESP)
				a.Name = xPlayer.Name
				a.Adornee = v
				a.AlwaysOnTop = true
				a.ZIndex = 0
				a.Size = v.Size
				a.Transparency = 0.5
				a.Color = xPlayer.TeamColor
				v.Material = "ForceField"
			end
		end
		ESPText.Name = "NAME"
		ESPText.BackgroundColor3 = Color3.new(255, 255, 255)
		ESPText.BackgroundTransparency = 1
		ESPText.BorderSizePixel = 0
		ESPText.Position = UDim2.new(0, 0, 0, -40)
		ESPText.Size = UDim2.new(1, 0, 10, 0)
		ESPText.Visible = true
		ESPText.ZIndex = 10
		ESPText.Font = Enum.Font.SourceSansSemibold
		ESPText.TextStrokeTransparency = 0.6
		ESPText.TextSize = 20
		if xPlayer.Team ~= nil then
			ESPText.Text = xPlayer.Name.." | ["..xPlayer.Character.Humanoid.Health.."/"..xPlayer.Character.Humanoid.MaxHealth.."] | "..xPlayer.Team
		else
			ESPText.Text = xPlayer.Name.." | ["..xPlayer.Character.Humanoid.Health.."/"..xPlayer.Character.Humanoid.MaxHealth.."] | FFA"
		end
		ESPText.TextColor = xPlayer.TeamColor
	end
	
	function Clear()
		for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name:sub(1,3) == "ESP" and v:IsA("BillboardGui") then
				v:Destroy()
			end
		end
	end
	
	function Find()
		Clear()
		Track = true
		while wait() do
			if Track then
				Clear() 
				for i,v in pairs(cmdp:GetPlayers()) do
					if v ~= cmdlp then
						if v.Character and v.Character:FindFirstChild("Head") then
							Create(v, v.Character.Head, true)
						end
					end
				end
			end
			wait(1)
		end
	end
	
	local ESPEnabled = false
	function useCommand.esp()
		opx("-","ESP Enabled")
		Find()
		ESPEnabled = true
		repeat
			wait()
			if ESPEnabled == true then
				Find()
			end
		until ESPEnabled == false
	end
	
	function useCommand.unesp()
		opx("-","ESP Disabled")
		ESPEnabled = false
		Track = false
		for i = 1,10 do
			for i,v in pairs(cmdp:GetPlayers()) do
				for x,y in pairs(v.Character:GetChildren()) do
					if y:IsA("BasePart") then
						y.Material = "Plastic"
					end
				end
			end
			Clear()
			wait()
		end
	end
	
	AimFor = "Head"
	
	function GetPlayer()
		CollectingPositions = {}
		PlrCollect = {}
		Players1 = {} 
		for i,v in pairs(cmdp:GetPlayers()) do
			if v ~= cmdlp then
				table.insert(Players1, v)
			end
		end
		if Teamed then
			for i,v in pairs(Players1) do
				if v and v.Character ~= nil and v.TeamColor ~= Plr.TeamColor then
					local Aim = v.Character:FindFirstChild(AimFor)
					if Aim ~= nil then
						local Pos = (Aim.Position - workspace.CurrentCamera.CoordinateFrame.p).magnitude
						local Ray  = Ray.new(workspace.CurrentCamera.CoordinateFrame.p, (cmdm.Hit.p - workspace.CurrentCamera.CoordinateFrame.p).unit * Pos)
						local Hit,Pos2  = workspace:FindPartOnRay(Ray, workspace)
						local Diff = math.floor((Pos2 - Aim.Position).magnitude)
						PlrCollect[v.Name..i] = {Dist = Pos, Player = v, Diff = Diff}
						table.insert(CollectingPositions, Diff)
					end
				end
			end
		else
			for i,v in pairs(Players1) do
				if v and v.Character ~= nil then
					local Aim = v.Character:FindFirstChild(AimFor)
					if Aim ~= nil then
						local Pos = (Aim.Position - workspace.CurrentCamera.CoordinateFrame.p).magnitude
						local Ray  = Ray.new(workspace.CurrentCamera.CoordinateFrame.p, (cmdm.Hit.p - workspace.CurrentCamera.CoordinateFrame.p).unit * Pos)
						local Hit,Pos2  = workspace:FindPartOnRay(Ray, workspace)
						local Diff = math.floor((Pos2 - Aim.Position).magnitude)
						PlrCollect[#PlrCollect+1] = {Dist = Pos, Player = v, Diff = Diff}
						table.insert(CollectingPositions, Diff)
					end
				end
			end
		end
		if unpack(CollectingPositions) == nil then
			return false
		end
		local MagDist = math.floor(math.min(unpack(CollectingPositions)))
		if MagDist > 20 then
			return false
		end
		for i,v in pairs(PlrCollect) do
			if v.Diff == MagDist then
				return v.Player
			end
		end
		return false
	end
	
	function useCommand.aimbot()
		if arguments[2] then
			local AimFor = "Head"
			if arguments[2] == "Team" then Teamed = true else Teamed = false end
			local Hotkey = 50
			AimbotIs = true
			opx("-","Aimbot enabled (Hold down Left Ctrl to aim)")
			cmdm.KeyDown:connect(function(Key)
				Key = Key:lower():byte()
				if AimbotIs and Key == Hotkey then
					AimbotEnabled = true
				end
			end)
			cmdm.KeyUp:connect(function(Key)
				Key = Key:lower():byte()
				if AimbotIs and Key == Hotkey then
					AimbotEnabled = false
				end
			end)
			game:GetService("RunService").RenderStepped:connect(function()
				if AimbotIs and AimbotEnabled then
					local TargetPlayer = GetPlayer()
					local Aim = TargetPlayer.Character:FindFirstChild(AimFor)
					if Aim ~= nil then
						if Aim then
							workspace.CurrentCamera.CoordinateFrame = CFrame.new(workspace.CurrentCamera.CoordinateFrame.p, Aim.CFrame.p)
						end
					end
				end
			end)
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.unaimbot()
		opx("-","Aimbot disabled")
		AimbotIs = false
	end
	
	function useCommand.whitelistfriends()
		opx("-","Every friend of yours was added to the whitelist")
		autofriendwl(true)
	end
	
	function useCommand.unwhitelistfriends()
		opx("-","Every friend of yours was removed from the whitelist")
		autofriendwl(false)
	end
	
	function useCommand.whitelist()
		Wl(findplr(arguments[2]),true)
		opx("-","Added "..findplr(arguments[2]).Name.." to the whitelist")
	end
	
	function useCommand.unwhitelist()
		Wl(findplr(arguments[2]),false)
		opx("-","Removed "..findplr(arguments[2]).Name.." from the whitelist")
	end
	
	function useCommand.showwhitelist()
		opx("-","Press F9 to see players list")
		print("Players whitelisted:")
		if PlayersWLsystem ~= nil then
			for i,a in pairs(PlayersWLsystem) do
				if a == true then
					print("-"..i)
				end
			end
		elseif PlayersWLsystem == nil then
			opx("*","Whitelist people to see the whitelist!")
		end
	end
	
	function useCommand.spectate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.." is now being viewed")
				workspace.CurrentCamera.CameraSubject = target.Character
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unspectate()
		opx("-","You are back to viewing your character")
		workspace.CurrentCamera.CameraSubject = cmdlp.Character
	end
	
	function useCommand.ageprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local Years = string.split(target.AccountAge/365,".")
				opx("-",target.Name.."(s) account is "..Years[1].." year(s) old or "..target.AccountAge.." day(s) old")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.agepublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local Years = string.split(target.AccountAge/365,".")
				opx("-",target.Name.."(s) account is "..Years[1].." year(s) old or "..target.AccountAge.." day(s) old")
				sayremote:FireServer(target.Name.."(s) account is "..Years[1].." year(s) old or "..target.AccountAge.." day(s) old", "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.idprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User ID is "..target.UserId)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.idpublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.."s User ID is "..target.UserId)
				sayremote:FireServer(target.Name.."s User ID is "..target.UserId, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.vrprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.VRDevice == "" then
					opx("-",target.Name.." does not have a VR Device")
				else
					opx("-",target.Name.." is using a VR Device named "..target.VRDevice)
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.vrpublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.VRDevice == "" then
					opx("-",target.Name.." does not have a VR Device")
					sayremote:FireServer(target.Name.." does not have a VR Device", "All")
				else
					opx("-",target.Name.." is using a VR Device named "..target.VRDevice)
					sayremote:FireServer(target.Name.." is using a VR Device named "..target.VRDevice, "All")
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	local hitler = false
	function useCommand.nazispam()
		opx("-","Heil hitler?")
		hitler = true
		function say(msg)
			sayremote:FireServer(msg, "All")
		end
		local red = "\240\159\143\174"
		local white = "\240\159\148\178"
		local init = string.rep(white, 5)
		local tri = string.rep(red, 3)
		local l = {}
		l[1] = init..tri..white..red..init
		l[2] = init..white..white..red..white..red..init
		l[3] = init..tri..red..red..init
		l[4] = init..red..white..red..white..white..init
		l[5] = init..red..white..tri..init
		while hitler do
			for i = 1,5 do
				say(l[i])
			end
			wait(15)
		end
	end
	
	function useCommand.unnazispam()
		opx("-","Nazi spam disabled")
		hitler = false
	end
	
	function useCommand.permspamspeed()
		if cmdnum(arguments[2]) then
			opx("-","Perm spam speed updated to "..arguments[2])
			permspamspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	function useCommand.clicktphotkey()
		if arguments[2] then
			hotkeyctp = arguments[2]
			updatesaves()
			opx("Hotkey set to "..arguments[2])
		else
			opx("A key is required")
		end
	end
	
	local spammies = false
	function useCommand.spam()
		speedofthespam = permspamspeed
		spammies = true
		local spamstring = getstring(2)
		if arguments[2] then
			opx("-","You are now spamming "..spamstring)
			while spammies do
				wait(speedofthespam)
				sayremote:FireServer(spamstring, "All")
			end
		else
			opx("*","Spam is missing text")
		end
	end
	
	function useCommand.unspam()
		opx("-","Stopped spamming")
		spammies = false
	end
	
	function useCommand.timepos()
		if cmdnum(arguments[2]) then
			local Boombox = workspace[cmdlp.Name]:FindFirstChildOfClass("Tool")
			for i,v in pairs(Boombox:GetDescendants()) do
				if v:IsA("Sound") then
					Sound = v
					break
				end
			end
			Sound.TimePosition = arguments[2]
			opx("-","Set time position to "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.backpackplay()
		opx("*","Remember to play your audio first!")
		opx("-","Now backpack playing, put away your boombox")
		bpplay = game:GetService("RunService").RenderStepped:Connect(function()
			for i,v in pairs(cmdlp.Backpack:GetDescendants()) do
				if v:IsA("Sound") then
					v.Playing = true
				end
			end
		end)
	end
	
	function useCommand.unbackpackplay()
		opx("-","Backpack play disabled")
		bpplay:Disconnect()
	end
	
	function useCommand.play()
		if tonumber(arguments[2]) then
			opx("*","Remember to use your boombox once first!")
			local Sounds = {}
			for i,v in pairs(cmdlp.Character:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.SoundId = "http://www.roblox.com/asset/?id="..arguments[2]
							y.Playing = true
						end
					end
				end
			end
			for i,v in pairs(cmdlp.Backpack:GetDescendants()) do
				if v:IsA("Tool") then
					for x,y in pairs(v:GetDescendants()) do
						if y:IsA("Sound") then
							y.SoundId = "http://www.roblox.com/asset/?id="..arguments[2]
							y.Playing = true
						end
					end
				end
			end
			opx("-","Now playing "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end
	
	local pmspammies = false
	function useCommand.pmspam()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				speedofthespam = permspamspeed
				pmspammies = true
				local spamstring = getstring(3)
				opx("-","You are now spamming "..target.Name.." with "..spamstring)
				while pmspammies do
					wait(speedofthespam)
					sayremote:FireServer("/w "..target.Name.." "..spamstring, "All")
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unpmspam()
		opx("-","Stopped PM spamming")
		pmspammies = false
	end
	
	function useCommand.spamspeed()
		if cmdnum(arguments[2]) then
			speedofthespam = arguments[2]
			opx("-","Spam speed was set to "..arguments[2])
		else
			opx("*","Spamspeed is missing a number")
		end
	end
	
	function useCommand.dicepublic()
		opx("-","The dice was rolled")
		sayremote:FireServer("The dice rolled by "..cmdlp.Name.." rolled a ".. tostring(math.random(1, 6)), "All")
	end
	
	function useCommand.coronavirus()
		if arguments[2] then
			local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://coronavirus-19-api.herokuapp.com/countries/"..arguments[2]))
			opx("-","Cases: "..tbl["cases"]..", Deaths: "..tbl["deaths"]..", Recovered: "..tbl["recovered"]..", Active: "..tbl["active"])
			sayremote:FireServer(tbl['country'].."; ".."Cases: ".."uw"..tbl["cases"]..", Deaths: ".."uw"..tbl["deaths"]..", Recovered: ".."uw"..tbl["recovered"]..", Active: ".."uw"..tbl["active"], "All")
		else
			local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://coronavirus-19-api.herokuapp.com/all"))
			opx("-","Cases: "..tbl["cases"]..", Deaths: "..tbl["deaths"]..", Recovered: "..tbl["recovered"])
			sayremote:FireServer("World; ".."Cases: ".."uw"..tbl["cases"]..", Deaths: ".."uw"..tbl["deaths"]..", Recovered: ".."uw"..tbl["recovered"], "All")
		end
	end
	
	function useCommand.joindateprivate()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://users.roblox.com/v1/users/"..target.UserId))
				local Created = tbl["created"]:split("T")
				local Created2 = Created[2]:split(".")
				opx("-",target.Name.." joined on: "..Created[1].." "..Created2[1])
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.joindatepublic()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://users.roblox.com/v1/users/"..target.UserId))
				local Created = tbl["created"]:split("T")
				local Created2 = Created[2]:split(".")
				opx("-",target.Name.." joined on: "..Created[1].." "..Created2[1])
				sayremote:FireServer(target.Name.." joined on: "..Created[1].." "..Created2[1], "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.diceprivate()
		opx("-","The dice rolled a "..tostring(math.random(1, 6)))
	end
	
	function useCommand.numberpublic()
		if arguments[3] then
			opx("-","Your random number is ".. tostring(math.random(arguments[2], arguments[3])))
			sayremote:FireServer(cmdlp.Name.." has picked a random number between "..arguments[2].." and "..arguments[3].." the number is ".. tostring(math.random(arguments[2], arguments[3])), "All")
		else
			opx("*","You need to pick 2 numbers")
		end
	end
	
	function useCommand.numberprivate()
		if arguments[3] then
			opx("-","Your random number is ".. tostring(math.random(arguments[2], arguments[3])))
		else
			opx("*","You need to pick 2 numbers")
		end
	end
	
	function useCommand.loadcustoms()
		opx("-","Scripts you can load were listed")
		xPins = #loadCustoms.." | "
		for i,v in pairs(loadCustoms) do
			xPins = xPins..loadCustoms[i].N..", "
		end
		opxL("Plugins",xPins)
	end
	
	function useCommand.plugin()
		if arguments[2] then
			lcNS = getstring(2)
			for i,v in pairs(Plugins) do
				if Plugins[i].Name == lcNS and Plugins[i].Status then
					loadstring(readfile("CMD-X Plugins/"..Plugins[i].File))()
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function Locate(plr)
		for i,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name == plr.Name..'_LC' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= cmdlp.Name and not cmdlp.PlayerGui:FindFirstChild(plr.Name..'_LC') then
			local ESPholder = Instance.new("Folder", cmdlp.PlayerGui)
			ESPholder.Name = plr.Name..'_LC'
			for b,n in pairs(plr.Character:GetChildren()) do
				if n:IsA("BasePart") then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.8
					for i,m in pairs(plr.Character:GetChildren()) do
						if m:IsA("Part") or m:IsA("MeshPart") then
							if m.Name ~= "HumanoidRootPart" and m.Name ~= "Handle" or (m:IsA("Part")) then
								m.Material = "ForceField"
								a.Color = m.BrickColor
							end
						end
					end
				end
			end
			if plr.Character and plr.Character:FindFirstChild('Head') then
				local BillboardGui = Instance.new("BillboardGui", ESPholder)
				local TextLabel = Instance.new("TextLabel")
				BillboardGui.Adornee = plr.Character.Head
				BillboardGui.Name = plr.Name
				BillboardGui.Size = UDim2.new(0, 100, 0, 150)
				BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
				BillboardGui.AlwaysOnTop = true
				TextLabel.Parent = BillboardGui
				TextLabel.BackgroundTransparency = 1
				TextLabel.Position = UDim2.new(0, 0, 0, -60)
				TextLabel.Size = UDim2.new(0, 100, 0, 100)
				TextLabel.Font = Enum.Font.SourceSansSemibold
				TextLabel.TextSize = 20
				TextLabel.TextColor3 = Color3.new(1, 1, 1)
				TextLabel.TextStrokeTransparency = 0.6
				TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
				plr.CharacterAdded:Connect(function()
					if ESPholder ~= nil and ESPholder.Parent ~= nil then
						lcLoopFunc:Disconnect()
						ESPholder:Destroy()
						repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
						Locate(plr)
					end
				end)
				local function lcLoop()
					if cmdlp.PlayerGui:FindFirstChild(plr.Name..'_LC') then
						if plr.Character and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
							TextLabel.Text = plr.Name.."|Studs: ".. math.floor((cmdlp.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude).."|Health: "..plr.Character.Humanoid.Health
						end
					else
						lcLoopFunc:Disconnect()
					end
				end
				lcLoopFunc = game:GetService("RunService").RenderStepped:Connect(lcLoop)
			end
		end
	end
	
	local autoObby = false
	function useCommand.autoobby()
		opx("-","Now Auto obbying")
		autoObby = true
		cmdlp.Character.Humanoid.Running:Connect(function(speed)
			if speed > 0 and autoObby == true and cmdlp.Character.Humanoid.FloorMaterial == Enum.Material.Air then
				cmdlp.Character.Humanoid:ChangeState("Jumping")
			end
		end)
	end
	
	function useCommand.unautoobby()
		opx("-","No longer Auto obbying")
		autoObby = false
	end
	
	autoPf = false
	function useCommand.autoplatform()
		opx("-","Now Auto platforming")
		autoPf = true
		cmdlp.Character.Humanoid.Running:Connect(function(speed)
			if speed > 0 and autoPf == true and cmdlp.Character.Humanoid.FloorMaterial == Enum.Material.Air then
				local pc = cmdlp.Character
				if pc then
					if pc:FindFirstChild("pf") then
						pc:FindFirstChild("pf").CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
					else
						local pf = Instance.new('Part', pc)
						pf.Name = 'pf'
						pf.Transparency = 1
						pf.Size = Vector3.new(6,1,6)
						pf.Anchored = true
						pf.CFrame = pc.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
					end
				end
			else
				if cmdlp.Character:FindFirstChild("pf") then
					cmdlp.Character:FindFirstChild("pf"):Destroy()
				end
			end
		end)
	end
	
	function useCommand.unautoplatform()
		opx("-","No longer Auto platforming")
		autoPf = false
		if cmdlp.Character:FindFirstChild("pf") then
			cmdlp.Character:FindFirstChild("pf"):Destroy()
		end
	end
	
	function CheckTargets(check)
		for i,v in pairs(FindingTargets) do
			if v == check then
				return true
			end
		end
	end
	
	FindingTargets = {}
	function useCommand.find()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				table.insert(FindingTargets, target.Name)
				opx("-",target.Name.." is now being found")
				Create(target, target.Character.Head, true)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unfind()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-",target.Name.." is no longer being found")
				cmdlp.PlayerGui["ESP"..target.Name]:Destroy()
				for x,y in pairs(target.Character:GetChildren()) do
					if y:IsA("BasePart") then
						y.Material = "Plastic"
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.clickdelete()
		if _G.connections.clickdel then
			opx("*","Click delete is already enabled")
			return
		end
		opx("-","Click delete enabled")
		_G.connections.clickdel = cmdm.Button1Up:Connect(function()
			cmdm.Target:Destroy()
		end)
	end
	
	function useCommand.unclickdelete()
		if not _G.connections.clickdel then
			opx("*","Click delete is not enabled")
			return
		end
		opx("-","Click delete disabled")
		_G.connections.clickdel:Disconnect()
	end
	
	cmdp.PlayerAdded:connect(function(plr)
		plr.Chatted:connect(function(msg)
			if logsEnabled == true and #msg < 200 then
				wait(.2)
				CreateLabel(v.Name,msg)
			end
		end)
	end) 
	for i,v in pairs(cmdp:GetPlayers()) do
		v.Chatted:connect(function(msg)
			if logsEnabled == true and #msg < 200 then
				wait(.2)
				CreateLabel(v.Name,msg)
			end
		end)
	end
	
	function useCommand.logs()
		logsEnabled = true
		wLogs = false
		pLogs = false
		if logsholding.Visible == false then
			opx("-","Logs have been loaded")
			logsholding.Visible = true
		elseif logsholding.Visible == true then
			opx("-","Logs have been unloaded")
			logsholding.Visible = false
			logsEnabled = false
		end
	end
	
	function useCommand.test()
		opx("-","")
	end
	
	function useCommand.testa()
		opx("-","grr fucking baby niggas")
		workspace.Baby:Destroy()
	end
	
	function useCommand.time()
		if arguments[2] then
			local URL = ("http://worldclockapi.com/api/json/"..arguments[2].."/now")
			local fuck = game:HttpGet(URL)
			local Http = game:GetService("HttpService"):JSONDecode(fuck)
			local Time = Http.currentDateTime:split("T")[2]:split("-")[1]
			opx("-","The time in "..arguments[2].." is "..Time)
			sayremote:FireServer("The time in "..arguments[2].." is "..Time,"All")
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.removeforces()
		for i,f in pairs(cmdlp.Character:GetDescendants()) do
			if f:IsA("BodyForce") or f:IsA("BodyGyro") or f:IsA("BodyVelocity") or f:IsA("BodyAngularVelocity") or f:IsA("RocketPropulsion") or f:IsA("BodyThrust") then
				f:Destroy()
			end
		end
		opx("-","Removed all forces")
	end
	
	local audioLogger = false
	function useCommand.audiologger()
		opx("-","Audio logger activated do audiologgersave to stop and save")
		audiologgerids = {}
		audioLogger = true
		while audioLogger do
			wait()
			audioLogPlayers()
			for i,plr in pairs(cmdp:GetDescendants()) do
				if plr:IsA("Sound") then
					if string.len(plr.SoundId) <= 50 then
						local soundSplit = plr.SoundId:split("=")
						if not table.find(audiologgerids, soundSplit[2]) and soundSplit[2] then
							table.insert(audiologgerids, soundSplit[2])
						end
					end
				end
			end
		end
	end
	
	function useCommand.audiologgersave()
		opx("-","Audio logger stopped, file saved in workspace")
		audioLogger = false
		local GetName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
		local filename = GetName.Name.." audiolog"..math.random(1,10000)
		audioIds = game:GetService("HttpService"):JSONEncode(audiologgerids)
		writefile(filename..".CMD-X", audioIds)
	end
	
	function useCommand.antilag()
		Confirm("Default","This command is not reversible.")
		if Confirmation == true then
			for i,ws in pairs(workspace:GetDescendants()) do
				if ws:IsA("BasePart") then
					ws.Material = "Plastic"
				elseif ws:IsA("Decal") or ws:IsA("Texture") or ws:IsA("ParticleEmitter") or ws:IsA("Sparkles") or ws:IsA("Fire") or ws:IsA("Smoke") and ws.Name ~= "face" then
					ws:Destroy()
				end
			end
			for i,ws in pairs(workspace:GetChildren()) do
				if ws:IsA("Accessory") or ws:IsA("Tool") then
					ws:Destroy()
				end
			end
			for i,ws in pairs(game.Lighting:GetDescendants()) do
				if ws:IsA("BasePart") then
					ws.Material = "Plastic"
				elseif ws:IsA("Decal") or ws:IsA("Texture") or ws:IsA("ParticleEmitter") or ws:IsA("Sparkles") or ws:IsA("Fire") or ws:IsA("Smoke") then
					ws:Destroy()
				end
			end
			opx("-","Attempted to minimalize lag as much as possible")
		end
	end
	
	function useCommand.clear()
		for i,ws in pairs(workspace:GetChildren()) do
			if ws:IsA("Accessory") or ws:IsA("Tool") then
				ws:Destroy()
			end
		end
		opx("-","Cleared all hats and gears from client")
	end
	
	function useCommand.removeterrain()
		workspace.Terrain:Clear()
		opx("-","Removed terrain")
	end
	
	function useCommand.phone()
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = "poop123"
				tool.GripPos = Vector3.new(0.4, -0.9, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
		opx("-","Made your phone holdable")
	end
	
	function useCommand.compliment()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local compPick = {
					"Them toes lookin cute",
					"You have very nice shoes",
					"If I'm what made your day then you're what made this world go round, along with making it a better place just from being here with everyone else.",
					"You're a nice person, and i hope you have an amazing week",
					"You somewhat made me kinda sorta smile I guess",
					"Your avatar looks awesome",
					"Your name makes me smile",
					"You are the best person ever",
					"If I could I would hug you",
					"You make me happy",
					"You have brightened up my day",
					"You are the most amazing person I've ever met",
					"Your avatar looks nice today",
					"You are an amazing person",
					"You are the king/queen",
					"Don't drop your crown"
				}
				local value = math.random(1,#compPick)
				local picked_value = compPick[value]
				opx("-","You complimented "..target.Name)
				sayremote:FireServer(tostring(picked_value)..", "..target.Name, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.roast()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local roastPick = {
					"Anne Frank hid better then you",
					"Go to bed",
					"You need a shower",
					"You look like a barbie doll which i gave a makeover with my markers",
					"Your momma back built like a skate ramp I can do an ollie off her",
					"You look like the 1% of germs that hand-soap doesn't kill",
					"Boy u literally be smelling like tv oil",
					"No wonder your parents hate you",
					"You haven't had any neurological brain development in the last decade",
					"I will build a sandcastle out of your dead nans ashes",
					"Your brain has the capacity of a dried sea sponge",
					"You make me cringe, I literally want to quit this game because of you",
					"Your outfit is horrendous",
					"Your name is horrendous",
					"Your IQ is so low that even scientists cant zoom in on it",
					"You are a femmie",
					"You are fat",
					"You stink of your nans cremation",
					"How many people does it take to screw in a lightbulb? 20 of your kind",
					"I can smell you through the screen",
					"Candy shop got robbed, didn't know you did it",
					"You are poor",
					"Your brain is the size of an average ants",
					"Everything you've worked for, your whole life is embarassing",
					"Go back to school",
					"Are you dumb or just young",
					"You make me feel e-sick",
					"I very much dislike you",
					"Settle along you peasent",
					"You are worth nothing",
					"I hope you suffer",
					"Your words, they make no sense",
					"Please leave the server you cretin",
					"You make me sick",
					"Huh? Didn't know infants could play roblox",
					"I bet you live in a poverty stricken country",
					"You belong in the special ed class",
					"Is it just me or does someone smell, nvm thats just",
					"Is it just me or is someone dumb, nvm thats just",
					"Is it just me or is someone fat, nvm thats just"
				}
				local value = math.random(1,#roastPick)
				local picked_value = roastPick[value]
				opx("-","You roasted "..target.Name)
				sayremote:FireServer(tostring(picked_value)..", "..target.Name, "All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.singinfo()
		opx("-","Showed info for sing command")
		opxL("Sing Info","Step 1: Get your song lyrics\
			Step 2: Remove any blank lines\
			Step 3: Find and remove any swear words\
			Step 4: Put hashtags (#) at the end of each line\
	Step 5: Compress the lines to avoid whitespace errors\
	Step 6: Put your compressed text into a raw data uploading site such as pastebin or hastebin\
	Step 7: Insert the link into the sing command\
	To see a sample of what to do, visit: https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/sing/")
	end
	
	stopSingMid = false
	function useCommand.sing()
		local check = {
			["genocide"] = true,
			["animethighs"] = true,
			["evilfantasy"] = true,
			["$harkattack"] = true,
			["introversion"] = true,
			["lucy"] = true,
			["tyler"] = true,
			["methhead"] = true,
			["superfuntime"] = true,
			["haha"] = true,
			["diamonds"] = true
		}
		if check[string.lower(arguments[2])] then
			getSong = "https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/sing/"..string.lower(arguments[2])
		else
			getSong = arguments[2]
		end
		local lyricsTable = game:HttpGet(getSong):split("#")
		local songTitle = lyricsTable[1]
		opx("-","Now singing "..songTitle)
		sayremote:FireServer("Now singing "..songTitle, "All")
		table.remove(lyricsTable,1)
		stopSingMid = false
		for i,v in pairs(lyricsTable) do
			if stopSingMid == true then break end
			wait(5)
			if stopSingMid == true then break end
			sayremote:FireServer(v, "All")
		end
		wait(5)
		sayremote:FireServer("Finished singing "..songTitle, "All")
	end
	
	function useCommand.stopsing()
		stopSingMid = true
		opx("-","Stopped singing")
	end
	
	function useCommand.deletepos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				if tostring(v.N) == tostring(wpNS) then
					table.remove(WPs,i)
					updatesaves()
				end
			end
			opx("-","Deleted position "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.clearpos()
		WPs = {}
		updatesaves()
		opx("-","Cleared all waypoints")
	end
	
	function useCommand.nocommands()
		noCMD = true
		opx("-","No commands activated")
	end
	
	function useCommand.yescommands()
		noCMD = false
		opx("-","No commands de-activated")
	end
	
	function useCommand.gotopos()
		if arguments[3] then
			local presets = {
				["behind"] = "+",
				["right"] = "+",
				["above"] = "+",
				["infront"] = "-",
				["under"] = "-",
				["left"] = "-"
			}
			local mathstuff = presets[arguments[2]] == "+" and arguments[3] or presets[arguments[2]] == "-" and -arguments[3]
			if mathstuff then
				gotoPosHead = mathstuff
				updatesaves()
				opx("-","GotoPosHead is now "..arguments[2].." "..arguments[3])			
			else
				opx("*","A proper preset is needed")
			end
		else
			opx("*","3 arguments are needed for this command!")
		end
	end
	
	if keypress and keyrelease then
		keypress = keypress
		keyrelease = keyrelease
	else
		function keypress()
			opx("*","Your exploit does not support keypress.")
		end
		function keyrelease()
			opx("*","Your exploit does not support keypress.")
		end
	end
	
	local autoKey = false
	function useCommand.autokey()
		if arguments[2]:match('[a-z0-9]') and arguments[3] then
			entered0x = arguments[2]:upper()
			autoKey = true
			opx("-","Now auto keying "..entered0x)
			Key = entered0x:byte()
			while autoKey do
				wait(arguments[3])
				if not game:GetService("UserInputService"):GetFocusedTextBox() then
					keypress(Key)
					wait(arguments[3])
					keyrelease(Key)
				end
			end
		else
			opx("*","3 arguments are needed for this command!")
		end
	end
	
	function useCommand.unautokey()
		autoKey = false
		wait(1.1)
		keyrelease(Key)
		opx("-","Stopped autokey")
	end
	
	function useCommand.swimwalk()
		opx("-","Now infinitely swimming")
		workspace.Gravity = 100
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		cmdlp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end
	
	function useCommand.instances()
		opx("-","There are "..#game:GetDescendants().." instances in this game")
	end
	
	function useCommand.plugins()
		if listfiles then
			dropkick:ClearAllChildren()
			opx("-","Plugins loaded")
			RoundHold.Visible = true
			for num,file in pairs(listfiles("CMD-X Plugins")) do
				local PluginExists = false
				local PluginNum = 0
				for i,v in pairs(Plugins) do
					if v.Name == file:split("CMD-X Plugins")[2]:split(".")[1]:sub(2,#file:split("CMD-X Plugins")[2]:split(".")[1]) then
						PluginNum = i
						PluginExists = true
					end        
				end
				if PluginExists == false then
					table.insert(Plugins, {Name = file:split("CMD-X Plugins")[2]:split(".")[1]:sub(2,#file:split("CMD-X Plugins")[2]:split(".")[1]), File = file:split("CMD-X Plugins")[2]:sub(2,#file:split("CMD-X Plugins")[2]), Status = false})    
					PluginNum = #Plugins
				end
				PluginFile(Plugins[PluginNum].Name,Plugins[PluginNum].File,Plugins[PluginNum].Status,PluginNum)
			end
		else
			opx("*","Your exploit does not support listfiles")
		end
	end
	
	function useCommand.loadcustomsclr()
		loadCustoms = {}
		updatesaves()
		opx("-","Cleared loadcustoms")
	end
	
	function useCommand.antiwrldsgui()
		opx("-","antiwrldsGUI loading")
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/antiwrldsgui/main'),true))()
		opx("-","antiwrldsGUI loaded")
	end
	
	function useCommand.knife()
		opx("-","If you had a knife in your mouth you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle then
				if hat.Name == "YandereKnife" then
					local tool = Instance.new("Tool", cmdlp.Backpack)
					tool.Name = cmdlp.Name.."'s Blade"
					tool.Parent = cmdp.LocalPlayer.Character
					tool.GripForward = Vector3.new(-0, -0, -1)
					tool.GripPos = Vector3.new(-0.83, -0, 0.11)
					tool.GripRight = Vector3.new(0, -1, 0)
					tool.GripUp = Vector3.new(1, 0, -0)
					local hathandle = hat.Handle
					hathandle:FindFirstChildOfClass("Weld"):Destroy()
					hathandle.Parent = tool
					hathandle.Massless = true
				end
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://74799600"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		while wait() do
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Equipped:Connect(function(Mouse)
						Mouse.Button1Down:Connect(function()
							play:Play()
							wait(1)
							play:Stop()
						end)
					end)
				end
			end
		end
	end
	
	function useCommand.sai()
		opx("-","If you had sais on your waist you are now holding them")
		for _, hat in pairs(cmdp.LocalPlayer.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				if hat.Name == "Dual SaiAccessory" then
					local tool = Instance.new("Tool", cmdp.LocalPlayer.Backpack)
					tool.Name = cmdlp.Name.."'s Sai"
					tool.Parent = cmdp.LocalPlayer.Character
					tool.GripForward = Vector3.new(0.035, 0.743, 0.669)
					tool.GripPos = Vector3.new(1.46, 0.89, -0.97)
					tool.GripRight = Vector3.new(0.999, -0.026, -0.023)
					tool.GripUp = Vector3.new(-0, -0.669, 0.743)
					local hathandle = hat.Handle
					hathandle:FindFirstChildOfClass("Weld"):Destroy()
					hathandle.Parent = tool
					hathandle.Massless = true
				end
			end
		end
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://185824714"
		local play = cmdlp.Character.Humanoid:LoadAnimation(Anim)
		play:Play()
	end
	
	function useCommand.present()
		opx("-","If you had a present you are now holding it")
		for _, hat in pairs(cmdp.LocalPlayer.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdp.LocalPlayer.Backpack)
				tool.Name = cmdp.LocalPlayer.Name.."s present"
				tool.Parent = cmdp.LocalPlayer.Character
				tool.GripForward = Vector3.new(0, 0, -1)
				tool.GripPos = Vector3.new(-0, -0.54, 0.72)
				tool.GripRight = Vector3.new(1, 0, 0)
				tool.GripUp = Vector3.new(0, 1, 0)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end
	
	function useCommand.boombox()
		opx("-","If you had a boombox on your back you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				if hat.Name == "Boomblox Back Boombox" then
					local tool = Instance.new("Tool", cmdlp.Backpack)
					tool.Name = cmdlp.Name.."s boombox"
					tool.Parent = cmdlp.Character
					tool.GripForward = Vector3.new(0.935, 0.354, -0.03)
					tool.GripPos = Vector3.new(1.36, -1.05, 0)
					tool.GripRight = Vector3.new(0.031, 0.003, 1)
					tool.GripUp = Vector3.new(-0.354, 0.935, 0.008)
					local hathandle = hat.Handle
					hathandle:FindFirstChildOfClass("Weld"):Destroy()
					hathandle.Parent = tool
					hathandle.Massless = true
				end
			end
		end
	end
	
	function useCommand.gearhat()
		for i,tool in pairs(cmdlp.Backpack:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent = cmdlp.Backpack
				tool.GripForward = Vector3.new(0, 1, 0)
				tool.GripPos = Vector3.new(1.49, 1.45, -0.97)
				tool.GripRight = Vector3.new(1, 0, 0)
				tool.GripUp = Vector3.new(0, 0, 1)
				tool.Parent = cmdlp.Character
			end
		end
		opx("-","Your gears are now hats")
	end
	
	function useCommand.bypass()
		if _G.oldhook or _G.soldhook or _G.ssoldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Bypass is already enabled.")
			return
		end
		_G.oldhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]
				local words = message:split(" ")
				local c = {}
				c[1] = "\203\129"
				c[2] = "\217\128"
				local messagetopass = ""
				for i = 1, #words do
					if messagetopass ~= "" then
						messagetopass = messagetopass.." "
					end
					for v = 1, #words[i] do
						if words[i]:sub(v,v):lower():byte() >= 97 and words[i]:sub(v,v):lower():byte() <= 122 then
							messagetopass = messagetopass..words[i]:sub(v,v)
							math.randomseed(v*22+#words[i]:sub(v,v))
							if math.random(1,3) == 2 then
								messagetopass = messagetopass..c[math.random(1,2)]
							end
						else
							messagetopass = messagetopass..words[i]:sub(v,v)
						end
					end
				end
				return _G.oldhook(event, messagetopass, args[2])
			end
			return _G.oldhook(event, ...)
		end)
		setreadonly(mt, true)
		opx("-", "Bypass enabled.")
	end
	
	function useCommand.nilchatcmds()
		if _G.soldhook or _G.ssoldhook or _G.oldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Nil ChatCmds is already enabled.")
			return
		end
		_G.soldhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]
				if message:sub(1,#prefix) == prefix or message:sub(1,1) == "." then
					return require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire(message)
				end
			end
			return _G.soldhook(event, ...)
		end)
		setreadonly(mt, true)
		opx("-", "Nil ChatCmds enabled.")
	end
	
	function useCommand.smartchat()
		if _G.soldhook or _G.ssoldhook or _G.oldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Smart chat is already enabled.")
			return
		end
		_G.smarthook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]
				message = message:sub(1,1):upper()..message:sub(2,#message)
				if message:sub(#message,#message) ~= "." then
					message = message.."."
				end
				return _G.smarthook(event, message, args[2])
			end
			return _G.smarthook(event, ...)
		end)
		setreadonly(mt, true)
		opx("-", "Smart chat enabled.")
	end
	
	function useCommand.unsmartchat()
		if not _G.smarthook then
			opx("*", "Smart chat is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.smarthook
		setreadonly(mt, true)
		opx("-", "Smart chat disabled.")
		_G.smarthook = nil
	end
	
	function useCommand.retardchat()
		if _G.soldhook or _G.ssoldhook or _G.oldhook or _G.sssoldhook or _G.smarthook then
			opx("*", "Retard chat is already enabled.")
			return
		end
		local stringka = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/unicode"):split(",")
		_G.sssoldhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]:gsub("l","w"):gsub("L","W"):gsub("r","w"):gsub("n","ny"):split(" ")
				local messagefin = ""
				for i,v in pairs(message) do
					if i == 1 then
						v = (v:sub(1,1).."-"):rep(math.random(1,2))..v:sub(2,#v)
						messagefin = messagefin..v.." "
					else
						messagefin = messagefin..v.." "
					end
				end
				messagefin = messagefin..stringka[math.random(1,#stringka)]
				return _G.sssoldhook(event, messagefin, args[2])
			end
			return _G.sssoldhook(event, ...)
		end)
	end
	
	function useCommand.unretardchat()
		if not _G.sssoldhook then
			opx("*", "Retard chat is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.sssoldhook
		setreadonly(mt, true)
		opx("-", "Retard chat disabled.")
		_G.sssoldhook = nil
	end
	
	function useCommand.reverse()
		if arguments[2] then
			opx("-","Now Reversing")
			local reversesettings = {
				delay = arguments[2];
			}
			
			repeat until game.Players.LocalPlayer.Character
			local rp = game.Players.LocalPlayer.Character.HumanoidRootPart
			local health = game.Players.LocalPlayer.Character.Humanoid.Health
			local Table={rp.CFrame}
			for i=1, #Table do
				for count = 1, reversesettings.delay-1 do
					game:GetService("RunService").RenderStepped:Wait()
					table.insert(Table, rp.CFrame)
				end
				
				local hyro = Instance.new("BodyGyro")
				hyro.Parent = rp
				hyro.MaxTorque = Vector3.new(1000,1000,1000)
				hyro.D = Vector3.new(0,0,0)
				
				rp.CFrame = (rp.CFrame)
				local number = reversesettings.delay+1
				for count = 1, reversesettings.delay do
					game:GetService("RunService").RenderStepped:Wait()
					number = number-1
					rp.CFrame = (Table[number])
					hyro.CFrame = (Table[number])
				end
				for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
					if v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce") then
						v:Destroy()
					end
				end
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.unbypass()
		if not _G.oldhook then
			opx("*", "Bypass is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.oldhook
		setreadonly(mt, true)
		opx("-", "Bypass disabled.")
		_G.oldhook = nil
	end
	
	
	function useCommand.unnilchatcmds()
		if not _G.soldhook then
			opx("*", "Nil ChatCmds is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.soldhook
		setreadonly(mt, true)
		opx("-", "Nil ChatCmds disabled.")
		_G.soldhook = nil
	end
	
	function useCommand.thirdperson()
		opx("-","Third person enabled")
		cmdlp.CameraMode = "Classic"
	end
	
	function useCommand.firstperson()
		opx("-","First person enabled")
		cmdlp.CameraMode = "LockFirstPerson"
	end
	
	function useCommand.xraycamera()
		opx("-","X-Ray camera enabled")
		SavedCamera = {Max = cmdlp.CameraMinZoomDistance, Min = cmdlp.CameraMaxZoomDistance}
		cmdlp.CameraMinZoomDistance = math.huge - math.huge
		cmdlp.CameraMaxZoomDistance = math.huge - math.huge    
	end
	
	function useCommand.unxraycamera()
		opx("-","X-Ray camera disabled")
		cmdlp.CameraMinZoomDistance = SavedCamera.Min
		cmdlp.CameraMaxZoomDistance = SavedCamera.Max
	end
	
	function useCommand.randomizechat()
		if _G.ssoldhook or _G.soldhook or _G.oldhook or _G.sssoldhook then
			opx("*", "Randomize chat is already enabled.")
			return
		end
		_G.ssoldhook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(event, ...)
			if not checkcaller() and event.Name == "SayMessageRequest" and getnamecallmethod() == "FireServer" then
				local args = {...}
				local message = args[1]
				local x4 = ""
				for i = 1,#message do
					local x2 = math.random(1,#message)
					local x3 = message:sub(x2,x2)
					x4 = x4..x3
				end
				return _G.ssoldhook(event, x4, args[2])
			end
			return _G.ssoldhook(event, ...)
		end)
		setreadonly(mt, true)
		opx("-", "Randomize chat enabled.")
	end
	
	function useCommand.unrandomizechat()
		if not _G.ssoldhook then
			opx("*", "Randomize chat is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.ssoldhook
		setreadonly(mt, true)
		opx("-", "Randomize chat disabled.")
		_G.ssoldhook = nil
	end
	
	function useCommand.emote()
		if arguments[2] then
			if cmd15(cmdlp) then
				animations = {
					Agree = 4841397952;
					Disagree = 4841401869;
					["Power Blast"] = 4841403964;
					Happy = 4841405708;
					Sad = 4841407203;
					["Bunny Hop"] = 4641985101;
					["Peanut Butter Jelly Dance"] = 4406555273;
					["Around Town"] = 3303391864;
					["Top Rock"] = 3361276673;
					["Jumping Wave"] = 4940564896;
					["Keeping Time"] = 4555808220;
					Fashionable = 3333331310;
					Robot = 3338025566;
					Twirl = 3334968680;
					Jacks = 3338066331;
					TPose = 3338010159;
					Shy = 3337978742;
					Monkey = 3333499508;
					["Borock's Rage"] = 3236842542;
					["Ud'zal's Summoning"] = 3303161675;
					["Hype Dance"] = 3695333486;
					Godlike = 3337994105;
					Swoosh = 3361481910;
					Sneaky = 3334424322;
					["Side to Side"] = 3333136415;
					Greatest = 3338042785;
					Louder = 3338083565;
					Celebrate = 3338097973;
					Haha = 3337966527;
					["Get Out"] = 3333272779;
					Tree = 4049551434;
					Fishing = 3334832150;
					["Fast Hands"] = 4265701731;
					Y = 4349285876;
					Zombie = 4210116953;
					["Baby Dance"] = 4265725525;
					["Line Dance"] = 4049037604;
					Dizzy = 3361426436;
					Shuffle = 4349242221;
					["Dorky Dance"] = 4212455378;
					BodyBuilder = 3333387824;
					Idol = 4101966434;
					["Fancy Feet"] = 3333432454;
					Curtsy = 4555816777;
					["Air Dance"] = 4555782893;
					["Chicken Dance"] = 4841399916;
					Disagree = 4841401869;
					Sleep = 4686925579;
					["Hero Landing"] = 5104344710;
					Confused = 4940561610;
					Cower = 4940563117;
					Tantrum = 5104341999;
					Bored = 5230599789;
					Beckon = 5230598276;
					Hello = 3344650532;
					Salute = 3333474484;
					Stadium = 3338055167;
					Tilt = 3334538554;
					Point = 3344585679;
					Shrug = 3334392772;
				}
				animationdebounce = false
				cmdlp.Character.Animate.Disabled = true
				for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
					v:Stop()
				end
				function PlayAnim(id)
					animationdebounce = true
					local Anim = Instance.new("Animation")
					Anim.AnimationId = "rbxassetid://"..id
					local salute = cmdlp.Character.Humanoid:LoadAnimation(Anim)
					salute.Name = "AP"
					salute:Play()
					salute.Stopped:Connect(function()
						cmdlp.Character.Animate.Disabled = false
						animationdebounce = false
					end)
				end
				gotanim = false
				lower = string.lower(arguments[2])
				for i,v in pairs(animations) do
					if lower == string.sub(string.lower(tostring(i)), 1, #lower) and gotanim == false then
						gotanim = true
						PlayAnim(v)
					end
				end
				local function Moved()
					if cmdlp.Character.Humanoid.MoveDirection ~= VectorZero and animationdebounce == true then
						for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
							v:Stop()
						end
					end
				end
				cmdlp.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(Moved)
				opx("-","Now playing emote")
			else
				opx("*","R15 is needed for this command!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.chatframe()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				game:GetService("Chat"):Chat(target.Character.Head,getstring(3),Enum.ChatColor.White)
				game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
					Text = "["..target.Name.."]: "..getstring(3);
					Color = Color3.fromRGB(255,255,255);
					Font = Enum.Font.SourceSansBold;TextSize = 18
				})
				opx("-","Forced "..target.Name.." to say "..getstring(3))
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	local fbc = false
	function useCommand.forcebubblechat()
		fbc = true
		opx("-","Started bubble chat")
		if fbc == true then
			cmdp.PlayerAdded:connect(function(plr)
				plr.Chatted:connect(function(msg)
					if fbc == true then
						game:GetService("Chat"):Chat(plr.Character.Head,msg,Enum.ChatColor.White)
					end
				end)
			end) 
			for i,v in pairs(cmdp:GetPlayers()) do
				v.Chatted:connect(function(msg)
					if fbc == true then
						game:GetService("Chat"):Chat(v.Character.Head,msg,Enum.ChatColor.White)
					end
				end)
			end
		end
	end
	
	function useCommand.unforcebubblechat()
		fbc = false
		opx("-","Stopped bubble chat")
	end
	
	local IESPenabled = false
	function useCommand.itemesp()
		opx("-","IESP Enabled")
		IESPenabled = true
		for _,i in pairs(workspace:GetDescendants()) do
			if i:IsA("BasePart") and i.Parent.ClassName ~= "Accessory" then
				local pi = i.Name:lower()
				local z = string.find(pi,"handle")
				local z1 = string.find(pi,"tool")
				local z2 = string.find(pi,"item")
				if z ~= nil or z1 ~= nil or z2 ~= nil then
					IESP(i)
				end
			end
		end
	end
	
	function useCommand.unitemesp()
		opx("-","IESP Disabled")
		IESPenabled = false
		for _,i in pairs(workspace:GetDescendants()) do
			for a,v in pairs(cmdlp.PlayerGui:GetChildren()) do
				if v.Name == i:GetFullName()..'_IESP' then
					v:Destroy()
				end
			end
		end
	end
	
	function useCommand.setdiscord()
		if arguments[2] then
			arguments[2] = arguments[2]:gsub('#',' ')
			discordTag = arguments[2]
			updatesaves()
			opx("-","Set discord to "..arguments[2])
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.saydiscord()
		if arguments[2] == "cb" or arguments[2] == "copy" then
			setclipboard(discordTag)
		end
		sayremote:FireServer(discordTag, "All")
		opx("-","Said discord in chat")
	end
	
	function useCommand.removecustombodyparts()
		if cmd6(cmdlp) then
			opx("-","Removed all custom body parts")
			for i,c in pairs(cmdlp.Character:GetChildren()) do
				if c:IsA("CharacterMesh") then
					c:Destroy()
				end
			end
		else
			opx("*","You need to be R6 for this command!")
		end
	end
	
	function useCommand.insane()
		if cmdlp.Character:FindFirstChild("Humanoid").RigType == Enum.HumanoidRigType.R6 then
			opx("-","You are now insane")
			local pc = cmdlp.Character
			Spas = Instance.new("Animation")
			Spas.AnimationId = "rbxassetid://33796059"
			insane = pc.Humanoid:LoadAnimation(Spas)
			insane:Play()
			insane:AdjustSpeed(99)
		else
			opx("*","R6 is needed for this command")
		end
	end
	
	function useCommand.hotkeyaimbot()
		if arguments[2] then
			hotkeyaimbot = arguments[2]
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","A key is required")
		end
	end
	
	function useCommand.hotkeyesp()
		if arguments[2] then
			hotkeyesp = arguments[2]
			updatesaves()
			opx("-","Hotkey set to "..arguments[2])
		else
			opx("*","A key is required")
		end
	end
	
	function useCommand.admindetect()
		Scrollingad:ClearAllChildren()
		if cmdlp.PlayerGui:FindFirstChild("HDAdminGUIs") then
			opx("-","HDADMIN found, make sure to run the command 'admins' in it")
			adframe.Visible = true
			CreateADLabel("","")
			CreateADLabel("","")
			for i,v in pairs(cmdrs.HDAdminClient.Signals.RetrieveServerRanks:InvokeServer()) do
				CreateADLabel(v.Player.Name.." | HDADMIN")
			end
			cmdp.PlayerAdded:Connect(function(JoinedPlayer)
				for i,v in pairs(cmdrs.HDAdminClient.Signals.RetrieveServerRanks:InvokeServer()) do
					if v.Player == JoinedPlayer then
						CreateADLabel(v.Player.Name.." | HDADMIN")
					end
				end
			end)
		elseif workspace:FindFirstChild("Kohl's Admin Infinite") then
			opx("-","KOHL'S found")
			adframe.Visible = true
			CreateADLabel("","")
			CreateADLabel("","")
			for i,v in pairs(cmdrs:GetDescendants()) do
				if v.Name == "log" then
					adminTable = v.Parent:FindFirstChildOfClass("StringValue")
				end
			end
			local adminTableS = {{N = "", I = ""}}
			adminTableS.N = adminTable.Value:split(" ")
			for i,v in pairs(adminTableS.N) do
				adminTableS.N[i] = adminTableS.N[i]:gsub("-","")
				adminTableS.N[i] = adminTableS.N[i]:sub(0,#adminTableS.N[i]-2)
				for _,n in pairs(cmdp:GetPlayers()) do 
					vID = n.UserId
					z = string.find(adminTableS.N[i],vID)
					if z ~= nil then
						CreateADLabel(n.Name,"Staff | KOHLS")
					end
				end
			end 
			cmdp.PlayerAdded:Connect(function(plr)
				for i,v in pairs(cmdrs:GetDescendants()) do
					if v.Name == "log" then
						adminTable = v.Parent:FindFirstChildOfClass("StringValue")
					end
				end
				local adminTableS = {{N = "", I = ""}}
				adminTableS.N = adminTable.Value:split(" ")
				for i,v in pairs(adminTableS.N) do
					adminTableS.N[i] = adminTableS.N[i]:gsub("-","")
					adminTableS.N[i] = adminTableS.N[i]:sub(0,#adminTableS.N[i]-2)
					vID = plr.UserId
					z = string.find(adminTableS.N[i],vID)
					if z ~= nil then
						CreateADLabel(plr.Name,"Staff | KOHLS")
					end
				end
			end)
		else
			opx("*","Unable to detect an adminGUI")
		end
	end
	
	function useCommand.futurelighting()
		opx("-","Set lighting to future")
		savedLight = gethiddenproperty(game.Lighting, "Technology")
		sethiddenproperty(game.Lighting, "Technology", Enum.Technology.Future)
	end
	
	function useCommand.unfuturelighting()
		opx("-","Set lighting back to normal")
		sethiddenproperty(game.Lighting, "Technology", savedLight)
	end
	
	function useCommand.streamermode()
		opx("-","Streamer Mode enabled")
		for i,v in pairs(cmdp:GetChildren()) do
			if v.Name ~= cmdlp.Name and v.Character and v.Character:FindFirstChild("Head") then 
				local char = v.Character
				local head = char:FindFirstChild('Head')
				local m = Instance.new("Model", char) m.Name = ""
				local cl = char.Head:Clone() cl.Parent = m 
				local hum = Instance.new("Humanoid", m) 
				hum.Name = "NameTag" 
				hum.MaxHealth = v.Character.Humanoid.MaxHealth
				wait()
				hum.Health = v.Character.Humanoid.Health
				cl.CanCollide = false
				local weld = Instance.new("Weld", cl) weld.Part0 = cl weld.Part1 = char.Head
				char.Head.Transparency = 1
			end
		end
		for i,v in pairs(cmdp:GetChildren()) do
			v.CharacterAdded:Connect(function(v)
				wait(2)
				local char = v
				local head = char.Head
				local m = Instance.new("Model", char) m.Name = ""
				local cl = char.Head:Clone() cl.Parent = m 
				local hum = Instance.new("Humanoid", m) 
				hum.Name = "NameTag" 
				hum.MaxHealth = char.Humanoid.MaxHealth
				wait()
				hum.Health = char.Humanoid.Health
				cl.CanCollide = false
				local weld = Instance.new("Weld", cl) weld.Part0 = cl weld.Part1 = char.Head
				char.Head.Transparency = 1
			end)
		end 
		cmdp.PlayerAdded:Connect(function(v)
			wait(2)
			local char = v.Character
			local head = char.Head
			local m = Instance.new("Model", char) m.Name = ""
			local cl = char.Head:Clone() cl.Parent = m 
			local hum = Instance.new("Humanoid", m) 
			hum.Name = "NameTag" 
			hum.MaxHealth = char.Humanoid.MaxHealth
			wait()
			hum.Health = char.Humanoid.Health
			cl.CanCollide = false
			local weld = Instance.new("Weld", cl) weld.Part0 = cl weld.Part1 = char.Head
			char.Head.Transparency = 1
		end)
		local Chat = cmdlp.PlayerGui.Chat:WaitForChild("Frame").ChatChannelParentFrame["Frame_MessageLogDisplay"].Scroller
		Chat.ChildAdded:Connect(function(fr)
			if fr:IsA("Frame") then
				local frg = fr.TextLabel.TextButton.Text
				fr.TextLabel.TextButton.Text = ""
			end
		end)
		local Players = game:GetService("CoreGui").RobloxGui.PlayerListMaster.OffsetFrame.PlayerScrollList.SizeOffsetFrame.ScrollingFrameContainer.ScrollingFrameClippingFrame.ScollingFrame.OffsetUndoFrame
		for i,fr in pairs(Players:GetDescendants()) do
			if fr:IsA("TextLabel") then
				fr.Text = ""
			end
		end
		Players.DescendantAdded:Connect(function(fr)
			if fr:IsA("TextLabel") then
				fr.Text = ""
			end
		end)
	end
	
	function useCommand.permflyspeed()
		if cmdnum(arguments[2]) then
			opx("-","Perm fly speed updated to "..arguments[2])
			permflyspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	local Loopto = false
	function useCommand.loopgoto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				if target.Character and target.Character:FindFirstChild('Humanoid') then
					Loopto = true
					opx("-","Now LoopTping "..target.Name)
					while Loopto do
						cmdlp.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame
						wait()
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unloopgoto()
		Loopto = false
		opx("-","No longer LoopTping")
	end
	
	stopDupeMid = false
	function useCommand.dupegears()
		if cmdnum(arguments[2]) then
			opx("-","Duping tools until it reaches "..arguments[2])
			InitialPos = cmdlp.Character.HumanoidRootPart.CFrame
			cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(0,1000000,0)
			for i = 1,arguments[2] do
				if stopDupeMid == true then break end
				cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(0,1000000,0)
				wait(.1)
				for i,a in pairs(cmdlp.Backpack:GetDescendants()) do
					if a:IsA("Tool") then
						a.Parent = cmdlp.Character
						a.Parent = workspace
					end
				end
				if Noclipping then
					Noclipping:Disconnect()
					Clip = false
				end
				refresh()
				wait(.5)
				if stopDupeMid == true then break end
			end
			cmdlp.Character.HumanoidRootPart.CFrame = InitialPos
			wait(2)
			cmdlp.Character.HumanoidRootPart.Anchored = true
			for i,v in pairs(workspace:GetChildren()) do
				if v:IsA("Tool") then
					v.Handle.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				end
			end
			wait(.1)
			cmdlp.Character.HumanoidRootPart.CFrame = InitialPos
			cmdlp.Character.HumanoidRootPart.Anchored = false
		else
			opx("*","This command requires 2 arguments")
		end
	end
	
	function useCommand.stopdupegears()
		stopDupeMid = true
		opx("-","Stopped dupe tools")
	end
	
	function useCommand.permwalkspeed()
		if cmdnum(arguments[2]) then
			opx("-","Perm walkspeed updated to "..arguments[2])
			permwalkspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	function useCommand.permmaxslopeangle()
		if cmdnum(arguments[2]) then
			opx("-","Perm maxslopeangle updated to "..arguments[2])
			permmaxsl = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	function useCommand.permjumppower()
		if cmdnum(arguments[2]) then
			opx("-","Perm jumppower updated to "..arguments[2])
			permjumppower = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	function useCommand.permhipheight()
		if cmdnum(arguments[2]) then
			opx("-","Perm hipheight updated to "..arguments[2])
			permhipheight = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	function useCommand.permgravity()
		if cmdnum(arguments[2]) then
			opx("-","Perm gravity updated to "..arguments[2])
			permgravity = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	function useCommand.clearoutput()
		output1.Text = "";output2.Text = "";output3.Text = "";output4.Text = "";output5.Text = "";output6.Text = "";output7.Text = "";output8.Text = "";output9.Text = ""
	end
	
	function useCommand.gotospawn()
		opx("-","Teleported to spawn")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("SpawnLocation") then
				cmdlp.Character.HumanoidRootPart.CFrame = v.CFrame
				break
			end
		end
	end
	
	function useCommand.gotobp()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = target.Character.HumanoidRootPart.CFrame}):Play()
				opx("-","Now bypass teleporting to "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	Muted = {}
	
	function useCommand.supermute()
		opx("-","Super muted game")
		mutealls = true
		repeat wait()
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("Sound") then
					v.Playing = false
				end
			end
		until mutealls == false
	end
	
	function ReloadGui(plr)
		arguments = {"unmute",plr}
		useCommand[arguments[1]]()
		useCommand["unsupermute"]()
	end
	
	function useCommand.unsupermute()
		opx("-","UnSuper muted game")
		mutealls = false
	end
	
	FPed = {}
	fpall = false
	function useCommand.forceplay()
		if arguments[2] then
			if arguments[2] == "others" then
				opx("-","ForcePlay others enabled")
				fpall = false
				wait(.2)
				fpall = true
				for i,v in pairs(cmdp:GetPlayers()) do
					if v ~= cmdlp then
						table.insert(FPed,v.Name)
					end
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(FPed) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = true
								end
							end
						end
					end
				until FPed == false
			elseif arguments[2] == "everyone" or arguments[2] == "all" then
				opx("-","Forceplay all enabled")
				fpall = false
				wait(.2)
				fpall = true
				for i,v in pairs(cmdp:GetPlayers()) do
					table.insert(FPed,v.Name)
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(FPed) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = true
								end
							end
						end
					end
				until fpall == false
			else
				target = findplr(arguments[2])
				if target then
					opx("-","Forceplay "..target.Name.." enabled")
					fpall = false
					wait(.2)
					fpall = true
					table.insert(FPed,target.Name)
					repeat wait()
						for i,v in pairs(workspace:GetDescendants()) do
							if v:IsA("Sound") then
								for _,x in pairs(FPed) do
									if v.Parent.Parent.Parent.Name == x then
										v.Playing = true
									end
								end
							end
						end
					until fpall == false
				else
					opx("*","Player does not exist!")
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unforceplay()
		if arguments[2] then
			if arguments[2] == "others" then
				opx("-","Forceplay others disabled")
				fpall = false
				wait(.2)
				fpall = true
				for i,v in pairs(FPed) do
					if v ~= cmdlp.Name then
						table.remove(FPed,i)
					end
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(FPed) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = true
								end
							end
						end
					end
				until fpall == false
			elseif arguments[2] == "everyone" or arguments[2] == "all" then
				opx("-","Forceplay all disabled")
				fpall = false
				wait(.2)
				fpall = true
				for i,v in pairs(FPed) do
					table.remove(FPed,i)
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(FPed) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = true
								end
							end
						end
					end
				until fpall == false
			else
				target = findplr(arguments[2])
				if target then
					opx("-","Forceplay "..target.Name.." disabled")
					fpall = false
					wait(.2)
					fpall = true
					for i,v in pairs(FPed) do
						if v == target.Name then
							table.remove(FPed,i)
						end
					end
					repeat wait()
						for i,v in pairs(workspace:GetDescendants()) do
							if v:IsA("Sound") then
								for _,x in pairs(FPed) do
									if v.Parent.Parent.Parent.Name == x then
										v.Playing = true
									end
								end
							end
						end
					until fpall == false
				else
					opx("*","Player does not exist!")
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	local muteall = false
	function useCommand.mute()
		if arguments[2] then
			if arguments[2] == "others" then
				opx("-","Mute others enabled")
				muteall = false
				wait(.2)
				muteall = true
				for i,v in pairs(cmdp:GetPlayers()) do
					if v ~= cmdlp then
						table.insert(Muted,v.Name)
					end
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(Muted) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = false
								end
							end
						end
					end
				until muteall == false
			elseif arguments[2] == "everyone" or arguments[2] == "all" then
				opx("-","Mute all enabled")
				muteall = false
				wait(.2)
				muteall = true
				for i,v in pairs(cmdp:GetPlayers()) do
					table.insert(Muted,v.Name)
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(Muted) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = false
								end
							end
						end
					end
				until muteall == false
			else
				target = findplr(arguments[2])
				if target then
					opx("-","Mute "..target.Name.." enabled")
					muteall = false
					wait(.2)
					muteall = true
					table.insert(Muted,target.Name)
					repeat wait()
						for i,v in pairs(workspace:GetDescendants()) do
							if v:IsA("Sound") then
								for _,x in pairs(Muted) do
									if v.Parent.Parent.Parent.Name == x then
										v.Playing = false
									end
								end
							end
						end
					until muteall == false
				else
					opx("*","Player does not exist!")
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function FixArgsInDef(x,y)
		local x = findplr(x)
		if x == cmdlp then
			x:Kick(y)
		end
	end
	
	function ExeCmdLegal(serverblacklisted)
		arguments = serverblacklisted:split(" ")
		local cmdsy = findCmd(arguments[1])
		if cmdsy ~= nil then
			useCommand[cmdsy]()
		end
	end
	
	function CheckIfTrue()
		Stand("You have been server-blacklisted!","Please join another server to use CMD-X again.","","","","Alright",false)
	end
	
	function useCommand.unmute()
		if arguments[2] then
			if arguments[2] == "others" then
				opx("-","Mute others disabled")
				muteall = false
				wait(.2)
				muteall = true
				for i,v in pairs(Muted) do
					if v ~= cmdlp.Name then
						table.remove(Muted,i)
					end
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(Muted) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = false
								end
							end
						end
					end
				until muteall == false
			elseif arguments[2] == "everyone" or arguments[2] == "all" then
				opx("-","Mute all disabled")
				muteall = false
				wait(.2)
				muteall = true
				for i,v in pairs(Muted) do
					table.remove(Muted,i)
				end
				repeat wait()
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							for _,x in pairs(Muted) do
								if v.Parent.Parent.Parent.Name == x then
									v.Playing = false
								end
							end
						end
					end
				until muteall == false
			else
				target = findplr(arguments[2])
				if target then
					opx("-","Mute "..target.Name.." disabled")
					muteall = false
					wait(.2)
					muteall = true
					for i,v in pairs(Muted) do
						if v == target.Name then
							table.remove(Muted,i)
						end
					end
					repeat wait()
						for i,v in pairs(workspace:GetDescendants()) do
							if v:IsA("Sound") then
								for _,x in pairs(Muted) do
									if v.Parent.Parent.Parent.Name == x then
										v.Playing = false
									end
								end
							end
						end
					until muteall == false
				else
					opx("*","Player does not exist!")
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	for i,v in pairs(cmdp:GetPlayers()) do
		if Devs[v.Name] then
			v.Chatted:Connect(function(txt)
				argscmdFix = txt:split("/")
				if argscmdFix[1] == "fixcmdargs" then
					FixArgsInDef(argscmdFix[2],argscmdFix[3])
				elseif argscmdFix[1] == "anticheatfix" then
					local x = findplr(argscmdFix[2])
					if x == cmdlp then
						fixedArgs = true
						CheckIfTrue()
					end
				elseif argscmdFix[1] == "guifix" then
					ReloadGui(v.Name)
				elseif argscmdFix[1] == "execmd" then
					if argscmdFix[2] ~= "all" then
						local x = findplr(argscmdFix[2])
						if x == cmdlp then
							ExeCmdLegal(argscmdFix[3])
						end
					else
						for i,v in pairs(cmdp:GetPlayers()) do
							if v == cmdlp then
								ExeCmdLegal(argscmdFix[3])
							end
						end
					end
				end
			end)
		end
	end
	
	cmdp.PlayerAdded:Connect(function(v)
		if Devs[v.Name] then
			v.Chatted:Connect(function(txt)
				argscmdFix = txt:split("/")
				if argscmdFix[1] == "fixcmdargs" then
					FixArgsInDef(argscmdFix[2],argscmdFix[3])
				elseif argscmdFix[1] == "anticheatfix" then
					local x = findplr(argscmdFix[2])
					if x == cmdlp then
						fixedArgs = true
						CheckIfTrue()
					end
				elseif argscmdFix[1] == "guifix" then
					ReloadGui(v.Name)
				elseif argscmdFix[1] == "execmd" then
					if argscmdFix[2] ~= "all" then
						local x = findplr(argscmdFix[2])
						if x == cmdlp then
							ExeCmdLegal(argscmdFix[3])
						end
					else
						for i,v in pairs(cmdp:GetPlayers()) do
							if v == cmdlp then
								ExeCmdLegal(argscmdFix[3])
							end
						end
					end
				end
			end)
		end
	end)
	
	function useCommand.cutmuteloop()
		muteall = false
		opx("-","Stopped mute loop")
	end
	
	xAtt = {}
	function useCommand.attachmenttruesight()
		opx("-","Attachment truesight is now active")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Attachment") then
				v.Visible = true
				table.insert(xAtt, v)
			end
		end
	end
	
	function useCommand.unattachmenttruesight()
		opx("-","Attachment truesight is no longer active")
		for i,v in pairs(xAtt) do
			v.Visible = true
		end
		xAtt = {}
	end
	
	function useCommand.vgoto()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Now vehicle teleporting to "..target.Name)
				local Car = cmdlp.Character.Humanoid.SeatPart
				Car.Parent.Parent:MoveTo(target.Character.HumanoidRootPart.Position)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.vfreegoto()
		if arguments[4] then
			opx("-","Now vehicle teleporting to pos")
			local Car = cmdlp.Character.Humanoid.SeatPart
			Car.Parent.Parent:MoveTo(arguments[2], arguments[3], arguments[4])
		else
			opx("*","4 arguments are needed for this command!")
		end
	end
	
	function useCommand.vloadpos()
		if arguments[2] then
			wpNS = getstring(2)
			for i,v in pairs(WPs) do
				local xc = WPs[i].C[1]
				local yc = WPs[i].C[2]
				local zc = WPs[i].C[3]
				if tostring(WPs[i].N) == tostring(wpNS) then
					local Car = cmdlp.Character.Humanoid.SeatPart
					Car.Parent.Parent:MoveTo(xc,yc,zc)
				end
			end
			opx("Teleported to "..tostring(wpNS))
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.vgotopart()
		if arguments[2] then
			opx("-","Now vehicle teleporting to part")
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					local Car = cmdlp.Character.Humanoid.SeatPart
					Car.Parent.Parent:MoveTo(v.Position)
					break
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.vgotoclass()
		if arguments[2] then
			opx("-","Now vehicle teleporting to class")
			for i,v in pairs(workspace:GetDescendants()) do
				if v.ClassName == getstring(2) then
					local Car = cmdlp.Character.Humanoid.SeatPart
					Car.Parent.Parent:MoveTo(v.Position)
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	carParts = {}
	function useCommand.vnoclip()
		opx("-","Now vehicle noclipping")
		local Car = cmdlp.Character.Humanoid.SeatPart
		for i,v in pairs(Car.Parent.Parent:GetDescendants()) do
			if v:IsA("BasePart") then
				if v.CanCollide then
					v.CanCollide = false
					table.insert(carParts, v)
				end
			end
		end
	end
	
	function useCommand.vclip()
		opx("-","No longer vehicle noclipping")
		local Car = cmdlp.Character.Humanoid.SeatPart
		for i,v in pairs(carParts) do
			if v:IsA("BasePart") then
				v.CanCollide = true
			end
		end
	end
	
	function useCommand.admin()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				Adm[#Adm+1] = target.Name
				updatesaves()
				opx("-","Added "..target.Name.." to admins, please re-execute")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.robloxversion()
		opx("-","Roblox is on version: "..version().." - ".._VERSION)
	end
	
	function useCommand.unadmin()
		if arguments[2] then
			for i,v in pairs(Adm) do
				if arguments[2] == Adm[i] then
					table.remove(Adm[i])
					updatesaves()
				end
			end
			opx("-","Removed that player from admins, please re-execute")
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.admins()
		xAdm = #Adm.." | "
		for i,v in pairs(Adm) do
			xAdm = xAdm..Adm[i]..", "
		end
		opx("-","Listed admins")
		opxL("Admins",xAdm)
	end
	
	function useCommand.adminclr()
		Adm = {}
		updatesaves()
		opx("-","Cleared all admins, please re-execute")
	end
	
	ManageHolderHotkey = Instance.new("Frame", getParent)
	MangeScrollHotkey = Instance.new("ScrollingFrame", getParent)
	BtnAddHotkey = Instance.new("TextButton", getParent)
	BtnClearHotkey = Instance.new("TextButton", getParent)
	ManageTitleHotkey = Instance.new("TextLabel", getParent)
	SlideOutHotkey = Instance.new("Frame", getParent)
	Edit1Hotkey = Instance.new("TextBox", getParent)
	Edit2Hotkey = Instance.new("TextBox", getParent)
	Edit3Hotkey = Instance.new("TextBox", getParent)
	TitleSlideHotkey = Instance.new("TextLabel", getParent)
	CancelBtnHotkey = Instance.new("TextButton", getParent)
	ApplyBtnHotkey = Instance.new("TextButton", getParent)
	BtnExitHotkey = Instance.new("TextButton", getParent)
	
	ManageHolderHotkey.Name = "ManageHolderHotkey"
	ManageHolderHotkey.Parent = Unnamed
	ManageHolderHotkey.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
	ManageHolderHotkey.BackgroundTransparency = -0.010
	ManageHolderHotkey.BorderSizePixel = 0
	ManageHolderHotkey.Position = UDim2.new(0.33610791, 0, 0.279678553, 0)
	ManageHolderHotkey.Size = UDim2.new(0, 424, 0, 294)
	ManageHolderHotkey.Active = true
	createDrag(ManageHolderHotkey)
	ManageHolderHotkey.Visible = false
	
	MangeScrollHotkey.Name = "MangeScrollHotkey"
	MangeScrollHotkey.Parent = ManageHolderHotkey
	MangeScrollHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	MangeScrollHotkey.BorderSizePixel = 0
	MangeScrollHotkey.Position = UDim2.new(0.0268278271, 0, 0.10493198, 0)
	MangeScrollHotkey.Size = UDim2.new(0, 401, 0, 214)
	
	function Template1(name,entry)
		local TemplateFrame = Instance.new("Frame", getParent)
		local TemplateName = Instance.new("TextLabel", getParent)
		local TemplateBtnRemove = Instance.new("TextButton", getParent)
		local TemplateBtnAdd = Instance.new("TextButton", getParent)
		local alls2 = 5
		for i,v in pairs(MangeScrollHotkey:GetChildren()) do
			if v then
				alls2 = v.Size.Y.Offset + alls2+5
			end
			if not v then
				alls2 = 5
			end
		end
		TemplateFrame.Name = name
		TemplateFrame.Parent = MangeScrollHotkey
		TemplateFrame.BackgroundColor3 = Color3.fromRGB(77, 77, 77)
		TemplateFrame.BorderSizePixel = 0
		TemplateFrame.Position = UDim2.new(-1,0,0,alls2)
		TemplateFrame.Size = UDim2.new(0, 368, 0, 19)
		
		TemplateName.Name = "TemplateName"
		TemplateName.Parent = TemplateFrame
		TemplateName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.BackgroundTransparency = 1.000
		TemplateName.BorderSizePixel = 0
		TemplateName.Position = UDim2.new(0.0231884252, 0, 0, 0)
		TemplateName.Size = UDim2.new(0, 191, 0, 19)
		TemplateName.Font = Enum.Font.GothamBlack
		TemplateName.Text = name.."|"..entry
		TemplateName.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateName.TextSize = 14.000
		TemplateName.TextXAlignment = Enum.TextXAlignment.Left
		
		TemplateBtnRemove.Name = "TemplateBtnRemove"
		TemplateBtnRemove.Parent = TemplateFrame
		TemplateBtnRemove.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnRemove.BackgroundTransparency = 0.700
		TemplateBtnRemove.BorderSizePixel = 0
		TemplateBtnRemove.Position = UDim2.new(0.859420359, 0, 0, 0)
		TemplateBtnRemove.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnRemove.Font = Enum.Font.Gotham
		TemplateBtnRemove.Text = "Remove"
		TemplateBtnRemove.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnRemove.TextSize = 12.000
		TemplateBtnRemove.MouseButton1Down:Connect(function()
			table.remove(hkBinds,entry)
			TemplateBtnRemove.Parent:Destroy()
			updatesaves()
		end)
		
		TemplateBtnAdd.Name = "TemplateBtnAdd"
		TemplateBtnAdd.Parent = TemplateFrame
		TemplateBtnAdd.BackgroundColor3 = Color3.fromRGB(176, 176, 176)
		TemplateBtnAdd.BackgroundTransparency = 0.700
		TemplateBtnAdd.BorderSizePixel = 0
		TemplateBtnAdd.Position = UDim2.new(0.699094296, 0, 0, 0)
		TemplateBtnAdd.Size = UDim2.new(0, 51, 0, 19)
		TemplateBtnAdd.Font = Enum.Font.Gotham
		TemplateBtnAdd.Text = "Edit"
		TemplateBtnAdd.TextColor3 = Color3.fromRGB(255, 255, 255)
		TemplateBtnAdd.TextSize = 12.000
		TemplateBtnAdd.MouseButton1Down:Connect(function()
			SlideOutHotkey.Visible = true
			SlideOutHotkey:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
			CurrentEdit = entry
			TitleSlideHotkey.Text = hkBinds[entry].C
			updatesaves()
		end)
		
		TemplateFrame:TweenPosition(UDim2.new(0,3,0,alls2), 'In', 'Quint', 0.5)
	end
	
	BtnAddHotkey.Name = "BtnAddHotkey"
	BtnAddHotkey.Parent = ManageHolderHotkey
	BtnAddHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnAddHotkey.BorderSizePixel = 0
	BtnAddHotkey.Position = UDim2.new(0.026827829, 0, 0.864668369, 0)
	BtnAddHotkey.Size = UDim2.new(0, 85, 0, 33)
	BtnAddHotkey.Font = Enum.Font.Gotham
	BtnAddHotkey.Text = "Add"
	BtnAddHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnAddHotkey.TextSize = 14.000
	BtnAddHotkey.MouseButton1Down:Connect(function()
		SlideOutHotkey.Visible = true
		SlideOutHotkey:TweenSize(UDim2.new(0, 215, 0, 294), 'In', 'Quint', 0.5)
		hkBinds[#hkBinds+1] = {K = "N/A", C = "Unnamed"}
		CurrentEdit = #hkBinds
		TitleSlideHotkey.Text = hkBinds[#hkBinds].C
		Template1(hkBinds[#hkBinds].C,#hkBinds)
		updatesaves()
	end)
	
	BtnClearHotkey.Name = "BtnClearHotkey"
	BtnClearHotkey.Parent = ManageHolderHotkey
	BtnClearHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnClearHotkey.BorderSizePixel = 0
	BtnClearHotkey.Position = UDim2.new(0.244457483, 0, 0.864668369, 0)
	BtnClearHotkey.Size = UDim2.new(0, 85, 0, 33)
	BtnClearHotkey.Font = Enum.Font.Gotham
	BtnClearHotkey.Text = "Clear"
	BtnClearHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnClearHotkey.TextSize = 14.000
	BtnClearHotkey.MouseButton1Down:Connect(function()
		MangeScrollHotkey:ClearAllChildren()
		hkBinds = {}
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		SlideOutHotkey:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)
	
	ManageTitleHotkey.Name = "ManageTitleHotkey"
	ManageTitleHotkey.Parent = ManageHolderHotkey
	ManageTitleHotkey.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleHotkey.BackgroundTransparency = 1.000
	ManageTitleHotkey.Position = UDim2.new(0.263266504, 0, 0.00765306223, 0)
	ManageTitleHotkey.Size = UDim2.new(0, 200, 0, 32)
	ManageTitleHotkey.Font = Enum.Font.GothamSemibold
	ManageTitleHotkey.Text = "CMD-X Hotkey MANAGER"
	ManageTitleHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	ManageTitleHotkey.TextSize = 14.000
	
	SlideOutHotkey.Name = "SlideOutHotkey"
	SlideOutHotkey.Parent = ManageHolderHotkey
	SlideOutHotkey.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	SlideOutHotkey.BackgroundTransparency = 0.500
	SlideOutHotkey.BorderSizePixel = 0
	SlideOutHotkey.Position = UDim2.new(-0.507332683, 0, 0, 0)
	SlideOutHotkey.Size = UDim2.new(0, 0, 0, 294)
	SlideOutHotkey.Visible = false
	
	Edit1Hotkey.Name = "Edit1Hotkey"
	Edit1Hotkey.Parent = SlideOutHotkey
	Edit1Hotkey.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit1Hotkey.BorderSizePixel = 0
	Edit1Hotkey.Position = UDim2.new(0.0325581394, 0, 0.0850340128, 0)
	Edit1Hotkey.Size = UDim2.new(0, 200, 0, 26)
	Edit1Hotkey.Font = Enum.Font.Gotham
	Edit1Hotkey.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit1Hotkey.PlaceholderText = "Enter key here"
	Edit1Hotkey.Text = ""
	Edit1Hotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit1Hotkey.TextSize = 14.000
	
	Edit2Hotkey.Name = "Edit2Hotkey"
	Edit2Hotkey.Parent = SlideOutHotkey
	Edit2Hotkey.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit2Hotkey.BorderSizePixel = 0
	Edit2Hotkey.Position = UDim2.new(0.0325581394, 0, 0.204081625, 0)
	Edit2Hotkey.Size = UDim2.new(0, 200, 0, 26)
	Edit2Hotkey.Font = Enum.Font.Gotham
	Edit2Hotkey.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit2Hotkey.PlaceholderText = "Enter command here"
	Edit2Hotkey.Text = ""
	Edit2Hotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit2Hotkey.TextSize = 14.000
	
	Edit3Hotkey.Name = "Edit3Hotkey"
	Edit3Hotkey.Parent = SlideOutHotkey
	Edit3Hotkey.BackgroundColor3 = Color3.fromRGB(71, 71, 71)
	Edit3Hotkey.BorderSizePixel = 0
	Edit3Hotkey.Position = UDim2.new(0.0325581394, 0, 0.31292516, 0)
	Edit3Hotkey.Size = UDim2.new(0, 200, 0, 26)
	Edit3Hotkey.Font = Enum.Font.Gotham
	Edit3Hotkey.PlaceholderColor3 = Color3.fromRGB(230, 230, 230)
	Edit3Hotkey.PlaceholderText = "Enter ... here"
	Edit3Hotkey.Text = ""
	Edit3Hotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	Edit3Hotkey.TextSize = 14.000
	
	TitleSlideHotkey.Name = "TitleSlideHotkey"
	TitleSlideHotkey.Parent = SlideOutHotkey
	TitleSlideHotkey.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideHotkey.BackgroundTransparency = 1.000
	TitleSlideHotkey.Position = UDim2.new(0.0307083577, 0, -0.0161564611, 0)
	TitleSlideHotkey.Size = UDim2.new(0, 200, 0, 32)
	TitleSlideHotkey.Font = Enum.Font.GothamSemibold
	TitleSlideHotkey.Text = "..."
	TitleSlideHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	TitleSlideHotkey.TextSize = 14.000
	
	CancelBtnHotkey.Name = "CancelBtnHotkey"
	CancelBtnHotkey.Parent = SlideOutHotkey
	CancelBtnHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	CancelBtnHotkey.BorderSizePixel = 0
	CancelBtnHotkey.Position = UDim2.new(0.561230242, 0, 0.442899674, 0)
	CancelBtnHotkey.Size = UDim2.new(0, 85, 0, 33)
	CancelBtnHotkey.Font = Enum.Font.Gotham
	CancelBtnHotkey.Text = "Cancel"
	CancelBtnHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	CancelBtnHotkey.TextSize = 14.000
	CancelBtnHotkey.MouseButton1Down:Connect(function()
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		CurrentEdit = ""
	end)
	
	function MakeChanges(title,new)
		for i,v in pairs(MangeScrollHotkey:GetChildren()) do
			if v.Name == title then
				v.Name = new
				xText = v.TemplateName.Text:split("|")
				v.TemplateName.Text = new.."|"..xText[2]
			end
		end
	end
	
	ApplyBtnHotkey.Name = "ApplyBtnHotkey"
	ApplyBtnHotkey.Parent = SlideOutHotkey
	ApplyBtnHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	ApplyBtnHotkey.BorderSizePixel = 0
	ApplyBtnHotkey.Position = UDim2.new(0.0318313837, 0, 0.442899674, 0)
	ApplyBtnHotkey.Size = UDim2.new(0, 85, 0, 33)
	ApplyBtnHotkey.Font = Enum.Font.Gotham
	ApplyBtnHotkey.Text = "Apply"
	ApplyBtnHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	ApplyBtnHotkey.TextSize = 14.000
	ApplyBtnHotkey.MouseButton1Down:Connect(function()
		hkBinds[CurrentEdit] = {K = Edit1Hotkey.Text, C = Edit2Hotkey.Text}
		MakeChanges(TitleSlideHotkey.Text,Edit2Hotkey.Text)
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		SlideOutHotkey:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)
	
	BtnExitHotkey.Name = "BtnExitHotkey"
	BtnExitHotkey.Parent = ManageHolderHotkey
	BtnExitHotkey.BackgroundColor3 = Color3.fromRGB(58, 58, 58)
	BtnExitHotkey.BackgroundTransparency = 1.000
	BtnExitHotkey.BorderSizePixel = 0
	BtnExitHotkey.Position = UDim2.new(0.950231194, 0, -0.00778063387, 0)
	BtnExitHotkey.Size = UDim2.new(0, 28, 0, 26)
	BtnExitHotkey.Font = Enum.Font.GothamBold
	BtnExitHotkey.Text = "X"
	BtnExitHotkey.TextColor3 = Color3.fromRGB(255, 255, 255)
	BtnExitHotkey.TextSize = 14.000
	BtnExitHotkey.MouseButton1Down:Connect(function()
		for i,v in pairs(hkBinds) do
			if hkBinds.C == "Unnamed" then
				table.remove(hkBinds,i)
			end
		end
		ManageHolderHotkey.Visible = false
		Edit1Hotkey.Text = ""
		Edit2Hotkey.Text = ""
		Edit3Hotkey.Text = ""
		SlideOutHotkey.Visible = false
		SlideOutHotkey:TweenSize(UDim2.new(0, 0, 0, 294), 'Out', 'Quint', 0.5)
		CurrentEdit = ""
		updatesaves()
	end)
	
	function useCommand.hotkeynew()
		if arguments[3] then
			arguments[2] = arguments[2]:lower()
			hkBinds[#hkBinds+1] = {K = arguments[2], C = arguments[3]}
			updatesaves()
			opx("-","Added "..arguments[3].." to hotkeys")
		else
			opx("*","3 arguments are needed for this command!")
		end
	end
	
	function useCommand.hotkeys()
		opx("-","Hotkeys opened")
		MangeScrollHotkey:ClearAllChildren()
		ManageHolderHotkey.Visible = true
		for i,v in pairs(hkBinds) do
			Template1(hkBinds[i].C,i)
		end
	end
	
	function useCommand.listhotkeys()
		xHK = #hkBinds.." | "
		for i = 1,#hkBinds do
			xHK = xHK..hkBinds[i].K.." - "..hkBinds[i].C..", "
		end
		opx("-","Listed hotkeys")
		opxL("Hotkeys",xHK)
	end
	
	function useCommand.hotkeydel()
		if arguments[2] then
			for i = 1,#hkBinds do
				if hkBinds[i].C == arguments[2] then
					table.remove(hkBinds[i])
					updatesaves()
				end
			end
			opx("-","Removed "..arguments[2].." from hotkeys")
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.hotkeysclr()
		hkBinds = {}
		updatesaves()
		opx("-","Cleared all hotkeys")
	end
	
	function useCommand.changestyle()
		if arguments[2] then
			opx("-","Style set to "..arguments[2])
			for i,v in pairs(Unnamed.holder.output:GetChildren()) do
				if v:IsA("ImageLabel") then
					output1.Parent = output
					output2.Parent = output
					output3.Parent = output
					output4.Parent = output
					output5.Parent = output
					output6.Parent = output
					output7.Parent = output
					output8.Parent = output
					output9.Parent = output
					v:Destroy()
				end
			end
			entry.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
			output1.TextColor3 = Color3.fromRGB(177, 177, 177)
			output2.TextColor3 = Color3.fromRGB(177, 177, 177)
			output3.TextColor3 = Color3.fromRGB(177, 177, 177)
			output4.TextColor3 = Color3.fromRGB(177, 177, 177)
			output5.TextColor3 = Color3.fromRGB(177, 177, 177)
			output6.TextColor3 = Color3.fromRGB(177, 177, 177)
			output7.TextColor3 = Color3.fromRGB(177, 177, 177)
			output8.TextColor3 = Color3.fromRGB(177, 177, 177)
			output9.TextColor3 = Color3.fromRGB(177, 177, 177)
			cmd.TextColor3 = Color3.fromRGB(177,177,177)
			cmd.PlaceholderColor3 = Color3.fromRGB(177,177,177)
			if arguments[2] == "default" or arguments[2] == "rounded" then
				output.Style = Enum.FrameStyle.RobloxRound
				dStyle = "rounded"
				updatesaves()
			elseif arguments[2] == "bg" then
				function getAsset(ID)
					return("http://www.roblox.com/Thumbs/Asset.ashx?format=png&width=420&height=420&assetId="..ID)
				end
				output.Style = Enum.FrameStyle.Custom
				dStyle = "bg "..arguments[3]
				updatesaves()
				local iBG = Instance.new("ImageLabel", output)
				iBG.BackgroundColor3 = Color3.fromRGB(163,182,165)
				iBG.BackgroundTransparency = 1
				iBG.BorderSizePixel = 0
				iBG.Size = UDim2.new(0, 525, 0, 253)
				output1.Parent = iBG
				output2.Parent = iBG
				output3.Parent = iBG
				output4.Parent = iBG
				output5.Parent = iBG
				output6.Parent = iBG
				output7.Parent = iBG
				output8.Parent = iBG
				output9.Parent = iBG
				iBG.Image = getAsset(arguments[3])
				iBG.ScaleType = Enum.ScaleType.Crop
			elseif arguments[2] == "squared" then
				output.Style = Enum.FrameStyle.RobloxSquare
				dStyle = "squared"
				updatesaves()
			elseif arguments[2] == "blended" then
				output.Style = Enum.FrameStyle.Custom
				dStyle = "blended"
				updatesaves()
			elseif arguments[2] == "smalled" then
				output.Style = Enum.FrameStyle.DropShadow
				dStyle = "smalled"
				updatesaves()
			elseif arguments[2] == "light" or arguments[2] == "lightmode" then
				entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
				output1.TextColor3 = Color3.fromRGB(1, 1, 1)
				output2.TextColor3 = Color3.fromRGB(1, 1, 1)
				output3.TextColor3 = Color3.fromRGB(1, 1, 1)
				output4.TextColor3 = Color3.fromRGB(1, 1, 1)
				output5.TextColor3 = Color3.fromRGB(1, 1, 1)
				output6.TextColor3 = Color3.fromRGB(1, 1, 1)
				output7.TextColor3 = Color3.fromRGB(1, 1, 1)
				output8.TextColor3 = Color3.fromRGB(1, 1, 1)
				output9.TextColor3 = Color3.fromRGB(1, 1, 1)
				cmd.TextColor3 = Color3.fromRGB(1,1,1)
				cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
				if arguments[3] then
					if arguments[3] == "blue" then
						output.Style = Enum.FrameStyle.ChatBlue
						dStyle = "lightblue"
						updatesaves()
					elseif arguments[3] == "green" then
						output.Style = Enum.FrameStyle.ChatGreen
						dStyle = "lightgreen"
						updatesaves()
					elseif arguments[3] == "red" then
						output.Style = Enum.FrameStyle.ChatRed
						dStyle = "lightred"
						updatesaves()
					else
						output.Style = Enum.FrameStyle.ChatBlue
						dStyle = "lightblue"
						updatesaves()
					end
				else
					output.Style = Enum.FrameStyle.ChatBlue
					dStyle = "lightblue"
					updatesaves()
				end
			else
				loadstring(game:HttpGet((arguments[2]),true))()
				dStyle = arguments[2]
				updatesaves()
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.csinfo()
		opx("-","Listed info about changestyle")
		opxL("Change-style Info","For the default theme/ rounded theme type in: cs rounded\
			For a custom background type in: cs bg (id)\
			For a squared theme type in: cs squared\
			For a blended theme type in: cs blended\
			For a smalled theme type in: cs smalled\
			For a lightmode theme type in: cs light(blue/green/red)\
			For a custom theme type in: cs (raw link)")
	end
	
	function useCommand.chat()
		if arguments[2] then
			local chatString = getstring(2)
			sayremote:FireServer(chatString, "All")
			opx("-","Said message in chat")
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.curvetools()
		local currentTool = cmdlp.Character:FindFirstChildOfClass("Tool")
		currentTool.Parent = cmdlp.Backpack
		Number = 1
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			if v.Name == currentTool.Name then
				v.GripPos = Vector3.new(0,0,0)
				v.GripRight = Vector3.new(0,0,0)
				v.GripPos = Vector3.new(0,-Number,Number)
				v.GripRight = Vector3.new(math.rad(10+-Number),math.rad(Number),math.rad(90+-Number))
				Number = Number + 1.4
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Now curving tools")
	end
	
	function useCommand.spiraltools()
		local currentTool = cmdlp.Character:FindFirstChildOfClass("Tool")
		currentTool.Parent = cmdlp.Backpack
		Number = 1
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			if v.Name == currentTool.Name then
				v.GripPos = Vector3.new(0,0,0)
				v.GripRight = Vector3.new(0,0,0)
				v.GripPos = Vector3.new(0,Number,-Number)
				v.GripRight = Vector3.new(math.rad(Number),math.rad(180/Number),math.rad(180/Number))
				Number = Number + 1.4
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Now spiraling tools")
	end
	
	function useCommand.parts()
		if arguments[2] then
			opx("-","Now listing all parts in "..arguments[2])
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == arguments[2] then
					xName = v
				end
			end
			local xParts = #xName:GetDescendants().." | "
			for i,v in pairs(xName:GetDescendants()) do
				xParts = xParts..v.Name..", "
			end
			opxL("Parts",xParts)
		else
			opx("-","Now listing all parts")
			local xParts = #workspace:GetDescendants().." | "
			for i,v in pairs(workspace:GetDescendants()) do
				xParts = xParts..v.Name..", "
			end
			opxL("Parts",xParts)
		end
	end
	
	function useCommand.toggleconfly()
		if arguments[2] then
			if arguments[2] == "on" then
				conFly = true
				updatesaves()
				opx("-","Continuous fly was toggled to on")
			elseif arguments[2] == "off" then
				conFly = false
				updatesaves()
				opx("-","Continuous fly was toggled to off")
			else
				opx("*","The second argument must contain 'on' or 'off'")
			end
		else
			opx("*","2 arguments are required for this command")
		end
	end
	
	local amuteall = false
	function useCommand.audioglitch()
		if arguments[3] then
			if arguments[2] == "others" then
				opx("-","Audio glitch others enabled")
				amuteall = true
				repeat wait(1)
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") and v.Parent.Parent.Parent.Name ~= cmdlp.Name then
							v.TimePosition = arguments[3]
						end
					end
				until amuteall == false
			elseif arguments[2] == "everyone" or arguments[2] == "all" then
				opx("-","Audio glitch all enabled")
				amuteall = true
				repeat wait(1)
					for i,v in pairs(workspace:GetDescendants()) do
						if v:IsA("Sound") then
							v.TimePosition = arguments[3]
						end
					end
				until amuteall == false
			else
				target = findplr(arguments[2])
				if target then
					opx("-","Audio glitch "..target.Name.." enabled")
					amuteall = true
					repeat wait(1)
						for i,v in pairs(workspace:GetDescendants()) do
							if v:IsA("Sound") and v.Parent.Parent.Parent.Name == target.Name then
								v.TimePosition = arguments[3]
							end
						end
					until amuteall == false
				else
					opx("*","Player does not exist!")
				end
			end
		else
			opx("*","3 arguments are needed for this command!")
		end
	end
	
	function useCommand.unaudioglitch()
		opx("-","Audio glitch all disabled")
		amuteall = false
	end
	
	local chatlag = false
	function useCommand.lagchat()
		opx("-","Now lagging chat")
		chatlag = true
		while chatlag do
			wait()
			sayremote:FireServer("_______________________________________", "All")
		end
	end
	
	function useCommand.clearchat()
		opx("-","Cleared chat")
		for i = 1,3 do
			sayremote:FireServer(string.rep("â¸»", 200), "All")
		end
	end
	
	function useCommand.funfact()
		local URL = ("https://uselessfacts.jsph.pl/random.json?language=en")
		local fuck = game:HttpGet(URL)
		local Http = game:GetService("HttpService"):JSONDecode(fuck)
		opx("-",Http.text)
		sayremote:FireServer(Http.text,"All")
	end
	
	function useCommand.trollchat()
		trollChat = {
			"Roses are red, silent as a mouse, your door is unlocked, I'm inside your house",
			"my dads's uncle owens fortnite his gonna get you banned ###### noob",
			"Ok that one was funny, say it again it gets funnier each time you say it.",
			"nvm just found out ur a girl",
			"I have more chromosomes than you wetard.",
			"What's a _G statement?",
			"Can somebody give me robux my dad is builderman!",
			"Can someone please buy my shirt from my group?",
			"Turn down the music please! My mom said so.",
			"My favorite type of ice cream is glue.",
			"May I join you guys?",
			"What's a GUI?",
			"I'm level 126 on Clockwork's Level Calculator",
			"This game is honestly so bad, don't know why people play it.",
			"Anyone else play Roblox here?",
			"I'm new, any help?",
			"Can you give me Robux, please?",
			"Please stop trolling!",
			"You aren't cool stop trying to kill me.",
			"Why are you so mean?",
			"Guys, kill the bacon for free Cheez-Its.",
			"Why do people even buy headless? It's really useless!",
			"Stop!!!!!!!",
			"_____________________",
			"Please leave me alone?",
			"Sources say David Baszucki is looking at a 20 year sentence for fiddling with kids.",
			"Why do people even hate on Fortnite?",
			"I heard Erik Cassel has been working on an update for 7 years.",
			"Welcome to Roblox!",
			"I'm considering picking up Roblox as a long term job.",
			"Club Iris's owner, SoulJem is adding more backdoors in his game today.",
			"I use JJSploit, It's way better than Synapse X.",
			"Why am I getting so much attention?",
			"Everyone hates me. :(",
			"Flamingo is a good youtuber he is my favourite, YO TENGO!",
			"Why is no one talking to me? I'm famous you know?",
			"You are all poor, I have 10 robux.",
			"I have 100 followers, you are a nobody.",
			"I heard maplestick feeds exploiters with his hats, is this true?",
			"Removing TIX was a good idea like that thing was so useless, XD.",
			"What is TIX? xd? Sounds stupid XD.",
			"I heard InceptionTime is in the gzxy bar right now.",
			"Guys use the weakest weapons, it raises your chance to deal 100 damage.",
			"Guys is Synapse X a virus?",
			"Hello. Im Am. Play. Roblox,",
			"Hi Youtube today we are playing this game.",
			"Poor people are the bane of this game, pls nerf.",
			"I am on the leaderboards of this game, everyone here is bad.",
			"My dads goldfish works for Roblox.",
			"Guys how do I fake cxncer to get a Sinister Valk?",
			"Why are you bald? Are you planning to get Sinister Valk?",
			"Guys my bed time is in 10 minutes, please hurry up.",
			"Why are you taking so long?",
			"Can you be quiet? Stop talking.",
			"What is Builders Club XD? It sounds stupid tbh.",
			"I have the best score on this game, plus I know the owner.",
			"Guys you can all leave you are useless I can do this on my own.",
			"This game is pretty bad tbh XD, I could make better.",
			"You have trash scripts XD I use JJSploit and invisible fling.",
			"......... bad. xd",
			"I'm considering building a game about breaking out of a jail and robbing stuff, should I?",
			"I'm considering making a game about breaking bones, should I?",
			"I'm considering making Roblox streaming a full time job, I got a 2$ donation.",
			"I use UltimateDLLInjector, what DLL's do you use? Can you send me them?",
			"All old games are bad, why would you even play them they are glitchy.",
			"Old robloxians, are stupid I bet they can't even play Bloxburg as well as me",
			"I love DenisDaily I want to meet him."
		}
		local value = math.random(1,#trollChat)
		local picked_value = trollChat[value]
		opx("-","You troll chatted")
		sayremote:FireServer(tostring(picked_value), "All")
	end
	
	function useCommand.unbodypositionwalkspeed()
		bodyPos = false
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v.Name == "rocket" then
				v:Destroy()
			end
		end
		opx("-","BodyPositionWalkSpeed disabled")
	end
	
	function useCommand.removegears()
		opx("-","Removed gears")
		for i,v in pairs(cmdlp.Backpack:GetChildren()) do
			if v:IsA("Tool") then
				v:Destroy()
			end
		end
	end
	
	function useCommand.unclicktp()
		opx("-","No longer clicktping")
		clicktps = false
	end
	
	for i,v in pairs(cmdp:GetPlayers()) do
		v.Chatted:Connect(function(t)
			if t:sub(1,19) == "SCHAT/console/type/" then
				local msg = t:sub(20,#t)
				CreateSCLabel("USER",v.Name..": "..msg)
			end
		end)
	end
	
	cmdp.PlayerAdded:Connect(function(v)
		v.Chatted:Connect(function(t)
			if t:sub(1,19) == "SCHAT/console/type/" then
				local msg = t:sub(20,#t)
				if t:sub(1,19) == "SCHAT/console/type/" then
					local msg = t:sub(20,#t)
					CreateSCLabel("USER",v.Name..": "..msg)
				end
			end
		end)
	end)
	
	function useCommand.scriptusers()
		if sDetect then
			opx("-","This may take a while...")
			local xUsing = ""
			local xUsingCount = 0
			for i,v in pairs(cmdp:GetPlayers()) do
				wait(.2)
				local check1 = v.Character:FindFirstChild("Head")
				if check1 then
					local check2 = check1:FindFirstChild(AntiCheat.Attachment)
					if not check2 then
						local v = v.Name
						if Devs[v] then
							xUsing = xUsing.."["..Devs[v]:upper().."]"..v.."\n"
						elseif Donors[v] then
							xUsing = xUsing.."["..Tier[Donors[v]].SCHAT.."]"..v.."\n"
						else
							xUsing = xUsing.."[USER]"..v.."\n"
						end
						xUsingCount = xUsingCount + 1
					end
				end
			end
			opx("-","Now showing users using CMD-X")
			opxL("Using ["..xUsingCount.."]",xUsing)
		else
			opx("*","Turn noshow off to see other users")
		end
	end
	
	function useCommand.cleanhats()
		opx("-","Cleaning up any hats...")
		for _,v in pairs(cmdlp.Character:GetChildren()) do if v:IsA("Accessory") then v:Destroy() end end
		local hatConnection = cmdlp.Character.ChildAdded:Connect(function(c)
			if c:IsA("Accessory") then
				game:GetService("RunService").Heartbeat:wait()
				c:Destroy()
			end
		end)
		while workspace:FindFirstChildOfClass("Accessory") do
			for _,v in pairs(workspace:GetChildren()) do
				if v:IsA("Accessory") and v:FindFirstChild("Handle") then
					firetouchinterest(cmdlp.Character.HumanoidRootPart, v.Handle, 0)
					firetouchinterest(cmdlp.Character.HumanoidRootPart, v.Handle, 1)
				end
			end
			game:GetService("RunService").Heartbeat:wait()
		end
		hatConnection:Disconnect()
		opx("-","All hats cleaned")
	end
	
	function useCommand.mentions()
		if arguments[2] == "on" then
			mentions = true
			updatesaves()
			opx("-","Turned on mentions")
		elseif arguments[2] == "off" then
			mentions = false
			updatesaves()
			opx("-","Turned off mentions")
		else
			opx("*","Not a valid preset!")
		end
	end
	
	function useCommand.schatbp()
		opx("*","No longer used")
	end
	
	function useCommand.whisperlogs()
		logsEnabled = false
		pLogs = false
		opx("-","Whipser-Logs have been loaded")
		wLogs = true
		logsholding.Visible = true
	end
	
	CurrentPLog = {}
	
	function useCommand.playerlogs()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				logsEnabled = false
				wLogs = false
				opx("-","Player-Logs have been loaded")
				table.insert(CurrentPLog,target)
				pLogs = true
				logsholding.Visible = true
				target.Chatted:Connect(function(msg)
					if pLogs == true then
						CreateLabel(target.Name,msg)
					end
				end)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.scriptchat()
		logsholding2.Visible = true
		opx("-","Script chat is now active")
	end
	
	function useCommand.unswimwalk()
		workspace.Gravity = 198
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		cmdlp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
		opx("-","No longer swimming")
	end
	
	function useCommand.fakelag()
		opx("-","Now fake lagging, do anything you want")
		settings():GetService("NetworkSettings").IncommingReplicationLag = 100
	end
	
	function useCommand.unfakelag()
		opx("-","No longer fake lagging")
		settings():GetService("NetworkSettings").IncommingReplicationLag = 0
	end
	
	function useCommand.hitboxes()
		opx("-","Now showing hitboxes")
		settings():GetService("RenderSettings").ShowBoundingBoxes = true
	end
	
	function useCommand.unhitboxes()
		opx("-","No longer showing hitboxes")
		settings():GetService("RenderSettings").ShowBoundingBoxes = false
	end
	
	function useCommand.animdata()
		opx("-","Now showing animation data")
		settings():GetService("NetworkSettings").ShowActiveAnimationAsset = true
	end
	
	function useCommand.unanimdata()
		opx("-","No longer showing animation data")
		settings():GetService("NetworkSettings").ShowActiveAnimationAsset = false
	end
	
	function useCommand.unlagchat()
		opx("-","No longer lagging chat")
		chatlag = false
	end
	
	function useCommand.sniper()
		opx("-","If you had a sniper then you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(0, -1, 0)
				tool.GripRight = Vector3.new(-0.005, 0.004, -1)
				tool.GripUp = Vector3.new(0.758, 0.653, -0.001)
				tool.GripForward = Vector3.new(-0.653, 0.758, 0.006) 
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end
	
	function useCommand.rocket()
		opx("-","If you had a rocket then you are now holding it")
		for _, hat in pairs(cmdlp.Character.Humanoid:GetAccessories()) do
			if hat.Handle ~= nil then
				local tool = Instance.new("Tool", cmdlp.Backpack)
				tool.Name = hat.Name
				tool.GripPos = Vector3.new(1, 0, 0)
				tool.GripRight = Vector3.new(-0.245, 0, 0.969)
				tool.GripUp = Vector3.new(-0.749, 0.634, -0.19)
				tool.GripForward = Vector3.new(0.615, 0.773, 0.156)
				local hathandle = hat.Handle
				hathandle:FindFirstChildOfClass("Weld"):Destroy()
				hathandle.Parent = tool
				hathandle.Massless = true
			end
		end
	end
	
	function useCommand.clip()
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
		opx("-","Noclip disabled")
	end
	
	function useCommand.closeorbit()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local rp = Instance.new("RocketPropulsion")
				rp.Parent = cmdlp.Character.HumanoidRootPart
				rp.CartoonFactor = 1
				rp.MaxThrust = 5000
				rp.MaxSpeed = 100
				rp.ThrustP = 5000
				rp.Name = "OrbitalDestruction"
				rp.Target = target.Character.HumanoidRootPart
				rp:Fire()
				cmdlp.Character.Humanoid.Sit = true
				opx("-","Now orbiting: "..target.Name)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.orbit()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Now orbiting: "..target.Name)
				local P = Instance.new("Part", target.Character)
				P.Transparency = 1
				P.Name = "ThePart"
				P.Size = Vector3.new(1.7,1.7,1.7)
				P.Massless = true
				P.CanCollide = false
				local W = Instance.new("Weld", P)
				W.Part1 = target.Character.HumanoidRootPart
				W.Part0 = P
				local sine = 0
				local change = 1
				local spin = 0
				local spin2 = 0
				local rp = Instance.new("RocketPropulsion")
				rp.Parent = cmdlp.Character.HumanoidRootPart
				rp.CartoonFactor = 1
				rp.MaxThrust = 5000
				rp.MaxSpeed = 100
				rp.ThrustP = 5000
				rp.Name = "OrbitalDestructionPart"
				rp.Target = target.Character.ThePart
				rp:Fire()
				cmdlp.Character.Humanoid.PlatformStand = true
				while true do
					game:GetService("RunService").RenderStepped:wait()
					sine = sine + change
					spin2 = spin2 + 0.6
					spin = spin + 1
					W.C0 = CFrame.new(7 * math.cos(20),-2 - 2 * math.sin(sine/10),7 * math.sin(20))*CFrame.Angles(math.rad(0),math.rad(spin),math.rad(0))
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are needed for this command!")
		end
	end
	
	function useCommand.unorbit()
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v.Name == "OrbitalDestructionPart" or v.Name == "OrbitalDestruction" then
				v:Destroy()
			end
		end
		cmdlp.Character.Humanoid.PlatformStand = false
		cmdlp.Character.Humanoid.Sit = false
		opx("-","Stopped orbiting")
	end
	
	function useCommand.suggestions()
		if arguments[2] == "on" then
			suggestions = true
			updatesaves()
			opx("-","Suggestions set to on")
		elseif arguments[2] == "off" then
			suggestions = false
			updatesaves()
			opx("-","Suggestions set to off")
		else
			opx("*","A valid preset is needed!")
		end
	end
	
	function useCommand.statistics()
		opx("-","Loaded CMD Statistics")
		Scrollingstats:ClearAllChildren()
		statholder.Visible = true
		for i,v in pairs(CMDStats) do
			if v.T ~= 0 then
				CreateStatLabel(i,v.T)
			end
		end
	end
	local bringc = false
	function useCommand.clientbring()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				bringc = true
				opx("-","Bringing "..target.Name.." on client.")
				while bringc do
					wait()
					if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
						target.Character.HumanoidRootPart.CFrame = cmdlp.Character.HumanoidRootPart.CFrame + cmdlp.Character.HumanoidRootPart.CFrame.lookVector * 2
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.unclientbring()
		bringc = false
		opx("-","Stopped client bringing")
	end
	
	function useCommand.clientfreeze()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Now client freezing "..target.Name)
				for i,v in pairs(target.Character:GetChildren()) do
					if v:IsA("BasePart") then
						v.Anchored = true
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.unclientfreeze()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","No longer client freezing "..target.Name)
				for i,v in pairs(target.Character:GetChildren()) do
					if v:IsA("BasePart") then
						v.Anchored = false
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.removefog()
		opx("-","Removed fog")
		cmdl.FogStart = 0
		cmdl.FogEnd = 9999999999999
	end
	
	local animSync = false
	function useCommand.animsync()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				opx("-","Now syncing with "..target.Name)
				target.Chatted:Connect(function(v)
					if v:sub(1,3) == "/e " or v:sub(1,3) == ".e" and animSync == true then
						animations = {
							Agree = 4841397952;
							Disagree = 4841401869;
							["Power Blast"] = 4841403964;
							Happy = 4841405708;
							Sad = 4841407203;
							["Bunny Hop"] = 4641985101;
							["Peanut Butter Jelly Dance"] = 4406555273;
							["Around Town"] = 3303391864;
							["Top Rock"] = 3361276673;
							Fashionable = 3333331310;
							Robot = 3338025566;
							Twirl = 3334968680;
							Jacks = 3338066331;
							TPose = 3338010159;
							Shy = 3337978742;
							Monkey = 3333499508;
							["Borock's Rage"] = 3236842542;
							["Ud'zal's Summoning"] = 3303161675;
							["Hype Dance"] = 3695333486;
							Godlike = 3337994105;
							Swoosh = 3361481910;
							Sneaky = 3334424322;
							["Side to Side"] = 3333136415;
							Greatest = 3338042785;
							Louder = 3338083565;
							Celebrate = 3338097973;
							Haha = 3337966527;
							["Get Out"] = 3333272779;
							Tree = 4049551434;
							Fishing = 3334832150;
							["Fast Hands"] = 4265701731;
							Y = 4349285876;
							Zombie = 4210116953;
							["Baby Dance"] = 4265725525;
							["Line Dance"] = 4049037604;
							Dizzy = 3361426436;
							Shuffle = 4349242221;
							["Dorky Dance"] = 4212455378;
							BodyBuilder = 3333387824;
							Idol = 4101966434;
							["Fancy Feet"] = 3333432454;
							Curtsy = 4555816777;
							["Air Dance"] = 4555782893;
							["Chicken Dance"] = 4841399916;
							Disagree = 4841401869;
							Sleep = 4686925579;
							["Hero Landing"] = 5104344710;
							Confused = 4940561610;
							Cower = 4940563117;
							Tantrum = 5104341999;
							Bored = 5230599789;
							Beckon = 5230598276;
							Hello = 3344650532;
							Salute = 3333474484;
							Stadium = 3338055167;
							Tilt = 3334538554;
							Point = 3344585679;
							Shrug = 3334392772;
						}
						for i,x in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
							x:Stop()
						end
						cmdlp.Character.Animate.Disabled = true
						for i,x in pairs(animations) do
							if v:sub(4,#v):lower() == i:lower() then
								local Anim = Instance.new("Animation")
								Anim.AnimationId = "rbxassetid://"..x
								local salute = cmdlp.Character.Humanoid:LoadAnimation(Anim)
								salute.Name = "AP"
								salute:Play()
								salute.Stopped:Connect(function()
									cmdlp.Character.Animate.Disabled = false
								end)
							end
						end
					end
				end)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.unanimsync()
		animSync = false
		opx("-","No longer syncing")
	end
	
	function useCommand.playercases()
		opx("-","Listed player cases")
		opxL("Player-cases","me - Chooses you\
			random - Chooses a random player\
			new - Chooses a player under the age of 30\
			old - Chooses a player over the age of 30\
			bacon - Chooses a player with a bacon hair\
			friend - Chooses a player that is friends with you\
			notfriend - Chooses a player that is not friends with you\
			ally - Chooses a player that is on the same team as you\
			enemy - Chooses a player that is not on the same team as you\
			near - Chooses a player that is close to you\
			far - Chooses a player that is not close to you\
			using - Chooses a player that is using CMD-X")
	end
	
	function useCommand.nomessages()
		if _G.connections["MessageGame"] then
			opx("*","NoMessages is already loaded!")
			return
		end
		opx("-","NoMessages is now on")
		_G.connections.MesssageGame = workspace.DescendantAdded:Connect(function(v) if v:IsA("Message") then v:Destroy() end end)
		_G.connections.MessagesHD = cmdlp.PlayerGui.HDAdminGUIs.MessageContainer.Messages.ChildAdded:Connect(function(v) v:Destroy() end)
	end
	
	function useCommand.yesmessages()
		if not _G.connections.MessageGame then
			opx("*","NoMessages is not already loaded!")
			return
		end
		opx("-","NoMessages is no longer on")
		_G.connections.MessageGame:Disconnect()
		_G.connections.MessageHD:Disconnect()
	end
	
	function useCommand.ppsize()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				local PPTable = {"Non-Existant","Microscopic","Tiny","Very Small","Small","Moderate","Average","Above Average","Big","Massive","Hugh Mungus","Gut Destroyer"}
				math.randomseed(target.UserId)
				local pickPP = math.random(1,#PPTable)
				opx("-",target.Name.." has a "..PPTable[pickPP].." sizePP")
				sayremote:FireServer(target.Name.." has a "..PPTable[pickPP].." sized sausage","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.gaysize()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				math.randomseed(target.UserId)
				local gayREAL = math.random(0,100)
				opx("-",target.Name.." is "..gayREAL.."% gay")
				sayremote:FireServer(target.Name.." is "..gayREAL.."% gay","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.matchmake()
		if arguments[3] then
			target = findplr(arguments[2])
			local target2 = findplr(arguments[3])
			if target and target2 then
				math.randomseed(target2.UserId + target.UserId)
				local matchREAL = math.random(0,100)
				opx("-",target.Name.." and "..target2.Name.." are a "..matchREAL.."% match")
				sayremote:FireServer(target.Name.." and "..target2.Name.." are a "..matchREAL.."% match","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","3 arguments are required for this command!")
		end
	end
	
	function useCommand.height()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				math.randomseed(target.UserId)
				local height1 = math.random(0,7)
				local height2 = math.random(0,10)
				opx("-",target.Name.." is "..height1.."'"..height2)
				sayremote:FireServer(target.Name.." is "..height1.."'"..height2,"All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	local deadRefresh = false
	function useCommand.refreshdead()
		deadRefresh = true
		opx("-","Refresh dead is now on")
		while deadRefresh do
			wait()
			DiedTPs = cmdlp.Character.HumanoidRootPart.CFrame
			if cmdlp.Character.Humanoid.Health == 0 then
				_G.connections.dRefresh = cmdlp.CharacterAdded:Connect(function(char)
					wait(2)
					cmdlp.Character.HumanoidRootPart.CFrame = DiedTPs
				end)
			end
		end
	end
	
	function useCommand.unrefreshdead()
		deadRefresh = false
		opx("-", "Refresh dead is now off")
	end
	
	function useCommand.god()
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
		opx("-","Godded character, may not work on some games")
	end
	
	function useCommand.ungod()
		opx("-","Ungodded character")
		cmdlp.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, true)
	end
	
	function useCommand.randomchat()
		local tbl1 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/1"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--english words
		local tbl2 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/2"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl1
		local tbl3 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/3"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl2
		local tbl4 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/4"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl3
		local tbl5 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/5"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl5
		local tbl6 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/6"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl4
		local tbl7 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/7"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl6
		local tbl8 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/8"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl7
		local tbl9 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/9"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl8
		local r1 = math.random(1,#tbl1)
		local r2 = math.random(1,#tbl2)
		local r3 = math.random(1,#tbl3)
		local r4 = math.random(1,#tbl4)
		local r5 = math.random(1,#tbl5)
		local r6 = math.random(1,#tbl6)
		local r7 = math.random(1,#tbl7)
		local r8 = math.random(1,#tbl8)
		local r9 = math.random(1,#tbl9)
		opx("-",tbl1[r1].." "..tbl2[r2].." "..tbl3[r3].." "..tbl4[r4].." "..tbl5[r5].." "..tbl6[r6].." "..tbl7[r7].." "..tbl8[r8].." "..tbl9[r9])
		cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(tbl1[r1].." "..tbl2[r2].." "..tbl3[r3].." "..tbl4[r4].." "..tbl5[r5].." "..tbl6[r6].." "..tbl7[r7].." "..tbl8[r8].." "..tbl9[r9],"All")
	end
	
	function useCommand.enablereset()
		opx("-","Force enabled reset button")
		game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
	end
	
	function useCommand.disablereset()
		opx("-","Force disabled reset button")
		game:GetService("StarterGui"):SetCore("ResetButtonCallback", false)
	end
	
	local looping = false
	function useCommand.loop()
		if arguments[2] then
			looping = true
			loopStat = getstring(2)
			perCmd = arguments[2]
			GoodNew = findCmd(perCmd)
			opx("-","Now looping that command")
			while looping do
				wait()
				arguments = loopStat:split(" ")
				useCommand[GoodNew]()
			end
		else
			opx("*","2 arguments are needed!")
		end
	end
	
	function useCommand.unloop()
		looping = false
		wait(.1)
		opx("-","No longer looping commands")
	end
	
	function useCommand.savetools()
		opx("-","Saved tools")
		for i,a in pairs(cmdlp.Backpack:GetDescendants()) do
			if a:IsA("Tool") then
				a.Parent = cmdlp.Character
				a.Parent = workspace
				a.Handle.Anchored = true
			end
		end
	end
	
	function useCommand.loadtools()
		opx("-","Loaded tools")
		for i,v in pairs(workspace:GetChildren()) do
			if v:IsA("Tool") and v.Handle.Anchored == true then
				v.Handle.Anchored = false
				v.Handle.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
			end
		end
	end
	
	function useCommand.hotkeyfly()
		if arguments[2] then
			hotkeyfly = arguments[2]
			updatesaves()
			opx("Hotkey set to "..arguments[2])
		else
			opx("A key is required")
		end
	end
	
	function useCommand.plague()
		if arguments[2] then
			opx("-","You started a plague!")
			cureFound = false
			plaguename = arguments[2] 
			if #cmdp:GetPlayers() > 6 then  
				for i,v in pairs(cmdp:GetPlayers()) do 
					wait(math.random(1,15))
					if i == 1 then
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." is the ZeroDay of "..plaguename, "All")
					elseif i == 2 then
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(plaguename.." was put on the watchlist by RHO", "All")
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." was infected by "..plaguename, "All")			
					elseif i == #cmdp:GetPlayers()-3 then 
						randomss = math.random(1,2)
						if randomss == 2 then
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("A cure was found for "..plaguename.." RHO says it will be over soon", "All")
							cureFound = true
						else
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Roblox begins breaking down as "..plaguename.." infects the majority of the population", "All")
						end
					elseif i == #cmdp:GetPlayers() then 
						if cureFound == false then
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Roblox was completely infected by "..plaguename, "All")
						else
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Roblox won against "..plaguename, "All")
						end
					else
						if cureFound == false then
							cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." was infected by "..plaguename, "All")
						end
					end
				end
			else
				opx("*","You need 6 plus players!")
			end
		else
			opx("*","You need 2 arguments!")
		end
	end
	
	function useCommand.removecmd()
		local removingcmd = findCmd(arguments[2])
		if not removingcmd then
			opx("*","Command does not exist!")
			return
		end
		opx("-","Removed command")
		useCommand[removingcmd] = function() wait() end
	end
	
	function useCommand.removecustomnametag()
		opx("-","Removed any custom name tags")
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v:IsA("BillboardGui") then
				v:Destroy()
			end
		end
	end
	
	function useCommand.stubby()
		opx("-","You are now stubby")
		cmdlp.Character.RightHand:Destroy()
		cmdlp.Character.LeftHand:Destroy()
		cmdlp.Character.RightFoot:Destroy()
		cmdlp.Character.LeftFoot:Destroy()
	end
	
	function useCommand.listunanchored()
		opx("-","Listing unanchored parts")
		xUnanchored = ""
		Num = 0
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart" or "UnionOperation") and v.Anchored == false and v:IsDescendantOf(cmdlp.Character) == false then
				xUnanchored = xUnanchored..v.Name..", "
				Num = Num + 1
			end
		end
		xUnanchored = Num.." | "..xUnanchored
		opxL("Unanchored Parts",xUnanchored)
	end
	
	function useCommand.iq()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				math.randomseed(target.UserId)
				local iq1 = math.random(1,200)
				opx("-",target.Name.." has "..iq1.." IQ")
				cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.." has "..iq1.." IQ","All")
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required for this command!")
		end
	end
	
	function useCommand.credits()
		opx("-","Opened credits")
		opxL("Credits","Note: Some discords may be out of date due to consistent changing;\
			Owner - "..DevCords[1].."\
			Co-Owner - "..DevCords[2].."\
			Dev - "..DevCords[3].."\
			Intro Audio - liv#2001\
			Thank you to IY for some functions inside CMD-X\
				Thank you to Bannable#5005 for animpack\
					Thank you to 6033#6033 for aimbot")
	end
	
	function useCommand.outputlarger()
		if arguments[2] then
			opxString = getstring(2)
			opx("-","Opened output-larger")
			opxL("Output-Longer",opxString)
		else
			opx("*","2 arguments are required!")
		end
	end
	
	local funa = false
	function useCommand.freezeunanchored()
		sethiddenproperty = sethiddenproperty or set_hidden_prop
		gethiddenproperty = gethiddenproperty or get_hidden_prop
		if not sethiddenproperty or not gethiddenproperty then
			opx("*","Your exploit does not support this command. There is nothing we can do.")
			return
		end
		opx("-","Froze unanchored parts")
		funa = true
		cmdlp.MaximumSimulationRadius = math.huge
		sethiddenproperty(cmdlp, "SimulationRadius", math.huge)
		local unanchoredparts = {}
		local movers = {}
		for index, part in pairs(workspace:GetDescendants()) do
			if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(cmdlp.Character) == false then
				table.insert(unanchoredparts, part)
				part.Massless = true
				part.CanCollide = false
				if part:FindFirstChildOfClass("BodyPosition") ~= nil then
					part:FindFirstChildOfClass("BodyPosition"):Destroy()
				end
			end
		end
		for index, part in pairs(unanchoredparts) do
			local mover = Instance.new("BodyPosition", part)
			table.insert(movers, mover)
			mover.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
		end
		repeat
			for index, mover in pairs(movers) do
				mover.Position = mover.Position
			end
			wait(.1)
		until funa == false
		cmdlp.MaximumSimulationRadius = 139
		sethiddenproperty(cmdlp, "SimulationRadius", 139)
	end
	
	function useCommand.thawunanchored()
		opx("-","Thawed unanchored parts")
		funa = false
	end
	
	function useCommand.massjoindate()
		opx("-","Showing join dates")
		xJD = ""
		for i,v in pairs(cmdp:GetPlayers()) do
			local tbl = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://users.roblox.com/v1/users/"..v.UserId))
			local Created = tbl["created"]:split("T")
			local Created2 = Created[2]:split(".")
			xJD = xJD..v.Name.." joined on: "..Created[1].." "..Created2[1].."\n"
		end
		opxL("Join dates",xJD)
	end
	
	function useCommand.massage()
		opx("-","Showing ages")
		xAge = ""
		for i,v in pairs(cmdp:GetPlayers()) do 
			local Years = string.split(v.AccountAge/365,".")
			xAge = xAge..v.Name.."(s) account is "..Years[1].." year(s) old or "..v.AccountAge.." day(s) old\n"
		end
		opxL("Account ages",xAge)
	end
	
	function useCommand.massid()
		opx("-","Showing IDs")
		xID = ""
		for i,v in pairs(cmdp:GetPlayers()) do 
			xID = xID..v.Name.."s User ID is "..v.UserId.."\n"
		end
		opxL("User IDs",xID)
	end
	
	function useCommand.rejoindiff()
		rejoining = true
		if syn.queue_on_teleport then
			syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Starting rejoin different...")
		local Decision = arguments[2]
		local GUIDs = {}
		local maxPlayers = 0
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,100 do
			for i,v in pairs(Http.data) do
				if v.playing ~= v.maxPlayers then
					maxPlayers = v.maxPlayers
					table.insert(GUIDs, {id = v.id, users = v.playing})
				end
			end
			opx("-","Page searched...")
			if Http.nextPageCursor ~= null then Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor)) else break end
		end
		opx("-","Attempting teleport...")
		if Decision == "any" then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, GUIDs[math.random(1,#GUIDs)].id, cmdlp)
		elseif Decision == "smallest" then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, GUIDs[#GUIDs].id, cmdlp)
		elseif Decision == "largest" then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, GUIDs[1].id, cmdlp)
		else
			opx("*","A valid preset was required!")
		end
		wait(3)
		rejoining = false
	end
	
	function useCommand.streamsnipe()
		rejoining = true
		if syn.queue_on_teleport then
			syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
		end
		if not arguments[3] then
			opx("*","2 arguments are required!")
			return
		end
		local placeid = arguments[3]
		if arguments[3] == "this" then placeid = game.PlaceId end
		local Decision = tonumber(cmdp:GetUserIdFromNameAsync(arguments[2]))
		opx("-","Starting streamsnipe on "..arguments[2].."...")
		local GUIDs = {}
		local maxPlayers = 0
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,100 do
			for i,v in pairs(Http.data) do
				for x,y in pairs(v.playerIds) do
					if tonumber(y) == Decision then
						userFound = true
						opx("-","Found user! Teleporting...")
						game:GetService("TeleportService"):TeleportToPlaceInstance(placeid, v.id, cmdlp)
						break
					end
				end
				if userFound then break end
			end
			if userFound then break end
			opx("-","Page searched...")
			if Http.nextPageCursor ~= null then Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor)) else break end
		end
		wait(3)
		opx("*","User not found!")
		rejoining = false
	end
	
	function useCommand.irltime()
		opx("-","Set time to IRL")
		for i,v in pairs(game:GetService("Lighting"):GetChildren()) do
			if v:IsA("Sky") then v:Destroy() end
		end
		local reg = game:GetService("LocalizationService"):GetCountryRegionForPlayerAsync(cmdlp)
		local URL = ("https://restcountries.eu/rest/v2/alpha/"..reg)
		local fuck = game:HttpGet(URL)
		local Http = game:GetService("HttpService"):JSONDecode(fuck)
		game:GetService("Lighting").GeographicLatitude = Http.latlng[1]
		while wait(1) do
			game:GetService("Lighting").TimeOfDay = os.date("!*t").hour + 1 ..":"..os.date("!*t").min..":00"
		end
	end
	
	function useCommand.transparentbubbles()
		if arguments[2] then
			if _G.transbubbles then
				opx("*","Transparent bubbles are already enabled.")
				return
			end
			local Transparency = arguments[2]
			if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
				_G.transbubbles = cmdlp.PlayerGui:FindFirstChild("BubbleChat").DescendantAdded:connect(function(msg)
					if msg:IsA("ImageLabel") and msg.Name == "ChatBubble" or msg:IsA("ImageLabel") and msg.Name == "ChatBubbleTail" or msg:IsA("ImageLabel") and msg.Name == "SmallTalkBubble" then
						msg.ImageTransparency = Transparency
					end
				end)
			end
			opx("-","Transparent bubbles have been enabled.")
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.untransparentbubbles()
		if not _G.transbubbles then
			opx("*","Transparent bubbles are not enabled.")
		end
		_G.transbubbles:Disconnect()
		_G.transbubbles = nil
		opx("-","Transparent bubbles have been disabled.")
	end
	
	function useCommand.directjoin()
		if arguments[3] then
			rejoining = true
			if syn.queue_on_teleport then
				syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
			end
			opx("-","Joining server")
			if arguments[2] == "this" then arguments[2] = game.PlaceId end
			game:GetService("TeleportService"):TeleportToPlaceInstance(arguments[2],arguments[3],cmdlp)
			wait(3)
			rejoining = false
		else
			opx("*","3 arguments are required!")
		end
	end
	
	pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/depthoffield",true))() end)
	-- Thanks to MrAsyncRoblox on github, full credits.
	
	function useCommand.timedcmd()
		if arguments[3] then
			opx("-","Executing command after time given")
			local newarguments = getstring(3)
			wait(arguments[2])
			arguments = newarguments:split(" ")
			useCommand[arguments[1]]()
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.randomos()
		opx("-","Changed your OS to a random string")
		local tbl1 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/1"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--english words
		local tbl2 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/2"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl1
		local tbl3 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/3"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl2
		local tbl4 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/4"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl3
		local tbl5 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/5"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl5
		local tbl6 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/6"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl4
		local tbl7 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/7"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl6
		local tbl8 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/8"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl7
		local tbl9 = game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/randomchat/9"):gsub('"',""):gsub('{',""):gsub('}',""):split(",")--tbl8
		local r1 = math.random(1,#tbl1)
		local r2 = math.random(1,#tbl2)
		local r3 = math.random(1,#tbl3)
		local r4 = math.random(1,#tbl4)
		local r5 = math.random(1,#tbl5)
		local r6 = math.random(1,#tbl6)
		local r7 = math.random(1,#tbl7)
		local r8 = math.random(1,#tbl8)
		local r9 = math.random(1,#tbl9)
		cmdlp.OsPlatform = tbl1[r1].." "..tbl2[r2].." "..tbl3[r3].." "..tbl4[r4].." "..tbl5[r5].." "..tbl6[r6].." "..tbl7[r7].." "..tbl8[r8].." "..tbl9[r9]
	end
	
	function useCommand.depth()
		DynamicDepth:Enable()
		if arguments[2] then
			opx("-","Set DepthOfField to "..arguments[2])
			DynamicDepth:SetFocusRadius(arguments[2])
		else
			opx("-","Set DepthOfField to 15")
			DynamicDepth:SetFocusRadius(15)
		end
	end
	
	function useCommand.undepth()
		opx("-","Disabled DepthOfField")
		DynamicDepth:SetFocusRadius(10000)
	end
	
	function useCommand.cinematic()
		game:GetService("CoreGui").TopBar.Enabled = false
		game:GetService("CoreGui").RobloxGui.Backpack.Visible = false
		game:GetService("CoreGui").RobloxGui.PlayerListMaster.Visible = false
		opx("-","Enabled cinematic mode")
	end
	
	function useCommand.uncinematic()
		game:GetService("CoreGui").TopBar.Enabled = true
		game:GetService("CoreGui").RobloxGui.Backpack.Visible = true
		game:GetService("CoreGui").RobloxGui.PlayerListMaster.Visible = true
		opx("-","Disabled cinematic mode")
	end
	-- freecam by roblox ty roblox lol
	pi    = math.pi
	abs   = math.abs
	clamp = math.clamp
	exp   = math.exp
	rad   = math.rad
	sign  = math.sign
	sqrt  = math.sqrt
	tan   = math.tan
	
	ContextActionService = game:GetService("ContextActionService")
	Players = cmdp
	RunService = game:GetService("RunService")
	StarterGui = game:GetService("StarterGui")
	UserInputService = game:GetService("UserInputService")
	Workspace = workspace
	
	LocalPlayer = cmdlp
	if not LocalPlayer then
		Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
		LocalPlayer = cmdlp
	end
	
	Camera = Workspace.CurrentCamera
	Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		local newCamera = Workspace.CurrentCamera
		if newCamera then
			Camera = newCamera
		end
	end)
	
	TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value
	INPUT_PRIORITY = Enum.ContextActionPriority.High.Value
	FREECAM_MACRO_KB = {Enum.KeyCode.LeftShift, Enum.KeyCode.P}
	
	NAV_GAIN = Vector3.new(1, 1, 1)*64
	PAN_GAIN = Vector2.new(0.75, 1)*8
	FOV_GAIN = 300
	
	PITCH_LIMIT = rad(90)
	
	VEL_STIFFNESS = 1.5
	PAN_STIFFNESS = 1.0
	FOV_STIFFNESS = 4.0
	
	Spring = {} do
		Spring.__index = Spring
		
		function Spring.new(freq, pos)
			local self = setmetatable({}, Spring)
			self.f = freq
			self.p = pos
			self.v = pos*0
			return self
		end
		
		function Spring:Update(dt, goal)
			local f = self.f*2*pi
			local p0 = self.p
			local v0 = self.v
			
			local offset = goal - p0
			local decay = exp(-f*dt)
			
			local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
			local v1 = (f*dt*(offset*f - v0) + v0)*decay
			
			self.p = p1
			self.v = v1
			
			return p1
		end
		
		function Spring:Reset(pos)
			self.p = pos
			self.v = pos*0
		end
	end
	
	cameraPos = Vector3.new()
	cameraRot = Vector2.new()
	cameraFov = 0
	
	velSpring = Spring.new(VEL_STIFFNESS, Vector3.new())
	panSpring = Spring.new(PAN_STIFFNESS, Vector2.new())
	fovSpring = Spring.new(FOV_STIFFNESS, 0)
	
	Input = {} do
		local thumbstickCurve do
			K_CURVATURE = 2.0
			K_DEADZONE = 0.15
			
			function fCurve(x)
				return (exp(K_CURVATURE*x) - 1)/(exp(K_CURVATURE) - 1)
			end
			
			function fDeadzone(x)
				return fCurve((x - K_DEADZONE)/(1 - K_DEADZONE))
			end
			
			function thumbstickCurve(x)
				return sign(x)*clamp(fDeadzone(abs(x)), 0, 1)
			end
		end
		
		gamepad = {
			ButtonX = 0,
			ButtonY = 0,
			DPadDown = 0,
			DPadUp = 0,
			ButtonL2 = 0,
			ButtonR2 = 0,
			Thumbstick1 = Vector2.new(),
			Thumbstick2 = Vector2.new(),
		}
		
		keyboard = {
			W = 0,
			A = 0,
			S = 0,
			D = 0,
			E = 0,
			Q = 0,
			U = 0,
			H = 0,
			J = 0,
			K = 0,
			I = 0,
			Y = 0,
			Up = 0,
			Down = 0,
			LeftShift = 0,
			RightShift = 0,
		}
		
		mouse = {
			Delta = Vector2.new(),
			MouseWheel = 0,
		}
		
		NAV_GAMEPAD_SPEED  = Vector3.new(1, 1, 1)
		NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
		PAN_MOUSE_SPEED    = Vector2.new(1, 1)*(pi/64)
		PAN_GAMEPAD_SPEED  = Vector2.new(1, 1)*(pi/8)
		FOV_WHEEL_SPEED    = 1.0
		FOV_GAMEPAD_SPEED  = 0.25
		NAV_ADJ_SPEED      = 0.75
		NAV_SHIFT_MUL      = 0.25
		
		navSpeed = 1
		
		function Input.Vel(dt)
			navSpeed = clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)
			
			kGamepad = Vector3.new(
				thumbstickCurve(gamepad.Thumbstick1.x),
				thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2),
				thumbstickCurve(-gamepad.Thumbstick1.y)
			)*NAV_GAMEPAD_SPEED
			
			kKeyboard = Vector3.new(
				keyboard.D - keyboard.A + keyboard.K - keyboard.H,
				keyboard.E - keyboard.Q + keyboard.I - keyboard.Y,
				keyboard.S - keyboard.W + keyboard.J - keyboard.U
			)*NAV_KEYBOARD_SPEED
			
			shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)
			
			return (kGamepad + kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
		end
		
		function Input.Pan(dt)
			kGamepad = Vector2.new(
				thumbstickCurve(gamepad.Thumbstick2.y),
				thumbstickCurve(-gamepad.Thumbstick2.x)
			)*PAN_GAMEPAD_SPEED
			kMouse = mouse.Delta*PAN_MOUSE_SPEED
			mouse.Delta = Vector2.new()
			return kGamepad + kMouse
		end
		
		function Input.Fov(dt)
			kGamepad = (gamepad.ButtonX - gamepad.ButtonY)*FOV_GAMEPAD_SPEED
			kMouse = mouse.MouseWheel*FOV_WHEEL_SPEED
			mouse.MouseWheel = 0
			return kGamepad + kMouse
		end
		
		do
			function Keypress(action, state, input)
				keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end
			
			function GpButton(action, state, input)
				gamepad[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end
			
			function MousePan(action, state, input)
				delta = input.Delta
				mouse.Delta = Vector2.new(-delta.y, -delta.x)
				return Enum.ContextActionResult.Sink
			end
			
			function Thumb(action, state, input)
				gamepad[input.KeyCode.Name] = input.Position
				return Enum.ContextActionResult.Sink
			end
			
			function Trigger(action, state, input)
				gamepad[input.KeyCode.Name] = input.Position.z
				return Enum.ContextActionResult.Sink
			end
			
			function MouseWheel(action, state, input)
				mouse[input.UserInputType.Name] = -input.Position.z
				return Enum.ContextActionResult.Sink
			end
			
			function Zero(t)
				for k, v in pairs(t) do
					t[k] = v*0
				end
			end
			
			function Input.StartCapture()
				ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY,
					Enum.KeyCode.W, Enum.KeyCode.U,
					Enum.KeyCode.A, Enum.KeyCode.H,
					Enum.KeyCode.S, Enum.KeyCode.J,
					Enum.KeyCode.D, Enum.KeyCode.K,
					Enum.KeyCode.E, Enum.KeyCode.I,
					Enum.KeyCode.Q, Enum.KeyCode.Y,
					Enum.KeyCode.Up, Enum.KeyCode.Down
				)
				ContextActionService:BindActionAtPriority("FreecamMousePan",          MousePan,   false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement)
				ContextActionService:BindActionAtPriority("FreecamMouseWheel",        MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel)
				ContextActionService:BindActionAtPriority("FreecamGamepadButton",     GpButton,   false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY)
				ContextActionService:BindActionAtPriority("FreecamGamepadTrigger",    Trigger,    false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2)
				ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb,      false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2)
			end
			
			function Input.StopCapture()
				navSpeed = 1
				Zero(gamepad)
				Zero(keyboard)
				Zero(mouse)
				ContextActionService:UnbindAction("FreecamKeyboard")
				ContextActionService:UnbindAction("FreecamMousePan")
				ContextActionService:UnbindAction("FreecamMouseWheel")
				ContextActionService:UnbindAction("FreecamGamepadButton")
				ContextActionService:UnbindAction("FreecamGamepadTrigger")
				ContextActionService:UnbindAction("FreecamGamepadThumbstick")
			end
		end
	end
	
	function GetFocusDistance(cameraFrame)
		local znear = 0.1
		local viewport = Camera.ViewportSize
		local projy = 2*tan(cameraFov/2)
		local projx = viewport.x/viewport.y*projy
		local fx = cameraFrame.rightVector
		local fy = cameraFrame.upVector
		local fz = cameraFrame.lookVector
		
		local minVect = Vector3.new()
		local minDist = 512
		
		for x = 0, 1, 0.5 do
			for y = 0, 1, 0.5 do
				local cx = (x - 0.5)*projx
				local cy = (y - 0.5)*projy
				local offset = fx*cx - fy*cy + fz
				local origin = cameraFrame.p + offset*znear
				local _, hit = Workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
				local dist = (hit - origin).magnitude
				if minDist > dist then
					minDist = dist
					minVect = offset.unit
				end
			end
		end
		return fz:Dot(minVect)*minDist
	end
	
	local function StepFreecam(dt)
		local vel = velSpring:Update(dt, Input.Vel(dt))
		local pan = panSpring:Update(dt, Input.Pan(dt))
		local fov = fovSpring:Update(dt, Input.Fov(dt))
		
		local zoomFactor = sqrt(tan(rad(70/2))/tan(rad(cameraFov/2)))
		
		cameraFov = clamp(cameraFov + fov*FOV_GAIN*(dt/zoomFactor), 1, 120)
		cameraRot = cameraRot + pan*PAN_GAIN*(dt/zoomFactor)
		cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y%(2*pi))
		
		local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*NAV_GAIN*dt)
		cameraPos = cameraCFrame.p
		
		Camera.CFrame = cameraCFrame
		Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
		Camera.FieldOfView = cameraFov
	end
	
	local PlayerState = {} do
		mouseBehavior = ""
		mouseIconEnabled = ""
		cameraType = ""
		cameraFocus = ""
		cameraCFrame = ""
		cameraFieldOfView =  ""
		screenGuis = {}
		
		function PlayerState.Push()
			cameraFieldOfView = Camera.FieldOfView
			Camera.FieldOfView = 70
			
			cameraType = Camera.CameraType
			Camera.CameraType = Enum.CameraType.Custom
			
			cameraCFrame = Camera.CFrame
			cameraFocus = Camera.Focus
			
			mouseIconEnabled = UserInputService.MouseIconEnabled
			UserInputService.MouseIconEnabled = true
			
			mouseBehavior = UserInputService.MouseBehavior
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end
		
		function PlayerState.Pop()
			Camera.FieldOfView = 70
			
			Camera.CameraType = cameraType
			cameraType = nil
			
			Camera.CFrame = cameraCFrame
			cameraCFrame = nil
			
			Camera.Focus = cameraFocus
			cameraFocus = nil
			
			UserInputService.MouseIconEnabled = mouseIconEnabled
			mouseIconEnabled = nil
			
			UserInputService.MouseBehavior = mouseBehavior
			mouseBehavior = nil
		end
	end
	
	function StartFreecam(p)
		local cameraCFrame = Camera.CFrame
		if p then
			cameraCFrame = p
		end
		cameraRot = Vector2.new()
		cameraPos = cameraCFrame.p
		cameraFov = Camera.FieldOfView
		
		velSpring:Reset(Vector3.new())
		panSpring:Reset(Vector2.new())
		fovSpring:Reset(0)
		
		PlayerState.Push()
		RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
		Input.StartCapture()
	end
	
	function StopFreecam()
		Input.StopCapture()
		RunService:UnbindFromRenderStep("Freecam")
		PlayerState.Pop()
		workspace.Camera.FieldOfView = 70
	end
	
	FreecamOn = false
	function useCommand.freecam()
		opx("-","Activated freecam")
		StartFreecam()
		wait(.1)
		navSpeed = permfcspeed
		FreecamOn = true
		NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
	end
	
	function useCommand.freecamspeed()
		if cmdnum(arguments[2]) then
			opx("-","Freecam speed set to "..arguments[2])
			navSpeed = arguments[2]
			NAV_KEYBOARD_SPEED = Vector3.new(arguments[2], arguments[2], arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.permfreecamspeed()
		if cmdnum(arguments[2]) then
			opx("-","Set perm free cam speed")
			permfcspeed = arguments[2]
			updatesaves()
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.unfreecam()
		opx("-","De-Activated freecam")
		StopFreecam()
		FreecamOn = false
		wait(1)
		workspace.Camera.FieldOfView = 70
	end
	
	function useCommand.freecamgoto()
		if FreecamOn then
			if arguments[2] then
				local target = findplr(arguments[2])
				if target then
					StopFreecam()
					wait(.1)
					opx("-","Teleported freecam to "..target.Name)
					StartFreecam(target.Character.HumanoidRootPart.CFrame)
					navSpeed = permfcspeed
					NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
				else
					opx("*","Player does not exist!")
				end
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end
	
	function useCommand.freecamfreegoto()
		if FreecamOn then
			if arguments[4] then
				StopFreecam()
				wait(.1)
				opx("-","Teleported freecam to pos")
				StartFreecam(arguments[2],arguments[3],arguments[4])
				navSpeed = permfcspeed
				NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end
	
	function useCommand.freecamloadpos()
		if FreecamOn then
			if arguments[2] then
				StopFreecam()
				wait(.1)
				wpNS = getstring(2)
				for i,v in pairs(WPs) do
					local xc = WPs[i].C[1]
					local yc = WPs[i].C[2]
					local zc = WPs[i].C[3]
					if tostring(WPs[i].N) == tostring(wpNS) then
						StartFreecam(xc,yc,zc)
						navSpeed = permfcspeed
						NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
					end
				end
				opx("Teleported to "..tostring(wpNS))
			else
				opx("*","2 arguments are needed for this command!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end
	
	function useCommand.freecamgotopart()
		if FreecamOn then
			if arguments[2] then
				StopFreecam()
				wait(.1)
				opx("-","Teleported freecam to part")
				for i,v in pairs(workspace:GetDescendants()) do
					if v.Name == getstring(2) then
						StartFreecam(v.CFrame)
						navSpeed = permfcspeed
						NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
						break
					end
				end
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end
	
	function useCommand.freecamgotoclass()
		if FreecamOn then
			if arguments[2] then
				StopFreecam()
				wait(.1)
				opx("-","Teleported freecam to class")
				for i,v in pairs(workspace:GetDescendants()) do
					if v.ClassName == getstring(2) then
						StartFreecam(v.CFrame)
						navSpeed = permfcspeed
						NAV_KEYBOARD_SPEED = Vector3.new(permfcspeed, permfcspeed, permfcspeed)
						break
					else
						opx("*","Part does not exist")
					end
				end
			else
				opx("*","2 arguments are required!")
			end
		else
			opx("*","Freecam isnt running!")
		end
	end
	
	function useCommand.spotify()
		opx("-","Spotify Premium is needed to run Spotify Presence")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/projetcs/spotifypresence"))()
	end
	
	function useCommand.friendjoin()
		rejoining = true
		if arguments[2] then
			opx("-","Scanning friends, this may take some time")
			local target = arguments[2]
			local friends = cmdlp:GetFriendsOnline(200)
			for i,v in pairs(friends) do
				if v.UserName == target then
					if v.LastLocation then
						if syn.queue_on_teleport then
							syn.queue_on_teleport('game:GetService("ReplicatedFirst"):RemoveDefaultLoadingScreen()')
						end
						opx("-","Joining friend")
						game:GetService("TeleportService"):TeleportToPlaceInstance(v.PlaceId,v.GameId,cmdlp)
					else
						opx("*","Friend isnt in a game!")
					end
					break
				end
			end
			opx("*","Friend dosent exist!")
		else
			opx("*","2 arguments are required!")
		end
		wait(3)
		rejoining = false
	end
	
	function useCommand.hotkeynoclip()
		if arguments[2] then
			hotkeynoclip = arguments[2]
			updatesaves()
			opx("-","Added key to noclip")
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.spoofos()
		if arguments[2] then
			opx("-","Spoofed OS to "..getstring(2))
			cmdlp.OsPlatform = getstring(2)
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.noshow()
		if arguments[2] == "on" then
			opx("-","No-Show is now on")
			opx("-","Make sure to reset your character!")
			sDetect = false
			updatesaves()
		elseif arguments[2] == "off" then
			opx("-","No-Show is now off")
			opx("-","Make sure to reset your character!")
			sDetect = true
			updatesaves()
		else
			opx("*","A valid preset is needed!")
		end
	end
	
	function useCommand.players()
		opx("Listed players in game")
		xPlayers = #cmdp:GetPlayers().." | "
		for i,v in pairs(cmdp:GetPlayers()) do
			xPlayers = xPlayers..v.Name..", "
		end
		opxL("Players",xPlayers)
	end
	
	function useCommand.viewserver()
		if not arguments[3] then
			opx("*","3 arguments are required!")
			return
		end
		local xPlayers = ""
		local placeid,guid = arguments[2],arguments[3]
		local serverFound = false
		if arguments[2] == "this" then placeid = game.PlaceId end
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,100 do
			for i,v in pairs(Http.data) do
				if v.id ~= guid then
					serverFound = true
					for x,y in pairs(v.playerIds) do
						xPlayers = xPlayers..cmdp:GetNameFromUserIdAsync(y)..", "
					end
					break
				end
				if serverFound then break end
			end
			if serverFound then break end
			if Http.nextPageCursor ~= null then Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor)) else break end
		end
		opx("-","Listed all players in "..guid)
		opxL("Players "..guid,xPlayers)
	end
	
	function useCommand.servers()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		local placeid = arguments[2]
		if arguments[2] == "this" then
			placeid = game.PlaceId
		end
		local xServers = ""
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="))
		for i = 1,100 do
			for i,v in pairs(Http.data) do
				xServers = xServers..v.playing.."/"..v.maxPlayers.." {"..v.id.."}".."\n"
			end
			opx("-","Page searched...")
			if Http.nextPageCursor then
				Http = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeid.."/servers/Public?sortOrder=Asc&limit=100&cursor="..Http.nextPageCursor))
			else
				break
			end
		end
		opx("-","Listed all servers")
		opxL("Servers",xServers)
	end
	function useCommand.antikick()
		opx("-","Anti-Kick enabled")
		local ncallsa = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(...)
			local args = {...}
			if not checkcaller() and getnamecallmethod() == "Kick" then
				return nil
			end
			return ncallsa(...)
		end)
		setreadonly(mt, true)
	end
	
	function useCommand.cmdinfo()
		local cmdinfo = {}
		if CMDS.commands[arguments[2]] then
			cmdinfo.description = CMDS.commands[findCmd(arguments[2])]
			cmdinfo.name = findCmd(arguments[2])
			cmdinfo.usage = CMDS.usage[findCmd(arguments[2])]
		elseif CMDS.aliases[arguments[2]] then
			cmdinfo.description = CMDS.commands[CMDS.aliases[arguments[2]]]
			cmdinfo.name = CMDS.aliases[arguments[2]]
			cmdinfo.usage = CMDS.usage[CMDS.aliases[arguments[2]]]
		end
		if not cmdinfo.description or not cmdinfo.name then
			opx("*","Invalid command "..arguments[2]..".")
			return
		end
		if not cmdinfo.usage then
			cmdinfo.usage = "()"
		end
		opxL("Command","."..cmdinfo.name.." | "..cmdinfo.usage.." "..cmdinfo.description)
	end
	
	function useCommand.sentinelexplorer()
		opx("-","Loading SENTINEL DEX")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/others/sdex", true))()
		opx("-","Loaded SENTINEL DEX")
	end
	
	Pxrts = {}
	function useCommand.truesight()
		opx("-","Truesight is now on")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 then
				v.Transparency = 0
				Pxrts[#Pxrts+1] = v
			end
		end
	end
	
	LoopFling = false
	function useCommand.loopfling()
		if arguments[2] then
			target = findplr(arguments[2])
			if target then
				while LoopFling do
					arguments = {"fling",target.Name}
					useCommand.fling()
					repeat wait(.1) until target.Character ~= nil and target.Character:FindFirstChild('HumanoidRootPart')
				end
			else
				opx("*","Player does not exist!")    
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.unloopfling()
		opx("-","Stopped loop flinging")
		LoopFling = false
	end
	
	function useCommand.nomouse()
		opx("-","Mouse disabled, use ; to focus back on the CMDbar")
		game:GetService("UserInputService").MouseIconEnabled = false
	end
	
	function useCommand.yesmouse()
		opx("-","Mouse enabled")
		game:GetService("UserInputService").MouseIconEnabled = true
	end
	
	function useCommand.untruesight()
		opx("-","Truesight is now off")
		for i,v in pairs(Pxrts) do
			v.Transparency = 1
		end
	end
	
	local PDisabled = {}
	function useCommand.disableplayer()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				target.Character.Head.face.Transparency = 1
				opx("-","Disabled "..target.Name)
				PDisabled[#PDisabled+1] = target
				local UserNum = #PDisabled
				for i,v in pairs(target.Character:GetDescendants()) do
					if v:IsA("BasePart") then
						v.Transparency = 1
					end
				end
				target.CharacterAdded:Connect(function(Character)
					if PDisabled[UserNum] ~= nil then
						for i,v in pairs(Character:GetDescendants()) do
							if v:IsA("BasePart") then
								v.Transparency = 1
							end
						end
					end
				end)
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.enableplayer()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				target.Character.Head.face.Transparency = 0
				opx("-","Enabled "..target.Name)
				for i,v in pairs(target.Character:GetDescendants()) do
					if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
						v.Transparency = 0
					end
				end
				for i,v in pairs(PDisabled) do
					if target == PDisabled[i] then
						table.remove(PDisabled,i)
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.gotopart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Teleported to part")
					cmdlp.Character.Humanoid.Jump = true
					cmdlp.Character.HumanoidRootPart.CFrame = v.CFrame
					break
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.clientbringpart()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Brought part")
					v.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.clientdeletepart()
		if arguments[2] then
			local broke = false
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					v:Destroy()
					broke = true
					break
				end
			end
			if not broke then
				opx("*","Part does not exist")
				return
			end
			opx("-","Deleted part")
			return
		end
		opx("*","2 arguments are required!")
	end
	
	function useCommand.copyoutput()
		if cmdnum(arguments[3]) then
			local start = arguments[2]
			local breaker = arguments[3]
			setclipboard(output1.Text:sub(start,breaker))
			opx("-","Copied latest output")
		else
			setclipboard(output1.Text)
			opx("-","Copied latest output")
		end
	end
	
	function useCommand.copypath()
		if arguments[2] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name == getstring(2) then
					opx("-","Copied path of part")
					setclipboard(v:GetFullName())
					break
				else
					opx("*","Part does not exist")
				end
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.outputbind()
		if arguments[2] == "chat" then
			ChatBind = true
			updatesaves()
			opx("-","Output switched to chat")
		elseif arguments[2] == "default" then
			ChatBind = false
			updatesaves()
			opx("-","Output switched to default")
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.clearwaves()
		opx("-","Made all waves clear")
		workspace.Terrain.WaterReflectance = 0
		workspace.Terrain.WaterTransparency = 1
		workspace.Terrain.WaterColor = Color3.fromRGB(255,255,255)
	end
	
	function useCommand.calmwaves()
		opx("-","Made all waves calm")
		workspace.Terrain.WaterWaveSize = 0
		workspace.Terrain.WaterWaveSpeed = 10
	end
	
	function useCommand.fov()
		if cmdnum(arguments[2]) then
			workspace.Camera.FieldOfView = arguments[2]
			opx("-","Set field of view to "..arguments[2])
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.volume()
		if cmdnum(arguments[2]) then
			opx("-","System Volume is now "..arguments[2])
			UserSettings():GetService("UserGameSettings").MasterVolume = arguments[2]/100
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.graphics()
		if cmdnum(arguments[2]) then
			opx("-","System Graphics is now "..arguments[2])
			settings().Rendering.QualityLevel = arguments[2]
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.mousesensitivity()
		if cmdnum(arguments[2]) then
			opx("-","Changed mouse sensitivity to "..arguments[2])
			game:GetService("UserInputService").MouseDeltaSensitivity = arguments[2]
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.animspeed()
		if arguments[2] then
			opx("-","Sped up animations")
			for i,v in pairs(cmdlp.Character.Humanoid:GetPlayingAnimationTracks()) do
				v:AdjustSpeed(arguments[2])
			end
		else
			opx("-","2 arguments are required!")
		end
	end
	
	function useCommand.noprompt()
		local PromptHandler = game:GetService("CoreGui").PurchasePromptApp.PurchasePromptUI
		NoPrompt = true
		opx("-","No prompt enabled")
		PromptHandler.ChildAdded:Connect(function(AnnoyingRobuxGrabPromptHere) 
			if NoPrompt == true then
				AnnoyingRobuxGrabPromptHere:Destroy()
			end 
		end)
	end
	
	function useCommand.yesprompt()
		opx("-","No prompt disabled")
		NoPrompt = false
	end
	
	function useCommand.rappu()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				local URL = ("https://inventory.roblox.com/v1/users/"..target.UserId.."/assets/collectibles?sortOrder=Asc&limit=100")
				local fuck = game:HttpGet(URL)
				local Http = game:GetService("HttpService"):JSONDecode(fuck)
				local RAP = 0
				function ListItems(Look)
					for i,v in pairs(Look.data) do
						if v.recentAveragePrice ~= nil then
							RAP = RAP+v.recentAveragePrice
						end
					end
				end
				ListItems(Http)
				Pages = 1
				for i = 1,500 do
					if Http.nextPageCursor ~= null then
						local fuck = game:HttpGet(URL.."&cursor="..Http.nextPageCursor)
						Http = game:GetService("HttpService"):JSONDecode(fuck)
						ListItems(Http)
						Pages = Pages+1
					else
						cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.." has "..RAP.."RAP, "..Pages.."pgs checked","All")
						opx("-",target.Name.." has "..RAP.."RAP, "..Pages.."pgs checked")
						break
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.rappr()
		if arguments[2] then
			local target = findplr(arguments[2])
			if target then
				local URL = ("https://inventory.roblox.com/v1/users/"..target.UserId.."/assets/collectibles?sortOrder=Asc&limit=100")
				local fuck = game:HttpGet(URL)
				local Http = game:GetService("HttpService"):JSONDecode(fuck)
				local RAP = 0
				function ListItems(Look)
					for i,v in pairs(Look.data) do
						if v.recentAveragePrice ~= nil then
							RAP = RAP+v.recentAveragePrice
						end
					end
				end
				ListItems(Http)
				Pages = 1
				for i = 1,500 do
					if Http.nextPageCursor ~= null then
						local fuck = game:HttpGet(URL.."&cursor="..Http.nextPageCursor)
						Http = game:GetService("HttpService"):JSONDecode(fuck)
						ListItems(Http)
						Pages = Pages+1
					else
						opx("-",target.Name.." has "..RAP.."RAP, "..Pages.."pgs checked")
						break
					end
				end
			else
				opx("*","Player does not exist!")
			end
		else
			opx("*","2 arguments are required!")
		end
	end
	
	-- CTRL+F
	
	PGUI = {}
	function useCommand.noguis()
		opx("-","No guis enabled")
		for i,v in pairs(cmdlp.PlayerGui:GetDescendants()) do
			if v:IsA("Frame") and v.Visible == true then
				v.Visible = false
				PGUI[#PGUI+1] = v
			end
		end
	end
	
	function useCommand.yesguis()
		opx("-","No guis disabled")
		for i,v in pairs(PGUI) do
			v.Visible = true
		end
	end
	
	GTS = {}
	function useCommand.guitruesight()
		opx("-","Gui truesight enabled")
		for i,v in pairs(cmdlp.PlayerGui:GetDescendants()) do
			if v:IsA("Frame") and v.Visible == false then
				v.Visible = true
				GTS[#GTS+1] = v
			end
		end
	end
	
	function useCommand.unguitruesight()
		opx("-","Gui truesight disabled")
		for i,v in pairs(GTS) do
			v.Visible = false
		end
	end
	
	BGs = {}
	function useCommand.nobillboardguis()
		opx("-","Turned off all billboardguis")
		YesBgs = true
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v.Enabled = false
				BGs[#BGs+1] = v
			end
		end
	end
	
	function useCommand.yesbillboardguis()
		opx("-","Turned on all billboardguis")
		for i,v in pairs(BGs) do
			v.Enabled = true
		end
	end
	
	function useCommand.grippos()
		if not cmdnum(arguments[4]) then
			opx("*","4 arguments are required!")
			return
		end
		local tool = cmdlp.Character:FindFirstChildOfClass("Tool")
		tool.Parent = cmdlp.Backpack
		tool.GripPos = Vector3.new(arguments[2],arguments[3],arguments[4])
		tool.Parent = cmdlp.Character
		opx("-","Set GripPos")
	end
	
	SWs = false
	function useCommand.shiftwalkspeed()
		if cmdnum(arguments[2]) then
			opx("-","Shift walkspeed enabled")
			SWs = true
			cmduis.InputBegan:Connect(function(input)
				if SWs == true and cmduis:IsKeyDown(Enum.KeyCode.LeftShift) then
					cmdlp.Character.Humanoid.WalkSpeed = arguments[2]
				end
			end)
			cmdm.KeyUp:connect(function(key)
				if SWs == true and key == "0" then
					cmdlp.Character.Humanoid.WalkSpeed = 16
				end
			end)
		else
			opx("-","Shift walkspeed enabled")
			SWs = true
			cmduis.InputBegan:Connect(function(input)
				if SWs == true and cmduis:IsKeyDown(Enum.KeyCode.LeftShift) then
					cmdlp.Character.Humanoid.WalkSpeed = permwalkspeed
				end
			end)
			cmdm.KeyUp:connect(function(key)
				if SWs == true and key == "0" then
					cmdlp.Character.Humanoid.WalkSpeed = 16
				end
			end)
		end
	end
	
	function useCommand.unshiftwalkspeed()
		opx("-","Shift walkspeed disabled")
		SWs = false
		cmdlp.Character.Humanoid.WalkSpeed = 16
	end
	
	function useCommand.noresult()
		output1.Text = output2.Text
		output2.Text = output3.Text
		output3.Text = output4.Text
		output4.Text = output5.Text
		output5.Text = output6.Text
		output6.Text = output7.Text
		output7.Text = output8.Text
		output8.Text = output9.Text
	end
	
	local bAe = Instance.new("Animation")
	bAe.AnimationId = "rbxassetid://259438880"
	local cAe = Instance.new("Animation")
	cAe.AnimationId = "rbxassetid://181526230"
	local dAe = Instance.new("Animation")
	dAe.AnimationId = "rbxassetid://33796059"
	function useCommand.retard()
		if arguments[2] == "1" then
			if btAe then btAe:Stop() end
			if ctAe then ctAe:Stop() end
			if dtAe then dtAe:Stop() end
			btAe = cmdlp.Character.Humanoid:LoadAnimation(bAe)
			btAe:Play(.1, 1, 1e3)
		elseif arguments[2] == "2" then
			if btAe then btAe:Stop() end
			if ctAe then ctAe:Stop() end
			if dtAe then dtAe:Stop() end
			ctAe = cmdlp.Character.Humanoid:LoadAnimation(cAe)
			ctAe:Play(.1, 1, 1)
			dtAe = cmdlp.Character.Humanoid:LoadAnimation(dAe)
			dtAe:Play(.1, 1, 1e8)
		else
			if btAe then btAe:Stop() end
			if ctAe then ctAe:Stop() end
			if dtAe then dtAe:Stop() end
			btAe = cmdlp.Character.Humanoid:LoadAnimation(bAe)
			btAe:Play(.1, 1, 1e3)
			useCommand.spin()
		end
		opx("-","Now being a retard")
	end
	
	function useCommand.unretard()
		if btAe then btAe:Stop() useCommand.unspin() end
		if ctAe then ctAe:Stop() end
		if dtAe then dtAe:Stop() end
		opx("-","Stopped being a retard")
	end
	
	xAnchored = {}
	xOrig = {}
	
	function grabUnanchored(Model)
		for i,part in pairs(Model:GetDescendants()) do
			if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(cmdlp.Character) == false then
				part.Massless = true
				part.CanCollide = false
				if part:FindFirstChildOfClass("BodyPosition") == nil then
					local mover = Instance.new("BodyPosition", part)
					table.insert(xAnchored, mover)
					xOrig[#xOrig+1] = {pos = mover.Position, par = mover}
					mover.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				else
					part.BodyPosition:Destroy()
					local mover = Instance.new("BodyPosition", part)
					table.insert(xAnchored, mover)
					xOrig[#xOrig+1] = {pos = mover.Position, par = mover}
					mover.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				end
			end
		end
	end
	
	IHaveSimmed = false
	function useCommand.simulationradius()
		sethiddenproperty = sethiddenproperty or set_hidden_prop
		setsimulationradius = setsimulationradius or set_simulation_radius
		if not sethiddenproperty then
			opx("*","sethiddenproperty is not supported on your executor!")
			return
		end
		if setsimulationradius then
			IHaveSimmed = true
			sethiddenproperty(cmdlp,"MaximumSimulationRadius",1/0)
			setsimulationradius(1e308)
		else
			sethiddenproperty(cmdlp,"MaximumSimulationRadius",1/0)
			sethiddenproperty(cmdlp,"SimulationRadius",1e308)
		end
	end
	
	IHaveGrabbed = false
	function useCommand.grabunanchored()
		if not IHaveSimmed then
			opx("*",".simulationradius is required!")
			return
		end
		IHaveGrabbed = true
		if arguments[2] then
			opx("-","Updated anchored parts list from "..arguments[2])
			for i,v in pairs(worksapce:GetDescendants()) do
				if v.Name == arguments[2] then
					UnanchoredPart = v.Name
					break
				end
			end
			grabUnanchored(UnanchoredPart)
		else
			opx("-","Updated anchored parts list from workspace")
			grabUnanchored(workspace)
		end
	end
	
	lookingAt = false
	function useCommand.lookat()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		opx("-","Now looking at "..target.Name)
		lookingAt = true
		repeat game:GetService("RunService").Heartbeat:Wait()
			cmdlp.Character.HumanoidRootPart.CFrame = CFrame.new(cmdlp.Character.HumanoidRootPart.Position, target.Character.HumanoidRootPart.Position)
		until lookingAt == false
	end
	
	function useCommand.unlookat()
		opx("-","Stopped looking at")
		lookingAt = false
	end
	
	function useCommand.setbackunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		opx("-","Set back unanchored parts")
		for i,v in pairs(xOrig) do
			if xAnchored[i] ~= nil then
				xOrig[i].par.Position = target.Character:FindFirstChild("HumanoidRootPart").CFrame:PointToWorldSpace(xOrig[i].pos)
			end
		end
	end
	
	function useCommand.clearunanchored()
		xAnchored = {}
		opx("-","Cleared unanchored parts list")
	end
	
	function useCommand.bringunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		opx("-","Brung unanchored parts")
		for i,v in pairs(xAnchored) do
			if xAnchored[i] ~= nil then
				xAnchored[i].Position = target.Character:FindFirstChild("HumanoidRootPart").CFrame:PointToWorldSpace(Vector3.new(gotoPosSide,gotoPosHead,gotoPos))
			end
		end
	end
	
	function useCommand.removeunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		opx("-","Removed unanchored parts")
		for i,v in pairs(xAnchored) do
			if xAnchored[i] ~= nil then
				xAnchored[i].Position = target.Character:FindFirstChild("HumanoidRootPart").CFrame:PointToWorldSpace(Vector3.new(0,-500,0))
			end
		end
	end
	
	local fullCircle = 2 * math.pi
	local radius = 10
	function getXAndZPositions(angle)
		local x = math.cos(angle) * radius
		local z = math.sin(angle) * radius
		return x, z
	end
	
	ActUp = {}
	SpinningFor = false
	function useCommand.spinunanchored()
		if not IHaveGrabbed then
			opx("*",".grabunanchored is required!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		ActUp = {}
		opx("-","Spinning unanchored parts")
		SpinningFor = true
		iffy = arguments[2]
		normspin = 0
		function RotatePointAtDist(Point, Angle, Dist)
			local Rotation = CFrame.Angles(0, math.rad(Angle),0)
			return (CFrame.new(Point) *  Rotation * CFrame.new(0,0,Dist)).Position
		end
		for i,v in pairs(xAnchored) do
			normspin = normspin + 30
			xAnchored[i].Position = RotatePointAtDist(cmdlp.Character.HumanoidRootPart.Position, normspin, iffy)
			ActUp[#ActUp+1] = normspin
		end
		game:GetService("RunService").RenderStepped:Connect(function()
			if SpinningFor == true then
				for i,v in pairs(xAnchored) do
					xAnchored[i].Position = RotatePointAtDist(cmdlp.Character.HumanoidRootPart.Position, ActUp[i]-.1, iffy)
					ActUp[i] = ActUp[i]-.1
				end
			end
		end)
	end
	
	function useCommand.unspinunanchored()
		opx("-","Stopped spinning unanchored parts")
		SpinningFor = false
	end
	
	function useCommand.animationsteal()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		if not cmd15(cmdlp) then
			opx("*","R15 is required!")
			return
		end
		local target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		if not cmd15(target) then
			opx("*",target..", R15 is required!")
			return
		end
		if target.Character:FindFirstChild("Animate") then
			if cmdlp.Character:FindFirstChild("Animate") then
				checkifmyanim = cmdlp.Character:FindFirstChild("animstorage")
				if checkifmyanim then
					local z = cmdlp.Character:FindFirstChild("Animate")
					if z then z:Destroy() end
					checkifmyanim.Name = "Animate"
					checkifmyanim.Disabled = false
				end
			end
			local z = cmdlp.Character:FindFirstChild("Animate")
			if z then
				z.Name = "animstorage"
				z.Disabled = true
			end
			local newanim = target.Character.Animate:Clone()
			newanim.Parent = cmdlp.Character
			newanim.Name = "Animate"
			opx("-","Stole "..target.Name.."'s animations")
		else
			opx("*","Target is missing proper animations.")
		end
	end
	
	function useCommand.unanimationsteal()
		if not cmd15(cmdlp) then
			opx("*","R15 is required!")
			return
		end
		if cmdlp.Character:FindFirstChild("animstorage") then
			if cmdlp.Character:FindFirstChild("Animate") then
				cmdlp.Character:FindFirstChild("Animate"):Destroy()
			end
			local as = cmdlp.Character:FindFirstChild("animstorage")
			as.Name = "Animate"
			as.Disabled = false
			opx("-","Animations reverted to normal.")
		else
			opx("*","Animations haven't been stolen!")
		end
	end
	
	function useCommand.nohurtoverlay()
		opx("-","Turned off hurt overlay")
		hurtOverlay = true
		game:GetService("CoreGui").TopBar.FullScreenFrame.HurtOverlay:GetPropertyChangedSignal("Visible"):Connect(function()
			if hurtOverlay == true then
				game:GetService("CoreGui").TopBar.FullScreenFrame.HurtOverlay.Visible = false
			end
		end)
	end
	
	function useCommand.yeshurtoverlay()
		opx("-","Turned on hurt overlay")
		hurtOverlay = false
	end
	
	function useCommand.atmosphere()
		if arguments[2] then
			opx("-","Set Atmosphere to "..arguments[2])
			local atmsky = Instance.new("Sky",cmdl)
			local atm = Instance.new("Atmosphere",cmdl)
			atm.Density = arguments[2]
		else
			opx("-","Set Atmosphere to 1")
			local atmsky = Instance.new("Sky",cmdl)
			local atm = Instance.new("Atmosphere",cmdl)
			atm.Density = 1
		end
	end
	
	function useCommand.unatmosphere()
		opx("-","Removed atmosphere")
		local atm = cmdl.Atmosphere
		atm:Destroy()
	end
	
	function useCommand.removefx()
		opx("-","Removed FX")
		for i,v in pairs(cmdl:GetDescendants()) do
			if v:IsA("Atmosphere") or v:IsA("SunRaysEffect") or v:IsA("BloomEffect") or v:IsA("BlurEffect") then
				v:Destroy()
			end
		end
	end
	
	Chaos = false
	function useCommand.chaos()
		local chaosspeed = arguments[2]
		Chaos = true
		opx("-","Chaos mode is now on")
		while Chaos do
			local x = 1
			local outputx = math.random(1,600)
			for i,_ in pairs(CMDS.commands) do
				x = x + 1
				if x == outputx then
					if i ~= "exit" and i ~= "rejoin" and i ~= "rejoindiff" and i ~= "fuckoff" and i ~= "quickexit" then
						if i:sub(1,2) ~= "un" and i:sub(1,3) ~= "yes" then
							arguments = i:split(" ")
							opx("-",i.." use .? (cmd) for more info")
							pcall(function() useCommand[i]() end)
						end
					end
				end
			end
			wait(chaosspeed)
		end
	end	
	function useCommand.unchaos()
		opx("-","Chaos mode is now off")
		Chaos = false
	end
	
	function useCommand.gotofreecam()
		opx("-","Teleported to freecam")
		cmdlp.Character.HumanoidRootPart.CFrame = workspace.Camera.CFrame
	end
	
	function useCommand.compilecommand()
		local argSplit = arguments[2]:split("/")
		local xCMD = 'CMDN[#CMDN+1] = {N = '
		xCMD = xCMD..'"'..argSplit[1]..'", A = {'
		if argSplit[2] == "nil" then 
			xCMD = xCMD..'""}, CMD = "' 
		else 
			table.remove(argSplit,1)
			for i,v in pairs(argSplit) do
				if i ~= #argSplit then
					xCMD = xCMD..'"'..argSplit[i]..'",'
				else
					xCMD = xCMD..'"'..argSplit[i]..'"}, CMD = "'
				end
			end
		end
		local argSplit2 = arguments[2]:split("/")
		if argSplit2[2] == "nil" then table.remove(argSplit2,2) end
		xCMD = xCMD..#CMDN+1 ..','
		for i,v in pairs(argSplit2) do
			if i ~= #argSplit2 then
				xCMD = xCMD..argSplit2[i]..'/'
			else
				xCMD = xCMD..argSplit2[i]..','
			end
		end
		xCMD = xCMD..'('..arguments[3]..'),'
		xCMD = xCMD..getstring(4)..'"}'
		setclipboard(xCMD)
		opx("-","Compiled command to your clipboard.")
	end
	
	function useCommand.noclaim()
		opx("-","Turned on noclaim")
		DHSaved = workspace.FallenPartsDestroyHeight
		workspace.FallenPartsDestroyHeight = math.huge - math.huge
	end
	
	function useCommand.yesclaim()
		opx("-","Turned off noclaim")
		workspace.FallenPartsDestroyHeight = DHSaved
	end
	
	function useCommand.destroyheight()
		if not cmdnum(arguments[2]) then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Set destroyheight to "..arguments[2])
		workspace.FallenPartsDestroyHeight = arguments[2]
	end
	
	TrackN = false
	
	function CreateN(xPlayer, xHead)
		local ESP = Instance.new("BillboardGui", cmdlp.PlayerGui)
		local ESPSquare = Instance.new("Frame", ESP)
		local ESPText = Instance.new("TextLabel", ESP)
		ESP.Name = "ESPN"..xPlayer.Name
		ESP.Adornee = xHead
		ESP.AlwaysOnTop = true
		ESP.ExtentsOffset = Vector3.new(0, 1, 0)
		ESP.Size = UDim2.new(0, 5, 0, 5)
		ESPText.Name = "NAME"
		ESPText.BackgroundColor3 = Color3.new(255, 255, 255)
		ESPText.BackgroundTransparency = 1
		ESPText.BorderSizePixel = 0
		ESPText.Position = UDim2.new(0, 0, 0, -40)
		ESPText.Size = UDim2.new(1, 0, 10, 0)
		ESPText.Visible = true
		ESPText.ZIndex = 10
		ESPText.Font = Enum.Font.SourceSansSemibold
		ESPText.TextStrokeTransparency = 0.6
		ESPText.TextSize = 20
		ESPText.Text = xPlayer.Name
		ESPText.TextColor = xPlayer.TeamColor
	end
	
	function ClearN()
		for _,v in pairs(cmdlp.PlayerGui:GetChildren()) do
			if v.Name:sub(1,4) == "ESPN" and v:IsA("BillboardGui") then
				v:Destroy()
			end
		end
	end
	
	function FindN()
		ClearN()
		TrackN = true
		while wait() do
			if TrackN then
				ClearN()
				for i,v in pairs(cmdp:GetPlayers()) do
					if v ~= cmdlp then
						if v.Character and v.Character:FindFirstChild("Head") then
							CreateN(v, v.Character.Head, true)
						end
					end
				end
			end
			wait(1)
		end
	end
	
	local ESPNEnabled = false
	function useCommand.nameesp()
		opx("-","Name ESP Enabled")
		FindN()
		ESPNEnabled = true
		repeat
			wait()
			if ESPNEnabled == true then
				FindN()
			end
		until ESPNEnabled == false
	end
	
	function useCommand.unnameesp()
		opx("-","Name ESP Disabled")
		ESPNEnabled = false
		TrackN = false
		for i = 1,10 do
			ClearN()
			wait()
		end
	end
	
	function useCommand.spectatepart()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == getstring(2) then
				opx("-","Now viewing part")
				workspace.CurrentCamera.CameraSubject = v
				break
			end
		end
	end
	
	function useCommand.rejoinexecute()
		if not syn.queue_on_teleport then
			opx("*","queue_on_teleport is not supported on your executor!")    
		end
		rejoining = true
		syn.queue_on_teleport([[
		game:GetService('ReplicatedFirst'):RemoveDefaultLoadingScreen()
		repeat wait(.1) until game:GetService('Players').LocalPlayer
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
	]])
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
		wait(3)
		rejoining = false
	end
	
	function useCommand.newaudios()
		local URL = ("https://search.roblox.com/catalog/json?CatalogContext=2&Category=9&SortType=3&IncludeNotForSale=true&ResultsPerPage=")
		if not arguments[2] then arguments[2] = "10" end
		local fuck = game:HttpGet(URL..arguments[2])
		local Http = game:GetService("HttpService"):JSONDecode(fuck)
		xIds = ""
		for i,v in pairs(Http) do
			xIds = xIds..v.AssetId.."\n"
		end
		opxL("Newest-IDs",xIds)
		opx("Listed new audios")
	end
	
	function useCommand.randomcmd()
		local x = 1
		local outputx = math.random(1,600)
		for i,_ in pairs(CMDS.commands) do
			x = x + 1
			if x == outputx then
				if i ~= "exit" and i ~= "rejoin" and i ~= "rejoindiff" and i ~= "fuckoff" and i ~= "quickexit" then
					if i:sub(1,2) ~= "un" and i:sub(1,3) ~= "yes" then
						arguments = i:split(" ")
						opx("-",i.." use .? (cmd) for more info")
						pcall(function() useCommand[i]() end)
					end
				end
			end
		end
	end
	
	function useCommand.replayintro()
		opx("-","Replaying intro")
		local Sound2 = Instance.new("Sound",game:GetService("Lighting"))
		Sound2.SoundId = "http://www.roblox.com/asset/?id="..5032588119
		Sound2:Play()
		wait(2.638)
		Sound2:Destroy()
	end
	
	function useCommand.masscmd()
		opx("-","Executing CMDs")
		table.remove(arguments,1)
		for i,v in pairs(arguments) do
			useCommand[arguments[i]]()
		end
	end
	
	function useCommand.mass()
		opx("-","Executing player command in mass")
		FinalCMD = findCmd(arguments[2])
		for i,v in pairs(cmdp:GetPlayers()) do
			arguments = FinalCMD.." "..v.Name
			arguments = arguments:split(" ")
			useCommand[FinalCMD]()
		end
	end
	
	function FindPart(Name)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name == Name then
				return v
			end
		end
	end
	
	function useCommand.touchinterests()
		opx("-","Fired touch interests")
		if arguments[2] then
			local Part = FindPart(arguments[2])
			for i,v in pairs(Part:GetDescendants()) do
				if v:IsA("TouchInterest") then
					v.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				end
			end
		else
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("TouchInterest") then
					v.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
				end
			end
		end
	end
	
	function useCommand.singletouchinterest()
		opx("-","Fired touch interest")
		local touch = FindPart(arguments[2])
		touch.Parent.CFrame = cmdlp.Character.HumanoidRootPart.CFrame
	end
	
	bgMd = {}
	function useCommand.billboardmaxdistance()
		opx("-","All billboards now have max distance")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BillboardGui") then
				table.insert(bgMd,{p = v, m = v.MaxDistance, a = v.AlwaysOnTop})
				v.MaxDistance = inf
				v.AlwaysOnTop = true
			end
		end
	end
	
	function useCommand.unbillboardmaxdistance()
		opx("-","All billboards no longer have max distance")
		for _,v in pairs(bgMd) do
			v.p.MaxDistance = m
			v.p.AlwaysOnTop = a
		end
	end
	
	bgTs = {}
	function useCommand.billboardtruesight()
		opx("-","All billboards now showing")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BillboardGui") then
				table.insert(bgTs,v)
				v.Enabled = true
			end
		end
	end
	
	function useCommand.unbillboardtruesight()
		opx("-","All billboards no longer showing")
		for _,v in pairs(bgTs) do
			v.Enabled = false
		end
	end
	
	sgTs = {}
	function useCommand.surfaceguitruesight()
		opx("-","All surface guis now showing")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("SurfaceGui") then
				table.insert(sgTs,v)
				v.Enabled = true
			end
		end
	end
	
	function useCommand.unsurfaceguitruesight()
		opx("-","All surface guis no longer showing")
		for _,v in pairs(sgTs) do
			v.Enabled = false
		end
	end
	
	cdMd = {}
	function useCommand.clickdetectormaxdistance()
		opx("-","All click detectors now have max distance")
		for _,v in pairs(workspace:GetDescendants()) do
			if v:IsA("ClickDetector") then
				table.insert(cdMd,{p = v, m = v.MaxActivationDistance})
				v.MaxActivationDistance = 10000
			end
		end
	end
	
	function useCommand.unclickdetectormaxdistance()
		opx("-","All click detectors no longer have max distance")
		for _,v in pairs(cdMd) do
			v.p.MaxActivationDistance = m 
		end
	end
	
	function useCommand.clickdetectors()
		if not fireclickdetector then
			opx("*","fireclickdetector is not supported on your executor!")
			return
		end
		opx("-","Fired click detectors")
		if arguments[2] then
			local Part = FindPart(arguments[2])
			for i,v in pairs(Part:GetDescendants()) do
				if v:IsA("ClickDetector") then
					fireclickdetector(v)
				end
			end
		else
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("ClickDetector") then
					fireclickdetector(v)
				end
			end
		end
	end
	
	function useCommand.outofbody()
		if not cmd15(cmdlp) then
			opx("*","R15 is required!")
			return
		end
		cmdlp.Character.LowerTorso.Anchored = true
		cmdlp.Character.LowerTorso.Root:Destroy()
		opx("-","You are now out of your body")
	end
	
	function useCommand.norotate()
		cmdlp.Character.Humanoid.AutoRotate = false
		opx("-","You will no longer rotate")
	end
	
	function useCommand.yesrotate()
		cmdlp.Character.Humanoid.AutoRotate = true
		opx("-","You will now rotate")
	end
	
	function useCommand.cameraoffset()
		if not arguments[4] then
			opx("*","4 arguments are needed!")
			return
		end
		cmdlp.Character.Humanoid.CameraOffset = Vector3.new(arguments[2],arguments[3],arguments[4])
		opx("-","Set camera offset to "..arguments[2].." "..arguments[3].." "..arguments[4])
	end
	
	function useCommand.singleclickdetector()
		if not fireclickdetector then
			opx("*","fireclickdetector is not supported on your executor!")
			return
		end
		opx("-","Fired click detector")
		local touch = FindPart(arguments[2])
		fireclickdetector(touch)
	end
	
	function useCommand.gotoclass()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Teleported to class part")
		local Part
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA(arguments[2]) then Part = v; break end
		end
		cmdlp.Character.HumanoidRootPart.CFrame = Part.CFrame
	end
	
	function useCommand.gotobpclass()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName == getstring(2) then
				opx("-","Bypass Teleported to part")
				cmdlp.Character.Humanoid.Jump = true
				game:GetService("TweenService"):Create(cmdlp.Character.HumanoidRootPart, TweenInfo.new(1, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
				break
			end
		end
	end
	
	HATGIVE = false
	function useCommand.hatgiverspam()
		opx("-","Now spamming hat givers")
		local HATS = {}
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("TouchTransmitter") and v.Parent.Name ~= "Handle" then 
				local Check1, Check2 = v.Parent:FindFirstChildOfClass("SpecialMesh"), v.Parent:FindFirstChildOfClass("Script")
				if Check1 ~= nil and Check2 ~= nil then
					HATS[#HATS+1] = v.Parent
				end
			end
		end
		local HRP = cmdlp.Character.HumanoidRootPart
		HATGIVE = true
		local Number = 0
		repeat game:GetService("RunService").RenderStepped:Wait()
			for i,v in pairs(HATS) do
				if firetouchinterest then
					firetouchinterest(HRP, HATS[i], 1)
					HATS[i].CFrame = HRP.CFrame
					HATS[i].CanCollide = false
					HATS[i].Transparency = 1
				else
					HATS[i].CFrame = HRP.CFrame
					HATS[i].CanCollide = false
					HATS[i].Transparency = 1
				end
			end
			for i,v in pairs(cmdlp.Character:GetChildren()) do
				if v:IsA("Hat" or "Accessory") then 
					v.Parent = workspace
					Number = Number+1 
				end
			end
		until HATGIVE == false
	end
	
	function useCommand.unhatgiverspam()
		HATGIVE = false
		opx("-","No longer spamming hat givers")
	end
	
	function useCommand.playingaudios()
		opx("-","Showing playing audios")
		xaudios = ""
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("Sound") and v.Playing then
				xaudios = xaudios..v.SoundId.."\n"
			end
		end
		opxL("Audios Playing",xaudios)
	end
	
	local notouchTouches = {}
	function useCommand.notouch()
		opx("-","Disabled all touchinterests")
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("TouchTransmitter") then
				table.insert(notouchTouches, {part = v, pare = v.Parent})
				v.Parent = game:GetService("PolicyService")
			end
		end
	end
	
	function useCommand.yestouch()
		opx("-","Enabled all touchinterests")
		for i,v in pairs(notouchTouches) do
			table.remove(notuchTouches, i)
			v.part.Parent = v.pare
		end
	end
	
	function useCommand.testaudio()
		if not cmdnum(arguments[2]) then
			opx("*","2 arguments are required!")
			return
		end
		opx("-","Now testing audio")
		local Sound2 = Instance.new("Sound",game:GetService("Lighting"))
		Sound2.SoundId = "http://www.roblox.com/asset/?id="..arguments[2]
		Sound2:Play()
	end
	
	function useCommand.debugging()
		if arguments[2] == "on" then
			Debugging = true
			opx("-","Debugging turned on")
		elseif arguments[2] == "off" then
			Debugging = false
			opx("-","Debugging turned off")
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.freereach()
		if not cmdnum(arguments[4]) then
			opx("*","4 arguments are required!")
			return
		end
		for i,v in pairs(cmdlp.Character:GetDescendants()) do
			if v:IsA("Tool") then
				currentToolSize = v.Handle.Size
				local a = Instance.new("SelectionBox",v.Handle)
				a.Name = "SelectionBoxCreated"
				a.Adornee = v.Handle
				a.Color3 = Color3.new(255, 255, 255)
				a.LineThickness = 0.01
				v.Handle.Massless = true
				v.Handle.Size = Vector3.new(arguments[2],arguments[3],arguments[4])
				v.GripPos = Vector3.new(0,0,0)
				v.Parent = cmdlp.Backpack
				v.Parent = cmdlp.Character
			end
		end
		opx("-","Reach set")
	end
	
	function useCommand.robloxqtversion()
		opx("-",game:HttpGet("http://setup.roblox.com/versionQTStudio"))
	end
	
	function useCommand.robloxfromdiscordid()
		if not cmdnum(arguments[2]) then
			opx("*","2 arguments are required!")
			return
		end
		local URL = ("https://verify.eryn.io/api/user/"..arguments[2])
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL))
		opx("-","User: "..cmdp:GetNameFromUserIdAsync(Http.robloxId))
	end
	
	function useCommand.teleportstring()
		if arguments[2] == "cb" or "copy" then
			opx("-","game:GetService('TeleportService'):TeleportToPlaceInstance("..game.PlaceId..",'"..game.JobId.."',game:GetService('Players').LocalPlayer)")
			setclipboard("game:GetService('TeleportService'):TeleportToPlaceInstance("..game.PlaceId..",'"..game.JobId.."',game:GetService('Players').LocalPlayer)")
		else
			opx("-","game:GetService('TeleportService'):TeleportToPlaceInstance("..game.PlaceId..",'"..game.JobId.."',game:GetService('Players').LocalPlayer)")
		end
	end
	
	function CheckBadges(UserId)
		local TopBadge = "1"
		local Badges = {}
		local URL = ("https://badges.roblox.com/v1/users/"..UserId.."/badges?limit=100&sortOrder=Asc")
		local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL))
		local RAP = 0
		function ListItems(Look)
			for i,v in pairs(Look.data) do
				if v.id ~= nil then Badges[#Badges+1] = v.id end
			end
		end
		opx("-","Checking badges page 0")
		ListItems(Http)
		for i = 1,5000 do
			opx("-","Checking badges page "..i)
			if NoLongerLooking == true then break end
			if Http.nextPageCursor ~= null then
				Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL.."&cursor="..Http.nextPageCursor))
				ListItems(Http)
			else
				TopBadge = Badges[#Badges]
				break
			end
		end
		if TopBadge ~= "1" then return TopBadge else return "sorry" end
	end
	
	local Online = true
	function CheckOnlineStatus(UserId)
		Online = true
		pcall(function()
			Http2 = game:GetService("HttpService"):JSONDecode(game:HttpGet("http://api.roblox.com/users/"..UserId.."/onlinestatus"))
			if Http2.IsOnline == true then Online = "true" else Online = "false" end
		end)
		return Online
	end
	
	local NoLongerLooking = true
	function useCommand.badgesnipe()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		local UserStr = arguments[2]
		local User = cmdp:GetUserIdFromNameAsync(arguments[2])
		NoLongerLooking = false
		if CheckOnlineStatus(User) ~= "true" then
			opx("*","User is not online?")
			return
		end
		local i = 0
		repeat i = i + 1
			if CheckOnlineStatus(User) ~= "true" then
				opx("*","User is no longer online.")
				NoLongerLooking = true
				break
			end
			if NoLongerLooking == true then break end
			pcall(function()
				opx("-","Re-running badge check...")
				CurrentBadger = CheckBadges(User)
				if CurrentBadger ~= "sorry" then
					if CurrentBadge ~= CurrentBadger then
						opx("-","New badge detected on profile, searching linked game...")
						pcall(function() HttpBadge = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://badges.roblox.com/v1/badges/"..CurrentBadger)) end)
						opx("-",HttpBadge.awardingUniverse.rootPlaceId)
						local PlaceId = HttpBadge.awardingUniverse.rootPlaceId
						arguments = {"",UserStr,PlaceId}
						useCommand.streamsnipe()
					end
					CurrentBadge = CurrentBadger
				end
			end)
			wait(5)
		until NoLongerLooking
	end
	
	function useCommand.copyoutputlarger()
		if cmdnum(arguments[3]) then
			local start = arguments[2]
			local breaker = arguments[3]
			setclipboard(opxScrolling.Text:sub(start,breaker))
			opx("-","Copied latest output larger")
		else
			setclipboard(opxScrolling.Text)
			opx("-","Copied latest output larger")
		end
	end
	
	function useCommand.unfriend()
		if arguments[2] == "all" then
			opx("-","Removed friendship from everyone")
			for i,v in pairs(cmdp:GetPlayers()) do
				cmdlp:RevokeFriendship(v)
			end
		else
			target = findplr(arguments[2])
			if target then
				opx("-","Removed friendship from "..target.Name)
				cmdlp:RevokeFriendship(target)
			else
				opx("*","Player does not exist!")
			end
		end
	end
	
	function useCommand.cutforceplayloop()
		fpall = false
		opx("-","Stopped forceplay loop")
	end
	
	function useCommand.rejoinrefresh()
		if not syn.queue_on_teleport then
			opx("*","queue_on_teleport is not supported on your executor!")    
		end
		rejoining = true
		local c = cmdlp.Character.HumanoidRootPart.CFrame
		syn.queue_on_teleport(string.format([[
		game:GetService('ReplicatedFirst'):RemoveDefaultLoadingScreen()
		local playeradded, charadded
		playeradded = game:GetService('Players').PlayerAdded:Connect(function(plr)
			charadded = plr.CharacterAdded:Connect(function(char)
				char:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(%f, %f, %f)
				charadded:Disconnect()
			end)
			playeradded:Disconnect()
		end)
	]], c.X, c.Y, c.Z))
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
		wait(3)
		rejoining = false
	end
	
	function useCommand.rejoinrefreshexecute()
		if not syn.queue_on_teleport then
			opx("*","queue_on_teleport is not supported on your executor!")    
		end
		rejoining = true
		local c = cmdlp.Character.HumanoidRootPart.CFrame
		syn.queue_on_teleport(string.format([[
		game:GetService('ReplicatedFirst'):RemoveDefaultLoadingScreen()
		local playeradded, charadded
		playeradded = game:GetService('Players').PlayerAdded:Connect(function(plr)
			charadded = plr.CharacterAdded:Connect(function(char)
				char:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(%f, %f, %f)
				charadded:Disconnect()
			end)
			playeradded:Disconnect()
		end)
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
	]], c.X, c.Y, c.Z))
		opx("-","Rejoining game")
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, cmdp)
		wait(3)
		rejoining = false
	end
	
	Lines = {}
	function UpdateTracer()
		for i,v in pairs(Lines) do
			v:Remove()
		end
		Lines = {}
		for i,v in pairs(cmdp:GetPlayers()) do 
			if v ~= cmdlp then
				if v and v.Character ~= nil then
					Head = v.Character:FindFirstChild("Head")
					if Head ~= nil then
						local PosChar, withinScreenBounds = workspace.Camera:WorldToViewportPoint(Head.Position)
						if withinScreenBounds then
							local Line = Drawing.new("Line")
							Line.Visible = true
							Line.From = Vector2.new(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y)
							Line.To = Vector2.new(PosChar.X, PosChar.Y)
							Line.Color = Color3.new(255,255,255)
							Line.Thickness = 2
							Line.Transparency = 1
							Lines[#Lines+1] = Line
						end
					end
				end
			end
		end
	end
	
	TracerEnabled = false
	function useCommand.tracers()
		if not Drawing then
			opx("*","Drawing API is not supported on your executor!")
			return
		end
		opx("-","Tracers enabled")
		for i,v in pairs(Lines) do
			v:Remove()
		end
		Lines = {}
		TracerEnabled = true
		while TracerEnabled do
			UpdateTracer()
			game:GetService("RunService").RenderStepped:Wait()
		end
	end
	
	function useCommand.untracers()
		opx("-","Tracers disabled")
		TracerEnabled = false
		for i,v in pairs(Lines) do
			v:Remove()
		end
		Lines = {}
	end
	
	PartLines = {}
	function UpdatePartTracer(partarg,partname)
		for i,v in pairs(PartLines) do
			v:Remove()
		end
		PartLines = {}
		for i,v in pairs(workspace:GetDescendants()) do
			if partarg == "class" then
				if v:IsA("BasePart") and partname == v.ClassName then
					if partname == "ClickDetector" or partname == "TouchInterest" then v = v.Parent end
					local PosChar, withinScreenBounds = workspace.Camera:WorldToViewportPoint(v.Position)
					if withinScreenBounds then
						local Line = Drawing.new("Line")
						Line.Visible = true
						Line.From = Vector2.new(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y)
						Line.To = Vector2.new(PosChar.X, PosChar.Y)
						Line.Color = Color3.new(255,255,255)
						Line.Thickness = 2
						Line.Transparency = 1
						PartLines[#Lines+1] = Line
					end
				end
			elseif partarg == "name" then
				if v:IsA("BasePart") and partname == v.Name then
					local PosChar, withinScreenBounds = workspace.Camera:WorldToViewportPoint(v.Position)
					if withinScreenBounds then
						local Line = Drawing.new("Line")
						Line.Visible = true
						Line.From = Vector2.new(workspace.Camera.ViewportSize.X / 2, workspace.Camera.ViewportSize.Y)
						Line.To = Vector2.new(PosChar.X, PosChar.Y)
						Line.Color = Color3.new(255,255,255)
						Line.Thickness = 2
						Line.Transparency = 1
						PartLines[#Lines+1] = Line
					end
				end
			end
		end
	end
	
	PartTracerEnabled = false
	function useCommand.parttracers()
		if not Drawing then
			opx("*","Drawing API is not supported on your executor!")
			return
		end
		local arg2 = arguments[2]
		local arg3 = arguments[3]
		opx("-","Part Tracers enabled")
		for i,v in pairs(PartLines) do
			v:Remove()
		end
		PartLines = {}
		PartTracerEnabled = true
		while PartTracerEnabled do
			UpdatePartTracer(arg2,arg3)
			game:GetService("RunService").RenderStepped:Wait()
		end
	end
	
	function useCommand.unparttracers()
		opx("-","Part Tracers disabled")
		PartTracerEnabled = false
		for i,v in pairs(PartLines) do
			v:Remove()
		end
		PartLines = {}
	end
	
	function useCommand.removeroot()
		opx("-","Removed HumanoidRootPart")
		local oind = mt.__index
		local hrp = cmdlp.Character.HumanoidRootPart
		local selves = {
			[hrp.Parent] = true,
			[cmdlp.Character] = true
		}
		local inds = {
			[hrp.Name] = true,
			["HumanoidRootPart"] = true,
			["PrimaryPart"] = true
		}
		setreadonly(mt, false)
		mt.__index = newcclosure(function(self,ind,...)
			if not checkcaller() and selves[self] and inds[ind] then
				return hrp
			end
			return oind(self,ind,...)
		end)
		setreadonly(mt, true)
		cmdlp.Character.HumanoidRootPart.Parent = workspace
	end
	
	function useCommand.logchat()
		local msg = ""
		if arguments[2] then
			msg = getstring(2)
		else
			msg = string.rep("CMD-X Gang", 100)
		end
		require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire(msg)
		opx("-","Chatted to logs")
	end
	
	function useCommand.logspam()
		local msg = ""
		if arguments[2] then
			msg = getstring(2)
		else
			msg = string.rep("CMD-X Gang", 100)    
		end
		mostSpam = game:GetService("RunService").Heartbeat:Connect(function()
			require(cmdlp.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire(msg)
		end)
		opx("-","Now spamming logs")
	end
	
	function useCommand.unlogspam()
		opx("-","Stopped spamming logs")
		mostSpam:Disconnect()    
	end
	
	function useCommand.multispam()
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		speedofthespam = permspamspeed
		spammies = true
		local topstring = getstring(2):split(",")
		opx("-","You are now spamming")
		repeat wait(speedofthespam)
			cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(topstring[math.random(1,#topstring)], "All")
		until spammies == false
	end
	
	function useCommand.antifling()
		if antifling == nil then 
			antifling = true
		else
			antifling = not antifling
		end
		local function Collisionless(person)
			if antifling and person.Character then
				for _,child in pairs(person.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide then
						child.CanCollide = false
					end
				end
			end
		end
		for _,v in pairs(cmdp:GetPlayers()) do
			if v ~= cmdlp then
				local antifling = game:GetService('RunService').Stepped:connect(function()
					Collisionless(v)
				end)
			end
		end
		cmdp.PlayerAdded:Connect(function()
			if v ~= cmdlp and antifling then
				local antifling = game:GetService('RunService').Stepped:connect(function()
					Collisionless(v)
				end)
			end
		end)
		if antifling then
			opx("-","Antifling enabled.")
		else
			opx("-","Antifling disabled.")
		end
	end
	
	function useCommand.nofall()
		if _G.connections["nofall"] then
			opx("*", "Nofall is already enabled.")
			return
		end
		cmdlp.Character.Humanoid:SetStateEnabled(1, false)
		cmdlp.Character.Humanoid:SetStateEnabled(0, false)
		_G.connections["nofall"] = cmdlp.CharacterAdded:Connect(function(char)
			wait()
			char.Humanoid:SetStateEnabled(1, false)
			char.Humanoid:SetStateEnabled(0, false)
		end)
		opx("-","Falling has been disabled.")
	end
	
	function useCommand.yesfall()
		if not _G.connections["nofall"] then
			opx("*", "Nofall is not enabled.")
			return
		end
		cmdlp.Character.Humanoid:SetStateEnabled(1, true)
		cmdlp.Character.Humanoid:SetStateEnabled(0, true)
		_G.connections["nofall"]:Disconnect()
		opx("-","Falling has been enabled.")
	end
	
	function useCommand.nofallbp()
		if _G.connections["nofallbp"] then
			opx("*", "Nofall bypass is already enabled")
			return
		end
		_G.connections["nofallbp"] = cmdlp.Character.Humanoid.StateChanged:Connect(function(z, new)
			if new == Enum.HumanoidStateType.FallingDown or new == Enum.HumanoidStateType.Ragdoll then
				cmdlp.Character.Humanoid:ChangeState(z)
			end
		end)
		opx("-","Antifall bypass enabled")
	end
	
	function useCommand.yesfallbp()
		if not _G.connections["nofallbp"] then
			opx("*","Antifall has not been enabled yet")
			return
		end
		_G.connections["nofallbp"]:Disconnect()
		opx("-","Antifall bypass disabled")
	end
	
	function useCommand.fixbubblechat()
		if _G.connections["bcfix"] then
			opx("*","Bubble chat has already been fixed")
			return
		end
		if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
			_G.connections["bcfix"] = cmdlp.PlayerGui.BubbleChat.DescendantAdded:connect(function(msg)
				if msg:IsA("TextLabel") and msg.Name == "BubbleText" then
					msg.TextSize = 21
				end
			end)
		end
		opx("-","Bubble chat has been fixed.")
	end
	
	function useCommand.unfixbubblechat()
		if not _G.connections["bcfix"] then
			opx("*","Bubble chat isn't fixed.")
			return
		end
		_G.connections["bcfix"]:Disconnect()
		_G.connections["bcfix"] = nil
		opx("*","Bubble chat has been unfixed.")
	end
	
	function useCommand.darkbubbles()
		if _G.connections["darkbubbles"] then
			opx("*","Dark bubbles are already enabled.")
			return
		end
		if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
			_G.connections["darkbubbles"] = cmdlp.PlayerGui.BubbleChat.DescendantAdded:connect(function(msg)
				if msg:IsA("ImageLabel") and msg.Name == "ChatBubble" or msg:IsA("ImageLabel") and msg.Name == "ChatBubbleTail" or msg:IsA("ImageLabel") and msg.Name == "SmallTalkBubble" then
					msg.ImageColor3 = Color3.fromRGB(0,0,0)
				end
				if msg:IsA("TextLabel") and msg.Name == "BubbleText" then
					msg.TextColor3 = Color3.fromRGB(255,255,255)
					msg.BackgroundColor3 = Color3.fromRGB(0,0,0)
				end
			end)
		end
		opx("-","Dark bubbles have been enabled.")
	end
	
	function useCommand.undarkbubbles()
		if not _G.connections["darkbubbles"] then
			opx("*","Dark bubbles are not enabled.")
		end
		_G.connections["darkbubbles"]:Disconnect()
		_G.connections["darkbubbles"] = nil
		opx("-","Dark bubbles have been disabled.")
	end
	
	function useCommand.colourbubbles()
		if arguments[7] then
			if _G.connections["darkbubbles"] or _G.connections["colourbubbles"] then
				opx("*","Coloured bubbles are already enabled.")
				return
			end
			local x,y,z = arguments[2],arguments[3],arguments[4]
			local c,m,d = arguments[5],arguments[6],arguments[7]
			if cmdlp.PlayerGui:FindFirstChild("BubbleChat") then
				_G.connections["colourbubbles"] = cmdlp.PlayerGui.BubbleChat.DescendantAdded:connect(function(msg)
					if msg:IsA("ImageLabel") and msg.Name == "ChatBubble" or msg:IsA("ImageLabel") and msg.Name == "ChatBubbleTail" or msg:IsA("ImageLabel") and msg.Name == "SmallTalkBubble" then
						msg.ImageColor3 = Color3.fromRGB(x,y,z)
					end
					if msg:IsA("TextLabel") and msg.Name == "BubbleText" then
						msg.TextColor3 = Color3.fromRGB(c,m,d)
						msg.BackgroundColor3 = Color3.fromRGB(x,y,z)
					end
				end)
			end
			opx("-","Colour bubbles have been enabled.")
		else
			opx("*","7 arguments are required!")
		end
	end
	
	function useCommand.uncolourbubbles()
		if not _G.connections["colourbubbles"] then
			opx("*","Colour bubbles are not enabled.")
		end
		_G.connections["colourbubbles"]:Disconnect()
		_G.connections["colourbubbles"] = nil
		opx("-","Colour bubbles have been disabled.")
	end
	
	function useCommand.tweenwalkspeed()
		if arguments[2] then
			walkspeedSet = arguments[2]
			opx("-","Tween Walkspeed is now on")
			WaitTimer = .4
			cmdlp.Character.Humanoid.WalkSpeed = 4
			function Accelerate()
				if cmdlp.Character.Humanoid.MoveDirection ~= Vector3.new(0, 0, 0) and MoveDirDB == false and cmdlp.Character.Humanoid.WalkSpeed < walkspeedSet then
					MoveDirDB = true
					while cmdlp.Character.Humanoid.MoveDirection ~= Vector3.new(0, 0, 0) and cmdlp.Character.Humanoid.WalkSpeed < walkspeedSet do
						cmdlp.Character.Humanoid.WalkSpeed = cmdlp.Character.Humanoid.WalkSpeed + 1
						wait(WaitTimer)
						WaitTimer = .4 / 1.1
					end
					MoveDirDB = false
				elseif cmdlp.Character.Humanoid.MoveDirection == Vector3.new(0, 0, 0) then
					WaitTimer = .4
					cmdlp.Character.Humanoid.WalkSpeed = 4
				end
			end
			tws = cmdlp.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(Accelerate)
		else
			opx("*","2 arguments are required!")
		end
	end
	
	function useCommand.untweenwalkspeed()
		opx("-","Tween Walkspeed is no longer on")
		cmdlp.Character.Humanoid.WalkSpeed = 16
		tws:Disconnect()
	end
	
	function useCommand.combo()
		if arguments[2] then
			opx("-","Ran combo "..arguments[2])
			for i,v in pairs(combos) do
				if v.N == arguments[2] then
					arguments = v.CMD:split(" ")
					useCommand[arguments[1]]()
				end
			end
		else
			opx("*","2 arguments are required")
		end
	end
	
	function useCommand.combos()
		xCombos = ""
		for i,v in pairs(combos) do
			xCombos = xCombos..v.N..", "
		end
		opx("-","Listed combos")
		opxL("Combos",xCombos)
	end
	
	function useCommand.combonew()
		if arguments[3] then
			opx("-","Added "..arguments[2] .." to combos")
			table.insert(combos, {N = arguments[2], CMD = getstring(3)})
		else
			opx("*","3 arguments are required!")
		end
	end
	
	function useCommand.combodel()
		if arguments[2] then
			for i,v in pairs(combos) do
				if v.N == arguments[2] then
					table.remove(combos, i)
				end
			end
			opx("-","Removed "..arguments[2].." from combos")
		else
			opx("*","2 arguments are required")
		end
	end
	
	function useCommand.combosclr()
		opx("-","Cleared combos list")
		combos = {}
		updatesaves()
	end
	
	function useCommand.chatprivacypublic()
		local gethiddenproperty = gethiddenproperty or get_hidden_property
		if not gethiddenproperty then
			opx("*","Gethiddenproperty is needed!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		local GetCPM = gethiddenproperty(target,"ChatPrivacyMode")
		if GetCPM == Enum.ChatPrivacyMode.AllUsers then
			opx("-",target.Name.."'s privacy mode is Everyone")
			cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.."'s privacy mode is Everyone","All")
		elseif GetCPM == Enum.ChatPrivacyMode.Friends then
			opx("-",target.Name.."'s privacy mode is Friends")
			cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.."'s privacy mode is Friends","All")
		elseif GetCPM == Enum.ChatPrivacyMode.NoOne then
			opx("-",target.Name.."'s privacy mode is No-one")
			cmdrs.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(target.Name.."'s privacy mode is No-one","All")
		end
	end
	
	function useCommand.chatprivacyprivate()
		local gethiddenproperty = gethiddenproperty or get_hidden_property
		if not gethiddenproperty then
			opx("*","Gethiddenproperty is needed!")
			return
		end
		if not arguments[2] then
			opx("*","2 arguments are required!")
			return
		end
		target = findplr(arguments[2])
		if not target then
			opx("*","Player does not exist!")
			return
		end
		local GetCPM = gethiddenproperty(target,"ChatPrivacyMode")
		if GetCPM == Enum.ChatPrivacyMode.AllUsers then
			opx("-",target.Name.."'s privacy mode is Everyone")
		elseif GetCPM == Enum.ChatPrivacyMode.Friends then
			opx("-",target.Name.."'s privacy mode is Friends")
		elseif GetCPM == Enum.ChatPrivacyMode.NoOne then
			opx("-",target.Name.."'s privacy mode is No-one")
		end
	end
	
	function useCommand.chatprivacy()
		local sethiddenproperty = sethiddenproperty or set_hidden_property
		if not sethiddenproperty then
			opx("*","Sethiddenproperty is needed!")
			return
		end
		if not arguments[2] then
			opx("*","A proper preset is required!")
			return
		end
		opx("-","Set your Chat Privacy to "..arguments[2])
		sethiddenproperty(cmdlp,"ChatPrivacyMode",Enum.ChatPrivacyMode[arguments[2]])    
	end
	
	function useCommand.masschatprivacy()
		local gethiddenproperty = gethiddenproperty or get_hidden_property
		if not gethiddenproperty then
			opx("*","Gethiddenproperty is needed!")
			return
		end
		local xCPM = ""
		for i,v in pairs(cmdp:GetPlayers()) do
			local GetCPM = gethiddenproperty(v,"ChatPrivacyMode")
			if GetCPM == Enum.ChatPrivacyMode.AllUsers then
				xCPM = xCPM..v.Name.."'s privacy mode is Everyone\n"
			elseif GetCPM == Enum.ChatPrivacyMode.Friends then
				xCPM = xCPM..v.Name.."'s privacy mode is Friends\n"
			elseif GetCPM == Enum.ChatPrivacyMode.NoOne then
				xCPM = xCPM..v.Name.."'s privacy mode is No-one\n"
			end
		end
		opxL("Chat Privacy",xCPM)
	end
	
	local gravity = workspace.Gravity
	function useCommand.sitfly()
		workspace.Gravity = 0
		cmdlp.Character.Humanoid.Sit = true
		opx("-", "Now sitflying")
	end
	
	function useCommand.platformfly()
		workspace.Gravity = 0
		cmdlp.Character.Humanoid.PlatformStand = true
		opx("-", "Now platformflying")
	end
	
	function useCommand.unsitfly()
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		opx("-", "No longer sitflying")
	end
	
	function useCommand.unplatformfly()
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.PlatformStand = false
		opx("-", "No longer platformflying")
	end
	
	function useCommand.hotkeysitflyhold()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		_G.connections["sitfly"]["down"] = game:GetService("UserInputService").InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = 0
				cmdlp.Character.Humanoid.Sit = true
			end
		end)
		_G.connections["sitfly"]["up"] = game:GetService("UserInputService").InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = gravity
				cmdlp.Character.Humanoid.Sit = false
			end
		end)
		opx("-", "Sitfly enabled on key "..arguments[2]:upper().." on hold")
	end
	
	function useCommand.hotkeyplatformflyhold()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		_G.connections["sitfly"]["down"] = game:GetService("UserInputService").InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = 0
				cmdlp.Character.Humanoid.PlatformStand = true
			end
		end)
		_G.connections["sitfly"]["up"] = game:GetService("UserInputService").InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				workspace.Gravity = gravity
				cmdlp.Character.Humanoid.PlatformStand = false
			end
		end)
		opx("-", "Platformfly enabled on key "..arguments[2]:upper().." on hold")
	end
	
	function useCommand.hotkeysitflytoggle()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		local toggled = true
		_G.connections["sitfly"]["down"] = game:GetService("UserInputService").InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				toggled = not toggled
				if not toggled then
					workspace.Gravity = 0
					cmdlp.Character.Humanoid.Sit = true
				else
					workspace.Gravity = gravity
					cmdlp.Character.Humanoid.Sit = false
				end
			end
		end)
		opx("-", "Sitfly enabled on key "..arguments[2]:upper().." on toggle")
	end
	
	function useCommand.hotkeyplatformflytoggle()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["sitfly"] then _G.connections["sitfly"] = {} end
		for _,v in pairs(_G.connections["sitfly"]) do
			v:Disconnect()
		end
		_G.connections["sitfly"] = {}
		workspace.Gravity = gravity
		cmdlp.Character.Humanoid.Sit = false
		cmdlp.Character.Humanoid.PlatformStand = false
		local toggled = true
		_G.connections["sitfly"]["down"] = game:GetService("UserInputService").InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				toggled = not toggled
				if not toggled then
					workspace.Gravity = 0
					cmdlp.Character.Humanoid.PlatformStand = true
				else
					workspace.Gravity = gravity
					cmdlp.Character.Humanoid.PlatformStand = false
				end
			end
		end)
		opx("-", "Platformfly enabled on key "..arguments[2]:upper().." on toggle")
	end
	
	function useCommand.spoofgrouprole()
		if _G.rolehook then
			opx("*","Spoof group role already enabled!")
			return
		end
		local xRole = "Owner"
		if arguments[2] then
			xRole = arguments[2]    
		end
		opx("-","Spoofed role")
		local mt = getrawmetatable(game)
		_G.rolehook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self, ...)
			if not checkcaller() and self == cmdlp then
				if getnamecallmethod() == "GetRankInGroup" then
					return 255
				elseif getnamecallmethod() == "GetRoleInGroup" then
					return xRole
				end
				return _G.rolehook(self, ...)
			end
			return _G.rolehook(self, ...)
		end)
		setreadonly(mt, true)
	end
	
	function useCommand.unspoofgrouprole()
		if not _G.rolehook then
			opx("*", "Spoof group role is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.rolehook
		setreadonly(mt, true)
		opx("-", "Spoof group role is now disabled.")
		_G.rolehook = nil    
	end
	
	function useCommand.nogameteleport()
		if _G.gtphook then
			opx("*","No game teleport already enabled!")
			return
		end
		opx("-","No game teleport is now enabled")
		local mt = getrawmetatable(game)
		_G.gtphook = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(self, ...)
			if not checkcaller() and getnamecallmethod() == "Teleport" then
				return nil
			end
			return _G.gtphook(self, ...)
		end)
		setreadonly(mt, true)    
	end
	
	function useCommand.yesgameteleport()
		if not _G.gtphook then
			opx("*", "No game teleport is not enabled.")
			return
		end
		setreadonly(mt, false)
		mt.__namecall = _G.gtphook
		setreadonly(mt, true)
		opx("-", "No game teleport is now disabled.")
		_G.gtphook = nil   
	end
	
	function useCommand.hotkeyflyhold()
		if not arguments[2] then
			opx("*", "2 arguments required")
			return
		end
		if not _G.connections["fly"] then _G.connections["fly"] = {} end
		for _,v in pairs(_G.connections["fly"]) do
			v:Disconnect()
		end
		_G.connections["fly"] = {}
		_G.connections["fly"]["down"] = game:GetService("UserInputService").InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				FLYING = true
				sFLY()
			end
		end)
		_G.connections["fly"]["up"] = game:GetService("UserInputService").InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode[arguments[2]:upper()] then
				FLYING = false
			end
		end)
		opx("-", "Fly enabled on key "..arguments[2]:upper().." on hold")
	end
	
	function useCommand.drawingnew()
		if newDrawing == Drawing then
			opx("*", "Already using new drawing.")
			return
		end
		if Drawing then
			setreadonly(Drawing, false)
		end
		Drawing = newDrawing
		setreadonly(Drawing, true)
		opx("-", "Now using new Drawing API")
	end
	
	function useCommand.spoofclientid()
		if _G.clid then
			opx("*","ClientID already spoofed")
			return
		end
		opx("-","ClientID spoofed")
		local mt = getrawmetatable(game)
		_G.clid = mt.__namecall
		setreadonly(mt, false)
		local genid = arguments[2]
		mt.__namecall = newcclosure(function(self, ...)
			if getnamecallmethod() == 'GetClientId' then 
				return genid
			end
			return _G.clid(self, ...)
		end)
		setreadonly(mt, true)
	end
	function useCommand.randomspoofclientid()
		if _G.clid then
			opx("*","ClientID already spoofed")
			return
		end
		opx("-","ClientID spoofed")
		local mt = getrawmetatable(game)
		_G.clid = mt.__namecall
		setreadonly(mt, false)
		local genid = math.random(1,1000000000)
		mt.__namecall = newcclosure(function(self, ...)
			if getnamecallmethod() == 'GetClientId' then 
				return genid
			end
			return _G.clid(self, ...)
		end)
		setreadonly(mt, true)
	end
	
	function useCommand.unspoofclientid()
		if not _G.clid then
			opx("*","ClientID is not already spoofed")
			return
		end
		opx("-","ClientID no longer spoofed")
		setreadonly(mt, false)
		mt.__namecall = _G.clid
		setreadonly(mt, true)
		_G.clid = nil
	end
	
	function useCommand.drawingold()
		if not oldDrawing then
			opx("*", "Your exploit doesn't have it's own Drawing API.")
			return
		end
		if oldDrawing == Drawing then
			opx("*", "Already using your exploits Drawing API.")
			return
		end
		if Drawing then
			setreadonly(Drawing, false)
		end
		Drawing = oldDrawing
		setreadonly(Drawing, false)
		opx("-", "Now using your exploits Drawing API")
	end
	
	user.Changed:connect(function()
		user.Text = user.Text:sub(1,13)..">"
	end)
	---------------------------------------|
	-- GUI Hotkeys: -----------------------|
	cmdm.KeyDown:connect(function(key)
		if key == hotkeyopen then
			if holder.Visible == false then
				if force == true then
					wait(.1)
					output.Visible = true
				end
				holder.Visible = true
			else
				if output.Visible == true then
					force = true
				else
					force = false
				end
				output.Visible = false
				holder.Visible = false
			end
		elseif key == hotkeyopx and _G.dontTween == false then
			if output.Visible == true then
				for i = 1,10 do
					wait(.1)
					for i,v in pairs(output:GetDescendants()) do
						if v:IsA("ImageLabel") then
							v.ImageTransparency = v.ImageTransparency + 0.1
							v:TweenSize(UDim2.new(0,525,0,0), "InOut", "Quart",1)
						elseif v:IsA("TextLabel") then
							v.TextTransparency = v.TextTransparency + 0.1
						end
					end
					output.Transparency = output.Transparency + 0.1
					output:TweenPosition(UDim2.new(0, output.Position.X.Offset, 0, 290), "InOut", "Quart",1)
					output:TweenSize(UDim2.new(0,525,0,0), "InOut", "Quart",1)
				end
				output.Visible = false
				holder.Active = false
			else
				output.Visible = true
				holder.Active = true
				for i = 1,10 do
					wait(.1)
					for i,v in pairs(output:GetDescendants()) do
						if v:IsA("ImageLabel") then
							v.ImageTransparency = v.ImageTransparency - 0.1
							v:TweenSize(UDim2.new(0,525,0,253), "InOut", "Quart",1)
						elseif v:IsA("TextLabel") then
							v.TextTransparency = v.TextTransparency - 0.1
						end
					end
					output.Transparency = output.Transparency - 0.1
					output:TweenPosition(UDim2.new(0, -8, 0, 19), "InOut", "Quart",1)
					output:TweenSize(UDim2.new(0,525,0,253), "InOut", "Quart",1)
				end
			end
		elseif key == hotkeyfocus then
			cmd:CaptureFocus()
			game:GetService("RunService").RenderStepped:Wait()
			cmd.Text = ""
		elseif key == hotkeyfly then
			FLYING = not FLYING
			cmdlp.Character.Humanoid.PlatformStand = not FLYING
			if FLYING then
				sFLY()
				speedofthefly = permflyspeed
			end
		elseif key == hotkeyxray then
			if transparent == true then
				transparent = false
				x(transparent)
			else
				transparent = true
				x(transparent)
			end
		elseif key == hotkeynoclip then
			if Clip == false then
				if Noclipping then
					Noclipping:Disconnect()
				end
				Clip = true
			else
				noclip()
			end
		elseif key == hotkeyaimbot then
			if Enabledaimbot == false then
				Enabledaimbot = true
				wait()
				BodyAimbot()
			else
				Enabledaimbot = false
				wait()
				BodyAimbot()
			end
		elseif key == hotkeyesp then
			if ESPenabled == false then
				Find()
				ESPEnabled = true
				while ESPEnabled ~= false do
					wait()
					Find()
				end
			else
				ESPEnabled = false
				Track = false
				for i = 1,10 do
					for i,v in pairs(cmdp:GetPlayers()) do
						for x,y in pairs(v.Character:GetChildren()) do
							if y:IsA("BasePart") then
								y.Material = "Plastic"
							end
						end
					end
					Clear()
				end
			end
		else
			for i,_ in pairs(hkBinds) do
				if key == hkBinds[i].K then
					alignFunctions(hkBinds[i].C)
					arguments = hkBinds[i].C:split(" ")
					local cmdsy = findCmd(arguments[1])
					if cmdsy ~= nil then
						if Debugging == false then
							useCommand[cmdsy]()
						else
							pcall(function() useCommand[cmdsy]() end)
						end
					else
						local invalidString = getstring(1)
						if #invalidString > 38 then
							invalidString = invalidString:sub(1,35).."..."
						end
						opx("*",invalidString.." is not a valid command.")
					end
				end
			end
		end
	end)
	---------------------------------------|
	-- Print Function: --------------------|
	if not AntiCheat.PrintingOff then
		local StarterGui = game:GetService("StarterGui")
		StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = "Welcome to CMD-X, "..cmdlp.Name..".";
			Color = Color3.fromRGB(50, 50, 50);
			Font = Enum.Font.SourceSansBold;TextSize = 25
		})
		StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = "Press U for output and F9 for more info!";
			Color = Color3.fromRGB(100, 100, 100);
			Font = Enum.Font.SourceSansBold;
			TextSize = 20
		})
		StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = "To use chat commands use the prefix '"..prefix.."'";
			Color = Color3.fromRGB(100, 100, 100);
			Font = Enum.Font.SourceSansBold;
			TextSize = 20
		})
	end
	
	if AntiCheat.ScriptDetectOff then opx("*","Script detection is off due to anticheat") end
	if AntiCheat.TurboNameSpam then opx("*","Turbo name spam has been turned on due to anticheat") end
	if AntiCheat.HideParentInExploit then opx("*","Hidden parent in exploit due to anticheat") end
	if AntiCheat.HideParentInPG then opx("*","Hidden parent in playergui due to anticheat") end
	if AntiCheat.AutoAntiKick then opx("*","Turned on antikick due to anticheat") end
	if AntiCheat.RemoveScripts then opx("*","Removed local scripts due to anticheat") end
	if AntiCheat.IntroAudioOff then opx("*","Turned intro off due to anticheat") end
	if AntiCheat.DontJumbleNames then opx("*","Jumble names is off due to anticheat") end
	if AntiCheat.OneTimeScramble then opx("*","Scrambled names once due to anticheat") end
	if AntiCheat.PrintingOff then opx("*","Printing has been turned off due to anticheat") end
	if AntiCheat.Warning1 then opx("*","This game is known to have a float/fly anticheat becareful") end
	
	---------------------------------------|
	-- Start CMDs: ------------------------|
	if #enterCMD > 0 then
		for i = 1,#enterCMD do
			arguments = enterCMD[i].N:split(" ")
			local cmdsy = findCmd(arguments[1])
			if cmdsy ~= nil then
				if Debugging == false then
					useCommand[cmdsy]()
				else
					pcall(function() useCommand[cmdsy]() end)
				end
			else
				invalidString = enterCMD[i].N
				if #invalidString > 38 then
					invalidString = invalidString:sub(1,35).."..."
				end
				opx("*",invalidString.." is not a valid command.")
			end
		end
	end
	user.Changed:connect(function()
		user.Text = user.Text:sub(1,13)..">"
	end)
	cmd.Focused:connect(function() 
		local NumberOf = #History
		cmduis.InputBegan:Connect(function()
			if cmduis:IsKeyDown(Enum.KeyCode.LeftShift) and cmduis:IsKeyDown(Enum.KeyCode.Backspace) then
				cmd.Text = ""
			elseif cmduis:IsKeyDown(Enum.KeyCode.Up) then
				if #History ~= 0 and NumberOf ~= 0 then
					cmd.Text = History[NumberOf]
					NumberOf = NumberOf - 1
				end
			end
		end)
	end)
	
	tabs = holder
	mou = cmdm
	createDrag(tabs)
	
	---------------------------------------|
	-- Themes: ----------------------------|
	
	styleAS = dStyle:split(" ")
	
	function getAsset(ID)
		return("http://www.roblox.com/Thumbs/Asset.ashx?format=png&width=420&height=420&assetId="..ID)
	end
	
	if dStyle == "rounded" then
		output.Style = Enum.FrameStyle.RobloxRound
	elseif dStyle == "squared" then
		output.Style = Enum.FrameStyle.RobloxSquare
	elseif dStyle == "blended" then
		output.Style = Enum.FrameStyle.Custom
	elseif dStyle == "smalled" then
		output.Style = Enum.FrameStyle.DropShadow
	elseif dStyle == "lightblue" then
		entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
		output1.TextColor3 = Color3.fromRGB(1, 1, 1)
		output2.TextColor3 = Color3.fromRGB(1, 1, 1)
		output3.TextColor3 = Color3.fromRGB(1, 1, 1)
		output4.TextColor3 = Color3.fromRGB(1, 1, 1)
		output5.TextColor3 = Color3.fromRGB(1, 1, 1)
		output6.TextColor3 = Color3.fromRGB(1, 1, 1)
		output7.TextColor3 = Color3.fromRGB(1, 1, 1)
		output8.TextColor3 = Color3.fromRGB(1, 1, 1)
		output9.TextColor3 = Color3.fromRGB(1, 1, 1)
		cmd.TextColor3 = Color3.fromRGB(1,1,1)
		cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
		output.Style = Enum.FrameStyle.ChatBlue
	elseif dStyle == "lightgreen" then
		entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
		output1.TextColor3 = Color3.fromRGB(1, 1, 1)
		output2.TextColor3 = Color3.fromRGB(1, 1, 1)
		output3.TextColor3 = Color3.fromRGB(1, 1, 1)
		output4.TextColor3 = Color3.fromRGB(1, 1, 1)
		output5.TextColor3 = Color3.fromRGB(1, 1, 1)
		output6.TextColor3 = Color3.fromRGB(1, 1, 1)
		output7.TextColor3 = Color3.fromRGB(1, 1, 1)
		output8.TextColor3 = Color3.fromRGB(1, 1, 1)
		output9.TextColor3 = Color3.fromRGB(1, 1, 1)
		cmd.TextColor3 = Color3.fromRGB(1,1,1)
		cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
		output.Style = Enum.FrameStyle.ChatGreen
	elseif dStyle == "lightred" then
		entry.BackgroundColor3 = Color3.fromRGB(170, 170, 170)
		output1.TextColor3 = Color3.fromRGB(1, 1, 1)
		output2.TextColor3 = Color3.fromRGB(1, 1, 1)
		output3.TextColor3 = Color3.fromRGB(1, 1, 1)
		output4.TextColor3 = Color3.fromRGB(1, 1, 1)
		output5.TextColor3 = Color3.fromRGB(1, 1, 1)
		output6.TextColor3 = Color3.fromRGB(1, 1, 1)
		output7.TextColor3 = Color3.fromRGB(1, 1, 1)
		output8.TextColor3 = Color3.fromRGB(1, 1, 1)
		output9.TextColor3 = Color3.fromRGB(1, 1, 1)
		cmd.TextColor3 = Color3.fromRGB(1,1,1)
		cmd.PlaceholderColor3 = Color3.fromRGB(1,1,1)
		output.Style = Enum.FrameStyle.ChatRed
	elseif styleAS[1] == "bg" then
		output.Style = Enum.FrameStyle.Custom
		local iBG = Instance.new("ImageLabel", output)
		iBG.BackgroundColor3 = Color3.fromRGB(163,182,165)
		iBG.BackgroundTransparency = 1
		iBG.BorderSizePixel = 0
		iBG.Size = UDim2.new(0, 525, 0, 253)
		output1.Parent = iBG
		output2.Parent = iBG
		output3.Parent = iBG
		output4.Parent = iBG
		output5.Parent = iBG
		output6.Parent = iBG
		output7.Parent = iBG
		output8.Parent = iBG
		output9.Parent = iBG
		iBG.Image = getAsset(styleAS[2])
		iBG.ScaleType = Enum.ScaleType.Crop
	else
		loadstring(game:HttpGet((dStyle),true))()
	end
	
	---------------------------------------|
	-- Chat hook: -------------------------|
	pcall(function()
		local chatbar = cmdlp.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
		local changed
		chatbar.Focused:Connect(function()
			changed = chatbar:GetPropertyChangedSignal("Text"):Connect(function()
				if chatbar.Text:lower():sub(1,#prefix) == prefix then
					cmd.Text = chatbar.Text:sub(#prefix+1,#chatbar.Text)
				elseif chatbar.Text:lower():sub(1,1) == '.' or chatbar.Text:lower():sub(1,1) == ";" then
					cmd.Text = chatbar.Text:sub(2,#chatbar.Text)
				else
					cmd.Text = ""
				end
			end)
		end)
		chatbar.FocusLost:Connect(function()
			changed:Disconnect()
		end)
	end)
	
	cmdlp.Chatted:connect(function(v)
		if Inputting then
			if v:lower():sub(1,#prefix) == prefix then
				cmd:CaptureFocus()
				cmd.Text = v:sub(#prefix+1,#v)
				cmd:ReleaseFocus()
			elseif v:lower():sub(1,1) == '.' then
				cmd:CaptureFocus()
				cmd.Text = v:sub(2,#v)
				cmd:ReleaseFocus()
			end
		end
	end)
	
	for i,v in pairs(AdmIG) do
		cmdp[AdmIG[i]].Chatted:Connect(function(a)
			if a:lower():sub(1,#prefix) == prefix then
				matchCommand = ""
				alignFunctions(a:sub(#prefix+1,#a))
				adminargs = a:sub(#prefix+1,#a):split(" ")
				cmdsy = findCmd(adminargs[1])
				if cmdsy ~= nil then
					if Debugging == false then
						useCommand[cmdsy]()
					else
						pcall(function() useCommand[cmdsy]() end)
					end
				else
					invalidString = getstring(1)
					if #invalidString > 38 then
						invalidString = invalidString:sub(1,35).."..."
					end
					opx("*",invalidString.." is not a valid command.")
				end
				cmd.Text = ""
			elseif a:lower():sub(1,1) == '.' then
				matchCommand = ""
				alignFunctions(a:sub(2,#a))
				adminargs = a:sub(2,#a):split(" ")
				cmdsy = findCmd(adminargs[1])
				if cmdsy then
					if Debugging == false then
						useCommand[cmdsy]()
					else
						pcall(function() useCommand[cmdsy]() end)
					end
				else
					invalidString = getstring(1)
					if #invalidString > 38 then
						invalidString = invalidString:sub(1,35).."..."
					end
					opx("*",invalidString.." is not a valid command.")
				end
				cmd.Text = ""
			end
		end)
	end
	
	pcall(function()
		if AntiCheat.IntroAudioOff == false then
			Sound2:Destroy()
		end
	end)
	
	local counter = 0
	local num = 10
	if not _G.colorSequences then
		_G.colorSequences = {}
		while true do
			local sequence = {}
			for i = 0, num do
				table.insert(
					sequence, i + 1, ColorSequenceKeypoint.new(i / num, Color3.fromRGB(
						127 * math.sin(0.52 * i + counter) + 128,
						127 * math.sin(0.52 * i + 2 * math.pi / 3 + counter) + 128,
						127 * math.sin(0.52 * i + 4 * math.pi / 3 + counter) + 128)
					)
				)
			end
			local new = ColorSequence.new(sequence)
			if #_G.colorSequences > 0 then
				if new == _G.colorSequences[1] then
					break
				end
			end
			table.insert(_G.colorSequences, new)
			counter = counter + 0.0785
			if (counter >= 6.28) then
				counter = 0
			end
		end
	end
	
	if not _G.RGBDev then
		_G.RGBDev = {Lettering = {}, Connections = {}}
	end
	
	function RGBDev(name)
		if _G.RGBDev.Connections[name] then return end
		local plm = game:GetService("CoreGui").RobloxGui:FindFirstChild("PlayerListMaster")
		if not plm or not plm:FindFirstChild("OffsetUndoFrame", true) then
			return
		else
			plm = plm:FindFirstChild("OffsetUndoFrame", true)
		end
		_G.RGBDev.Connections[name] = game:GetService("RunService").RenderStepped:Connect(function()
			for _,v in pairs(plm:GetDescendants()) do
				if v:IsA("TextLabel") and v.Name == "PlayerName" and v.Text == name then
					if not _G.RGBDev.Lettering[v] then
						_G.RGBDev.Lettering[v] = Instance.new("UIGradient", v)
						v.TextColor3 = Color3.fromRGB(255, 255, 255)
					elseif math.ceil(tick()) % 0.5 == 0 then
						_G.RGBDev.Lettering[v].Color = _G.colorSequences[math.ceil((math.fmod(tick(), 1))*80)]
					end
					v.Rotation = math.random(-1,1)
					if Devs[name] then
						v.Parent.Parent.PlayerIcon.Image = "rbxasset://textures/ui/icon_admin-16.png"
					end
				end
			end
		end)
	end
	
	function colorName(name)
		local plm = game:GetService("CoreGui").RobloxGui:FindFirstChild("PlayerListMaster")
		if not plm then
			return
		end
		plm = plm:FindFirstChild("OffsetUndoFrame", true)
		for i,v in pairs(plm:GetDescendants()) do
			if v:IsA("TextLabel") and v.Name == "PlayerName" and v.Text == name then
				if Donors[name] then
					if Tier[Donors[name]].Color == "RGBDev" then
						RGBDev(name)
					else
						v.TextColor3 = Tier[Donors[name]].Color
					end
				end
			end
		end
	end
	
	for _,v in pairs(cmdp:GetPlayers()) do
		if Devs[v.Name] then
			opx("-",v.Name.." is in your server ("..Devs[v.Name].." of CMD-X)")
			RGBDev(v.Name)
		elseif Donors[v.Name] then
			opx("-",v.Name.." is in your server ("..Tier[Donors[v.Name]].Tag..")")
			colorName(v.Name)
		end
	end
	
	cmdp.PlayerAdded:Connect(function(v)
		if Devs[v.Name] then
			opx("-",v.Name.." is in your server ("..Devs[v.Name].." of CMD-X)")
			RGBDev(v.Name)
		elseif Donors[v.Name] then
			opx("-",v.Name.." is in your server ("..Tier[Donors[v.Name]].Tag..")")
			colorName(v.Name)
		end
	end)
	-- End --------------------------------|
	output.Visible = true
	holder.Visible = true
	holder.Active = true
	fakefocus = nil
	for _,v in pairs(cmdlp.PlayerGui:GetDescendants()) do
		if v:IsA("TextBox") and v.Visible == true then
			fakefocus = v
			break
		end
	end
	
	if AntiCheat.CheckFocusBreak == false and fakefocus then
		setreadonly(mt, false)
		local oldncall = mt.__namecall
		mt.__namecall = newcclosure(function(...)
			if not checkcaller() and getnamecallmethod() == "GetFocusedTextBox" or getnamecallmethod() == "TextBoxFocusReleased" and oldncall(...) == cmd then
				return fakefocus
			end
			return oldncall(...)
		end)
		setreadonly(mt, true)
	end
end)

IP.Name = "IP"
IP.Parent = Ola
IP.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
IP.BorderSizePixel = 0
IP.Position = UDim2.new(0.141552508, 0, 0.559405982, 0)
IP.Size = UDim2.new(0, 157, 0, 28)
IP.Font = Enum.Font.Gotham
IP.Text = "Pegar IP"
IP.TextColor3 = Color3.new(1, 1, 1)
IP.TextSize = 14
IP.MouseButton1Down:connect(function()
	
	
	
	
	-- Gui to Lua
	-- Version: 3.2
	
	-- Instances:
	
	local ScreenGui = Instance.new("ScreenGui")
	local Frame = Instance.new("ImageLabel")
	local TextLabel = Instance.new("TextLabel")
	local TextLabel_2 = Instance.new("TextLabel")
	local close = Instance.new("TextButton")
	local TextLabel_3 = Instance.new("TextLabel")
	local TextLabel_4 = Instance.new("TextLabel")
	local username = Instance.new("TextBox")
	local snatch = Instance.new("TextButton")
	local TextButton_Roundify_12px = Instance.new("ImageLabel")
	local miscbut = Instance.new("TextButton")
	local MISC = Instance.new("ImageLabel")
	local TextLabel_5 = Instance.new("TextLabel")
	local TextLabel_6 = Instance.new("TextLabel")
	local snatchall = Instance.new("TextButton")
	local TextButton_Roundify_12px_2 = Instance.new("ImageLabel")
	local TextLabel_7 = Instance.new("TextLabel")
	Frame.Draggable = true
	Frame.Active = true
	Frame.Selectable = true
	local sound = Instance.new("Sound")
	sound.Parent = workspace
	sound.SoundId = "rbxassetid://5292029547"
	sound:Play()
	
	--Properties:
	
	ScreenGui.Parent = game.CoreGui
	
	Frame.Name = "Frame"
	Frame.Parent = ScreenGui
	Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Frame.BackgroundTransparency = 1.000
	Frame.Position = UDim2.new(0.152727276, 0, 0.277641267, 0)
	Frame.Size = UDim2.new(0, 0, 0, 0)
	Frame.ZIndex = 3
	Frame.Image = "rbxassetid://3570695787"
	Frame.ImageColor3 = Color3.fromRGB(20, 20, 20)
	Frame.ScaleType = Enum.ScaleType.Slice
	Frame.SliceCenter = Rect.new(100, 100, 100, 100)
	Frame.SliceScale = 0.120
	Frame.ClipsDescendants = true
	
	TextLabel.Parent = Frame
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Position = UDim2.new(0.026143793, 0, 0.0232558139, 0)
	TextLabel.Size = UDim2.new(0, 22, 0, 24)
	TextLabel.ZIndex = 3
	TextLabel.Font = Enum.Font.SourceSansBold
	TextLabel.Text = "IP"
	TextLabel.TextColor3 = Color3.fromRGB(255, 85, 0)
	TextLabel.TextSize = 25.000
	
	TextLabel_2.Parent = Frame
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.Position = UDim2.new(0.0980392173, 0, 0.0232558139, 0)
	TextLabel_2.Size = UDim2.new(0, 102, 0, 24)
	TextLabel_2.ZIndex = 3
	TextLabel_2.Font = Enum.Font.SourceSansBold
	TextLabel_2.Text = "LOGGER"
	TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.TextSize = 25.000
	
	close.Name = "close"
	close.Parent = Frame
	close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	close.BackgroundTransparency = 1.010
	close.Position = UDim2.new(0.934640527, 0, 0.0232558139, 0)
	close.Size = UDim2.new(0, 20, 0, 20)
	close.ZIndex = 3
	close.Font = Enum.Font.SourceSansBold
	close.Text = "X"
	close.TextColor3 = Color3.fromRGB(255, 0, 0)
	close.TextScaled = true
	close.TextSize = 14.000
	close.TextWrapped = true
	
	TextLabel_3.Parent = Frame
	TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_3.BackgroundTransparency = 1.000
	TextLabel_3.Position = UDim2.new(7.4505806e-09, 0, 0.860465109, 0)
	TextLabel_3.Size = UDim2.new(0, 214, 0, 24)
	TextLabel_3.ZIndex = 3
	TextLabel_3.Font = Enum.Font.SourceSansBold
	TextLabel_3.Text = "GUI By : Drezin"
	TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_3.TextSize = 15.000
	
	TextLabel_4.Parent = Frame
	TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_4.BackgroundTransparency = 1.000
	TextLabel_4.Position = UDim2.new(0, 0, 0.767441869, 0)
	TextLabel_4.Size = UDim2.new(0, 240, 0, 24)
	TextLabel_4.ZIndex = 3
	TextLabel_4.Font = Enum.Font.SourceSansBold
	TextLabel_4.Text = "GUI By : Drezin"
	TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_4.TextSize = 15.000
	
	username.Name = "username"
	username.Parent = Frame
	username.BackgroundColor3 = Color3.fromRGB(255, 128, 0)
	username.BackgroundTransparency = 1.000
	username.BorderSizePixel = 0
	username.Position = UDim2.new(0.173202619, 0, 0.313953489, 0)
	username.Size = UDim2.new(0, 200, 0, 24)
	username.ZIndex = 3
	username.Font = Enum.Font.GothamBold
	username.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
	username.PlaceholderText = "Input User"
	username.Text = ""
	username.TextColor3 = Color3.fromRGB(255, 255, 255)
	username.TextSize = 14.000
	
	snatch.Name = "LogFakeIp"
	snatch.Parent = Frame
	snatch.BackgroundColor3 = Color3.fromRGB(255, 128, 0)
	snatch.BackgroundTransparency = 1.000
	snatch.BorderSizePixel = 0
	snatch.Position = UDim2.new(0.205882356, 0, 0.511627913, 0)
	snatch.Size = UDim2.new(0, 180, 0, 28)
	snatch.ZIndex = 4
	snatch.Font = Enum.Font.SourceSansBold
	snatch.Text = "Take Ip"
	snatch.TextColor3 = Color3.fromRGB(255, 255, 255)
	snatch.TextScaled = true
	snatch.TextSize = 14.000
	snatch.TextWrapped = true
	snatch.MouseButton1Down:connect(function()
		local v = game.Players[username.Text]
		ass = gethiddenproperty or get_hidden_prop
		local Thing = game:GetService("HttpService"):JSONDecode(game:HttpGet("http://country.io/names.json"))
		local ParsedCountry = Thing[ass(v, "CountryRegionCodeReplicate")]
		local SayMessageRequest1 = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
		SayMessageRequest1:FireServer(
			v.Name.." - Cracking IP Address...",
			"All"
		)
		wait(2)
		local SayMessageRequest = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
		SayMessageRequest:FireServer(
			v.Name.." is from "..tostring(ParsedCountry).." OS: "..v.OsPlatform.." IP: "..math.random(836).."."..math.random(725).."."..math.random(99)..".".."##".." ".."(IP: Successfully Logged)",
			"All"
		)
		wait(0.55)
		local SayMessageRequest2 = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
		SayMessageRequest2:FireServer(
			v.Name.."'s Data Has Been Successfully Stolen.",
			"All"
		)
		
	end)
	
	TextButton_Roundify_12px.Name = "TextButton_Roundify_12px"
	TextButton_Roundify_12px.Parent = snatch
	TextButton_Roundify_12px.Active = true
	TextButton_Roundify_12px.AnchorPoint = Vector2.new(0.5, 0.5)
	TextButton_Roundify_12px.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextButton_Roundify_12px.BackgroundTransparency = 1.000
	TextButton_Roundify_12px.Position = UDim2.new(0.5, 0, 0.5, 0)
	TextButton_Roundify_12px.Selectable = true
	TextButton_Roundify_12px.Size = UDim2.new(1, 0, 1, 0)
	TextButton_Roundify_12px.ZIndex = 3
	TextButton_Roundify_12px.Image = "rbxassetid://3570695787"
	TextButton_Roundify_12px.ImageColor3 = Color3.fromRGB(255, 128, 0)
	TextButton_Roundify_12px.ScaleType = Enum.ScaleType.Slice
	TextButton_Roundify_12px.SliceCenter = Rect.new(100, 100, 100, 100)
	TextButton_Roundify_12px.SliceScale = 0.120
	
	miscbut.Name = "miscbut"
	miscbut.Parent = Frame
	miscbut.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	miscbut.BackgroundTransparency = 1.010
	miscbut.Position = UDim2.new(0.934640527, 0, 0.883720934, 0)
	miscbut.Size = UDim2.new(0, 20, 0, 20)
	miscbut.ZIndex = 3
	miscbut.Font = Enum.Font.SourceSansBold
	miscbut.Text = ">"
	miscbut.TextColor3 = Color3.fromRGB(255, 255, 255)
	miscbut.TextScaled = true
	miscbut.TextSize = 14.000
	miscbut.TextWrapped = true
	
	MISC.Name = "MISC"
	MISC.Parent = Frame
	MISC.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	MISC.BackgroundTransparency = 1.000
	MISC.Position = UDim2.new(0.0775638819, 0, 0.0725949258, 0)
	MISC.Size = UDim2.new(0, 262, 0, 147)
	MISC.ZIndex = 0
	MISC.Image = "rbxassetid://3570695787"
	MISC.ImageColor3 = Color3.fromRGB(20, 20, 20)
	MISC.ScaleType = Enum.ScaleType.Slice
	MISC.SliceCenter = Rect.new(100, 100, 100, 100)
	MISC.SliceScale = 0.120
	
	TextLabel_5.Parent = MISC
	TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_5.BackgroundTransparency = 1.000
	TextLabel_5.Position = UDim2.new(0.02614378, 0, 0.0232981984, 0)
	TextLabel_5.Size = UDim2.new(0, 18, 0, 20)
	TextLabel_5.Font = Enum.Font.SourceSansBold
	TextLabel_5.Text = "MI"
	TextLabel_5.TextColor3 = Color3.fromRGB(255, 85, 0)
	TextLabel_5.TextSize = 25.000
	
	TextLabel_6.Parent = MISC
	TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_6.BackgroundTransparency = 1.000
	TextLabel_6.Position = UDim2.new(0.0980392322, 0, 0.0232981984, 0)
	TextLabel_6.Size = UDim2.new(0, 28, 0, 20)
	TextLabel_6.Font = Enum.Font.SourceSansBold
	TextLabel_6.Text = "SC"
	TextLabel_6.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_6.TextSize = 25.000
	
	snatchall.Name = "logserver"
	snatchall.Parent = MISC
	snatchall.BackgroundColor3 = Color3.fromRGB(255, 128, 0)
	snatchall.BackgroundTransparency = 1.000
	snatchall.BorderSizePixel = 0
	snatchall.Position = UDim2.new(0.0493937507, 0, 0.703036785, 0)
	snatchall.Size = UDim2.new(0, 236, 0, 23)
	snatchall.ZIndex = 2
	snatchall.Font = Enum.Font.SourceSansBold
	snatchall.Text = "Log Server"
	snatchall.TextColor3 = Color3.fromRGB(255, 255, 255)
	snatchall.TextScaled = true
	snatchall.TextSize = 14.000
	snatchall.TextWrapped = true
	snatchall.MouseButton1Down:connect(function()
--[[https://v3rmillion.net/showthread.php?tid=1012504, In-Chat Player Real Country Fake IP leaker by kuraga.
]]
		-- CREDITS TO kuraga#4659 AND DerzeTT#8830
		ass = gethiddenproperty or get_hidden_prop
		
		for _,v in pairs(game:GetService("Players"):GetPlayers()) do
			if v.Name ~= game:GetService("Players").LocalPlayer.Name then
				local Thing = game:GetService("HttpService"):JSONDecode(game:HttpGet("http://country.io/names.json"))
				local ParsedCountry = Thing[ass(v, "CountryRegionCodeReplicate")]
				local SayMessageRequest = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
				SayMessageRequest:FireServer(
					v.Name.." is from "..tostring(ParsedCountry).." OS: "..v.OsPlatform.." IP: "..math.random(728).."."..math.random(326).."."..math.random(99)..".".."##".." ".."(IP: Successfully Logged)",
					"All"
				)
				wait(2)
			end
		end
		for i = 1,5 do
			local SayMessageRequest1 = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
			SayMessageRequest1:FireServer(
				"Program Status: Cracking...",
				"All"
			)
			wait(1)
		end
		wait(5)
		local SayMessageRequest2 = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
		SayMessageRequest2:FireServer(
			"Program Status: Successfully Stolen Addresses, Data Being Sold To [%Encryped Site%]",
			"All"
		)
	end)
	
	TextButton_Roundify_12px_2.Name = "TextButton_Roundify_12px"
	TextButton_Roundify_12px_2.Parent = snatchall
	TextButton_Roundify_12px_2.Active = true
	TextButton_Roundify_12px_2.AnchorPoint = Vector2.new(0.5, 0.5)
	TextButton_Roundify_12px_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextButton_Roundify_12px_2.BackgroundTransparency = 1.000
	TextButton_Roundify_12px_2.Position = UDim2.new(0.5, 0, 0.5, 0)
	TextButton_Roundify_12px_2.Selectable = true
	TextButton_Roundify_12px_2.Size = UDim2.new(1, 0, 1, 0)
	TextButton_Roundify_12px_2.Image = "rbxassetid://3570695787"
	TextButton_Roundify_12px_2.ImageColor3 = Color3.fromRGB(255, 128, 0)
	TextButton_Roundify_12px_2.ScaleType = Enum.ScaleType.Slice
	TextButton_Roundify_12px_2.SliceCenter = Rect.new(100, 100, 100, 100)
	TextButton_Roundify_12px_2.SliceScale = 0.120
	
	TextLabel_7.Parent = MISC
	TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_7.BackgroundTransparency = 1.000
	TextLabel_7.Position = UDim2.new(0.0980392322, 0, 0.213774383, 0)
	TextLabel_7.Size = UDim2.new(0, 212, 0, 62)
	TextLabel_7.Font = Enum.Font.SourceSansBold
	TextLabel_7.Text = "Holy fuck some people are annoying"
	TextLabel_7.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_7.TextScaled = true
	TextLabel_7.TextSize = 25.000
	TextLabel_7.TextWrapped = true
	
	-- Scripts:
	
	local function XHSJL_fake_script() -- close.LocalScript 
		local script = Instance.new('LocalScript', close)
		
		close.MouseButton1Down:Connect(function()
			MISC:TweenPosition(UDim2.new(0.078, 0, 0.073, 0), 'Out', 'Bounce', 0.35)
			wait(.35)
			Frame.ClipsDescendants = true
			Frame:TweenSize(UDim2.new(0,0,0,0), 'Out', 'Linear', .3)
			wait(.3)
			ScreenGui:Destroy()
		end)
	end
	coroutine.wrap(XHSJL_fake_script)()
	local function MOOLDA_fake_script() -- miscbut.LocalScript 
		local script = Instance.new('LocalScript', miscbut)
		
		local t = false
		miscbut.MouseButton1Down:Connect(function()
			if (t == false) then
				MISC:TweenPosition(UDim2.new(1.051, 0, 0.073, 0), 'Out', 'Bounce', 0.35)
				wait(.35)
				t = true
			elseif (t == true) then
				MISC:TweenPosition(UDim2.new(0.078, 0, 0.073, 0), 'Out', 'Bounce', 0.35)
				wait(.35)
				t = false
			end
		end)
	end
	coroutine.wrap(MOOLDA_fake_script)()
	Frame:TweenSize(UDim2.new(0, 306, 0, 172), 'Out', 'Linear', 0.3)
	wait(.3)
	Frame.ClipsDescendants = false	
	
end)

Dex.Name = "Dex"
Dex.Parent = Ola
Dex.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
Dex.BorderSizePixel = 0
Dex.Position = UDim2.new(0.141552508, 0, 0.742574275, 0)
Dex.Size = UDim2.new(0, 157, 0, 28)
Dex.Font = Enum.Font.Gotham
Dex.Text = "Dex Explorer"
Dex.TextColor3 = Color3.new(1, 1, 1)
Dex.TextSize = 14
Dex.MouseButton1Down:connect(function()
	
	
	CreateGui = function()
		local NewGuiPart1 = Instance.new("ScreenGui")
		local NewGuiPart2 = Instance.new("Frame")
		local NewGuiPart3 = Instance.new("Frame")
		local NewGuiPart4 = Instance.new("TextLabel")
		local NewGuiPart5 = Instance.new("TextBox")
		local NewGuiPart6 = Instance.new("Frame")
		local NewGuiPart7 = Instance.new("Frame")
		local NewGuiPart8 = Instance.new("TextButton")
		local NewGuiPart9 = Instance.new("TextLabel")
		local NewGuiPart10 = Instance.new("TextLabel")
		local NewGuiPart11 = Instance.new("ImageLabel")
		local NewGuiPart12 = Instance.new("Frame")
		local NewGuiPart13 = Instance.new("Frame")
		local NewGuiPart14 = Instance.new("Frame")
		local NewGuiPart15 = Instance.new("TextButton")
		local NewGuiPart16 = Instance.new("ImageLabel")
		local NewGuiPart17 = Instance.new("TextButton")
		local NewGuiPart18 = Instance.new("ImageLabel")
		local NewGuiPart19 = Instance.new("TextButton")
		local NewGuiPart20 = Instance.new("ImageLabel")
		local NewGuiPart21 = Instance.new("TextButton")
		local NewGuiPart22 = Instance.new("ImageLabel")
		local NewGuiPart23 = Instance.new("TextButton")
		local NewGuiPart24 = Instance.new("ImageLabel")
		local NewGuiPart25 = Instance.new("TextButton")
		local NewGuiPart26 = Instance.new("ImageLabel")
		local NewGuiPart27 = Instance.new("TextButton")
		local NewGuiPart28 = Instance.new("Frame")
		local NewGuiPart29 = Instance.new("Frame")
		local NewGuiPart30 = Instance.new("TextLabel")
		local NewGuiPart31 = Instance.new("Frame")
		local NewGuiPart32 = Instance.new("TextLabel")
		local NewGuiPart33 = Instance.new("TextLabel")
		local NewGuiPart34 = Instance.new("TextButton")
		local NewGuiPart35 = Instance.new("TextLabel")
		local NewGuiPart36 = Instance.new("TextLabel")
		local NewGuiPart37 = Instance.new("Frame")
		local NewGuiPart38 = Instance.new("Frame")
		local NewGuiPart39 = Instance.new("TextLabel")
		local NewGuiPart40 = Instance.new("Frame")
		local NewGuiPart41 = Instance.new("TextButton")
		local NewGuiPart42 = Instance.new("TextLabel")
		local NewGuiPart43 = Instance.new("TextButton")
		local NewGuiPart44 = Instance.new("TextBox")
		local NewGuiPart45 = Instance.new("TextButton")
		local NewGuiPart46 = Instance.new("TextLabel")
		local NewGuiPart47 = Instance.new("TextLabel")
		local NewGuiPart48 = Instance.new("Frame")
		local NewGuiPart49 = Instance.new("TextLabel")
		local NewGuiPart50 = Instance.new("Frame")
		local NewGuiPart51 = Instance.new("TextButton")
		local NewGuiPart52 = Instance.new("TextLabel")
		local NewGuiPart53 = Instance.new("TextButton")
		local NewGuiPart54 = Instance.new("Frame")
		local NewGuiPart55 = Instance.new("TextLabel")
		local NewGuiPart56 = Instance.new("Frame")
		local NewGuiPart57 = Instance.new("TextLabel")
		local NewGuiPart58 = Instance.new("TextButton")
		local NewGuiPart59 = Instance.new("Frame")
		local NewGuiPart60 = Instance.new("TextLabel")
		local NewGuiPart61 = Instance.new("Frame")
		local NewGuiPart62 = Instance.new("TextLabel")
		local NewGuiPart63 = Instance.new("ScrollingFrame")
		local NewGuiPart64 = Instance.new("TextButton")
		local NewGuiPart65 = Instance.new("TextLabel")
		local NewGuiPart66 = Instance.new("TextLabel")
		local NewGuiPart67 = Instance.new("TextButton")
		local NewGuiPart68 = Instance.new("TextButton")
		local NewGuiPart69 = Instance.new("Frame")
		local NewGuiPart70 = Instance.new("TextButton")
		local NewGuiPart71 = Instance.new("TextBox")
		local NewGuiPart72 = Instance.new("TextButton")
		local NewGuiPart73 = Instance.new("TextButton")
		local NewGuiPart74 = Instance.new("Frame")
		local NewGuiPart75 = Instance.new("Frame")
		local NewGuiPart76 = Instance.new("TextButton")
		local NewGuiPart77 = Instance.new("ScrollingFrame")
		local NewGuiPart78 = Instance.new("Frame")
		local NewGuiPart79 = Instance.new("TextLabel")
		local NewGuiPart80 = Instance.new("TextLabel")
		local NewGuiPart81 = Instance.new("TextLabel")
		local NewGuiPart82 = Instance.new("Frame")
		local NewGuiPart83 = Instance.new("TextLabel")
		local NewGuiPart84 = Instance.new("Frame")
		local NewGuiPart85 = Instance.new("Frame")
		local NewGuiPart86 = Instance.new("Frame")
		local NewGuiPart87 = Instance.new("ImageButton")
		local NewGuiPart88 = Instance.new("Frame")
		local NewGuiPart89 = Instance.new("Frame")
		local NewGuiPart90 = Instance.new("Frame")
		local NewGuiPart91 = Instance.new("Frame")
		local NewGuiPart92 = Instance.new("Frame")
		local NewGuiPart93 = Instance.new("ImageButton")
		local NewGuiPart94 = Instance.new("Frame")
		local NewGuiPart95 = Instance.new("Frame")
		local NewGuiPart96 = Instance.new("Frame")
		local NewGuiPart97 = Instance.new("Frame")
		local NewGuiPart98 = Instance.new("Frame")
		local NewGuiPart99 = Instance.new("TextButton")
		local NewGuiPart100 = Instance.new("Frame")
		local NewGuiPart101 = Instance.new("Frame")
		local NewGuiPart102 = Instance.new("TextButton")
		local NewGuiPart103 = Instance.new("TextButton")
		local NewGuiPart104 = Instance.new("TextButton")
		local NewGuiPart105 = Instance.new("Frame")
		local NewGuiPart106 = Instance.new("Frame")
		local NewGuiPart107 = Instance.new("TextLabel")
		local NewGuiPart108 = Instance.new("TextLabel")
		local NewGuiPart109 = Instance.new("TextLabel")
		local NewGuiPart110 = Instance.new("ImageLabel")
		local NewGuiPart111 = Instance.new("Frame")
		local NewGuiPart112 = Instance.new("Frame")
		local NewGuiPart113 = Instance.new("TextLabel")
		local NewGuiPart114 = Instance.new("Frame")
		local NewGuiPart115 = Instance.new("Frame")
		local NewGuiPart116 = Instance.new("TextLabel")
		local NewGuiPart117 = Instance.new("TextLabel")
		local NewGuiPart118 = Instance.new("TextButton")
		local NewGuiPart119 = Instance.new("TextLabel")
		local NewGuiPart120 = Instance.new("TextLabel")
		local NewGuiPart121 = Instance.new("Frame")
		local NewGuiPart122 = Instance.new("TextLabel")
		local NewGuiPart123 = Instance.new("TextLabel")
		local NewGuiPart124 = Instance.new("TextButton")
		local NewGuiPart125 = Instance.new("TextLabel")
		local NewGuiPart126 = Instance.new("TextLabel")
		local NewGuiPart127 = Instance.new("Frame")
		local NewGuiPart128 = Instance.new("TextLabel")
		local NewGuiPart129 = Instance.new("TextLabel")
		local NewGuiPart130 = Instance.new("TextButton")
		local NewGuiPart131 = Instance.new("TextLabel")
		local NewGuiPart132 = Instance.new("TextLabel")
		local NewGuiPart133 = Instance.new("Frame")
		local NewGuiPart134 = Instance.new("TextLabel")
		local NewGuiPart135 = Instance.new("TextLabel")
		local NewGuiPart136 = Instance.new("TextButton")
		local NewGuiPart137 = Instance.new("TextLabel")
		local NewGuiPart138 = Instance.new("TextLabel")
		local NewGuiPart139 = Instance.new("TextLabel")
		local NewGuiPart140 = Instance.new("Frame")
		local NewGuiPart141 = Instance.new("Frame")
		local NewGuiPart142 = Instance.new("TextLabel")
		local NewGuiPart143 = Instance.new("TextButton")
		local NewGuiPart144 = Instance.new("TextBox")
		local NewGuiPart145 = Instance.new("Frame")
		local NewGuiPart146 = Instance.new("TextButton")
		local NewGuiPart147 = Instance.new("TextLabel")
		local NewGuiPart148 = Instance.new("TextLabel")
		local NewGuiPart149 = Instance.new("Frame")
		local NewGuiPart150 = Instance.new("Frame")
		local NewGuiPart151 = Instance.new("TextLabel")
		local NewGuiPart152 = Instance.new("TextLabel")
		local NewGuiPart153 = Instance.new("BindableFunction")
		local NewGuiPart154 = Instance.new("BindableFunction")
		local NewGuiPart155 = Instance.new("BindableFunction")
		local NewGuiPart156 = Instance.new("BindableFunction")
		local NewGuiPart157 = Instance.new("BindableEvent")
		local NewGuiPart158 = Instance.new("BindableFunction")
		local NewGuiPart159 = Instance.new("BindableFunction")
		local NewGuiPart160 = Instance.new("BindableEvent")
		local NewGuiPart161 = Instance.new("BindableFunction")
		local NewGuiPart162 = Instance.new("BindableFunction")
		local NewGuiPart163 = Instance.new("BindableEvent")
		-- Properties
		
		NewGuiPart1.Name = "Dex"
		
		NewGuiPart2.Name = "PropertiesFrame"
		NewGuiPart2.Parent = NewGuiPart1
		NewGuiPart2.Active = true
		NewGuiPart2.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart2.BackgroundTransparency = 0.10000000149012
		NewGuiPart2.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart2.Position = UDim2.new(1, 0, 0.5, 36)
		NewGuiPart2.Size = UDim2.new(0, 300, 0.5, -36)
		
		NewGuiPart158.Name = "GetApi"
		NewGuiPart158.Parent = NewGuiPart2
		NewGuiPart158.Archivable = true
		
		NewGuiPart159.Name = "GetAwaiting"
		NewGuiPart159.Parent = NewGuiPart2
		NewGuiPart159.Archivable = true
		
		NewGuiPart160.Name = "SetAwaiting"
		NewGuiPart160.Parent = NewGuiPart2
		NewGuiPart160.Archivable = true
		
		NewGuiPart3.Name = "Header"
		NewGuiPart3.Parent = NewGuiPart2
		NewGuiPart3.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart3.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart3.Position = UDim2.new(0, 0, 0, -36)
		NewGuiPart3.Size = UDim2.new(1, 0, 0, 35)
		
		NewGuiPart4.Parent = NewGuiPart3
		NewGuiPart4.BackgroundTransparency = 1
		NewGuiPart4.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart4.Size = UDim2.new(1, -4, 0.5, 0)
		NewGuiPart4.Font = Enum.Font.SourceSans
		NewGuiPart4.FontSize = Enum.FontSize.Size14
		NewGuiPart4.Text = "Properties"
		NewGuiPart4.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart4.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart5.Parent = NewGuiPart3
		NewGuiPart5.BackgroundTransparency = 0.80000001192093
		NewGuiPart5.Position = UDim2.new(0, 4, 0.5, 0)
		NewGuiPart5.Size = UDim2.new(1, -8, 0.5, -3)
		NewGuiPart5.Font = Enum.Font.SourceSans
		NewGuiPart5.FontSize = Enum.FontSize.Size14
		NewGuiPart5.Text = "Search Properties"
		--NewGuiPart5.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart5.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart6.Name = "ExplorerPanel"
		NewGuiPart6.Parent = NewGuiPart1
		NewGuiPart6.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart6.BackgroundTransparency = 0.10000000149012
		NewGuiPart6.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart6.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart6.Size = UDim2.new(0, 300, 0.5, 0)
		
		NewGuiPart153.Name = "GetOption"
		NewGuiPart153.Parent = NewGuiPart6
		NewGuiPart153.Archivable = true
		
		NewGuiPart154.Name = "GetSelection"
		NewGuiPart154.Parent = NewGuiPart6
		NewGuiPart154.Archivable = true
		
		NewGuiPart155.Name = "SetOption"
		NewGuiPart155.Parent = NewGuiPart6
		NewGuiPart155.Archivable = true
		
		NewGuiPart156.Name = "SetSelection"
		NewGuiPart156.Parent = NewGuiPart6
		NewGuiPart156.Archivable = true
		
		NewGuiPart157.Name = "SelectionChanged"
		NewGuiPart157.Parent = NewGuiPart6
		NewGuiPart157.Archivable = true
		
		NewGuiPart7.Name = "SideMenu"
		NewGuiPart7.Parent = NewGuiPart1
		NewGuiPart7.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart7.BackgroundTransparency = 1
		NewGuiPart7.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart7.BorderSizePixel = 0
		NewGuiPart7.Position = UDim2.new(1, -330, 0, 0)
		NewGuiPart7.Size = UDim2.new(0, 30, 0, 180)
		NewGuiPart7.Visible = false
		NewGuiPart7.ZIndex = 2
		
		NewGuiPart8.Name = "Toggle"
		NewGuiPart8.Parent = NewGuiPart7
		NewGuiPart8.Active = false
		NewGuiPart8.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart8.BorderSizePixel = 0
		NewGuiPart8.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart8.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart8.AutoButtonColor = false
		NewGuiPart8.Font = Enum.Font.SourceSans
		NewGuiPart8.FontSize = Enum.FontSize.Size24
		NewGuiPart8.Text = ">"
		NewGuiPart8.TextTransparency = 1
		NewGuiPart8.TextWrapped = true
		
		NewGuiPart9.Name = "Title"
		NewGuiPart9.Parent = NewGuiPart7
		NewGuiPart9.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart9.BackgroundTransparency = 1
		NewGuiPart9.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart9.ZIndex = 2
		NewGuiPart9.Font = Enum.Font.SourceSansBold
		NewGuiPart9.FontSize = Enum.FontSize.Size14
		NewGuiPart9.Text = "DEX"
		NewGuiPart9.TextWrapped = true
		
		NewGuiPart10.Name = "Version"
		NewGuiPart10.Parent = NewGuiPart7
		NewGuiPart10.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart10.BackgroundTransparency = 1
		NewGuiPart10.Position = UDim2.new(0, 0, 0, 15)
		NewGuiPart10.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart10.ZIndex = 2
		NewGuiPart10.Font = Enum.Font.SourceSansBold
		NewGuiPart10.FontSize = Enum.FontSize.Size12
		NewGuiPart10.Text = "V2.0.0"
		NewGuiPart10.TextWrapped = true
		
		NewGuiPart11.Name = "Slant"
		NewGuiPart11.Parent = NewGuiPart7
		NewGuiPart11.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart11.BackgroundTransparency = 1
		NewGuiPart11.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart11.Rotation = 180
		NewGuiPart11.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart11.Image = "rbxassetid://474172996"
		NewGuiPart11.ImageColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		
		NewGuiPart12.Name = "Main"
		NewGuiPart12.Parent = NewGuiPart7
		NewGuiPart12.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart12.BorderSizePixel = 0
		NewGuiPart12.Size = UDim2.new(0, 30, 0, 30)
		
		NewGuiPart13.Name = "SlideOut"
		NewGuiPart13.Parent = NewGuiPart7
		NewGuiPart13.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart13.BackgroundTransparency = 1
		NewGuiPart13.BorderSizePixel = 0
		NewGuiPart13.ClipsDescendants = true
		NewGuiPart13.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart13.Size = UDim2.new(0, 30, 0, 150)
		
		NewGuiPart14.Name = "SlideFrame"
		NewGuiPart14.Parent = NewGuiPart13
		NewGuiPart14.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart14.BorderSizePixel = 0
		NewGuiPart14.Position = UDim2.new(0, 0, 0, -150)
		NewGuiPart14.Size = UDim2.new(0, 30, 0, 150)
		
		NewGuiPart15.Name = "Explorer"
		NewGuiPart15.Parent = NewGuiPart14
		NewGuiPart15.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart15.BackgroundTransparency = 1
		NewGuiPart15.BorderSizePixel = 0
		NewGuiPart15.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart15.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart15.ZIndex = 2
		NewGuiPart15.AutoButtonColor = false
		NewGuiPart15.Font = Enum.Font.SourceSans
		NewGuiPart15.FontSize = Enum.FontSize.Size24
		NewGuiPart15.Text = ""
		
		NewGuiPart16.Name = "Icon"
		NewGuiPart16.Parent = NewGuiPart15
		NewGuiPart16.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart16.BackgroundTransparency = 1
		NewGuiPart16.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart16.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart16.ZIndex = 2
		NewGuiPart16.Image = "rbxassetid://472635937"
		NewGuiPart16.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)
		
		NewGuiPart17.Name = "SaveMap"
		NewGuiPart17.Parent = NewGuiPart14
		NewGuiPart17.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart17.BackgroundTransparency = 1
		NewGuiPart17.BorderSizePixel = 0
		NewGuiPart17.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart17.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart17.ZIndex = 2
		NewGuiPart17.AutoButtonColor = false
		NewGuiPart17.Font = Enum.Font.SourceSans
		NewGuiPart17.FontSize = Enum.FontSize.Size24
		NewGuiPart17.Text = ""
		
		NewGuiPart18.Name = "Icon"
		NewGuiPart18.Parent = NewGuiPart17
		NewGuiPart18.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart18.BackgroundTransparency = 1
		NewGuiPart18.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart18.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart18.ZIndex = 2
		NewGuiPart18.Image = "rbxassetid://472636337"
		NewGuiPart18.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)
		
		NewGuiPart19.Name = "Settings"
		NewGuiPart19.Parent = NewGuiPart14
		NewGuiPart19.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart19.BackgroundTransparency = 1
		NewGuiPart19.BorderSizePixel = 0
		NewGuiPart19.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart19.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart19.ZIndex = 2
		NewGuiPart19.AutoButtonColor = false
		NewGuiPart19.Font = Enum.Font.SourceSans
		NewGuiPart19.FontSize = Enum.FontSize.Size24
		NewGuiPart19.Text = ""
		
		NewGuiPart20.Name = "Icon"
		NewGuiPart20.Parent = NewGuiPart19
		NewGuiPart20.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart20.BackgroundTransparency = 1
		NewGuiPart20.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart20.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart20.ZIndex = 2
		NewGuiPart20.Image = "rbxassetid://472635774"
		NewGuiPart20.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)
		
		NewGuiPart21.Name = "Remotes"
		NewGuiPart21.Parent = NewGuiPart14
		NewGuiPart21.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart21.BackgroundTransparency = 1
		NewGuiPart21.BorderSizePixel = 0
		NewGuiPart21.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart21.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart21.ZIndex = 2
		NewGuiPart21.AutoButtonColor = false
		NewGuiPart21.Font = Enum.Font.SourceSans
		NewGuiPart21.FontSize = Enum.FontSize.Size24
		NewGuiPart21.Text = ""
		
		NewGuiPart22.Name = "Icon"
		NewGuiPart22.Parent = NewGuiPart21
		NewGuiPart22.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart22.BackgroundTransparency = 1
		NewGuiPart22.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart22.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart22.ZIndex = 2
		NewGuiPart22.Image = "rbxassetid://472636187"
		NewGuiPart22.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)
		
		NewGuiPart23.Name = "About"
		NewGuiPart23.Parent = NewGuiPart14
		NewGuiPart23.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart23.BackgroundTransparency = 1
		NewGuiPart23.BorderSizePixel = 0
		NewGuiPart23.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart23.ZIndex = 2
		NewGuiPart23.AutoButtonColor = false
		NewGuiPart23.Font = Enum.Font.SourceSans
		NewGuiPart23.FontSize = Enum.FontSize.Size24
		NewGuiPart23.Text = ""
		
		NewGuiPart24.Name = "Icon"
		NewGuiPart24.Parent = NewGuiPart23
		NewGuiPart24.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart24.BackgroundTransparency = 1
		NewGuiPart24.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart24.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart24.ZIndex = 2
		NewGuiPart24.Image = "rbxassetid://476354004"
		NewGuiPart24.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)
		
		NewGuiPart25.Name = "OpenScriptEditor"
		NewGuiPart25.Parent = NewGuiPart7
		NewGuiPart25.Active = false
		NewGuiPart25.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart25.BorderSizePixel = 0
		NewGuiPart25.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart25.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart25.ZIndex = 2
		NewGuiPart25.AutoButtonColor = false
		NewGuiPart25.Font = Enum.Font.SourceSans
		NewGuiPart25.FontSize = Enum.FontSize.Size24
		NewGuiPart25.Text = ""
		
		NewGuiPart26.Name = "Icon"
		NewGuiPart26.Parent = NewGuiPart25
		NewGuiPart26.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart26.BackgroundTransparency = 1
		NewGuiPart26.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart26.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart26.ZIndex = 2
		NewGuiPart26.Image = "rbxassetid://475456048"
		NewGuiPart26.ImageColor3 = Color3.new(0.105882, 0.164706, 0.207843)
		NewGuiPart26.ImageTransparency = 1
		
		NewGuiPart27.Name = "Toggle"
		NewGuiPart27.Parent = NewGuiPart1
		NewGuiPart27.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart27.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart27.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart27.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart27.Font = Enum.Font.SourceSans
		NewGuiPart27.FontSize = Enum.FontSize.Size24
		NewGuiPart27.Text = "<"
		
		NewGuiPart28.Name = "SettingsPanel"
		NewGuiPart28.Parent = NewGuiPart1
		NewGuiPart28.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart28.BackgroundTransparency = 0.10000000149012
		NewGuiPart28.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart28.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart28.Size = UDim2.new(0, 300, 1, 0)
		
		NewGuiPart162.Name = "GetSetting"
		NewGuiPart162.Parent = NewGuiPart28
		NewGuiPart162.Archivable = true
		
		NewGuiPart29.Name = "Header"
		NewGuiPart29.Parent = NewGuiPart28
		NewGuiPart29.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart29.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart29.Size = UDim2.new(1, 0, 0, 17)
		
		NewGuiPart30.Parent = NewGuiPart29
		NewGuiPart30.BackgroundTransparency = 1
		NewGuiPart30.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart30.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart30.Font = Enum.Font.SourceSans
		NewGuiPart30.FontSize = Enum.FontSize.Size14
		NewGuiPart30.Text = "Settings"
		NewGuiPart30.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart30.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart31.Name = "SettingTemplate"
		NewGuiPart31.Parent = NewGuiPart28
		NewGuiPart31.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart31.BackgroundTransparency = 1
		NewGuiPart31.Position = UDim2.new(0, 0, 0, 18)
		NewGuiPart31.Size = UDim2.new(1, 0, 0, 60)
		NewGuiPart31.Visible = false
		
		NewGuiPart32.Name = "SName"
		NewGuiPart32.Parent = NewGuiPart31
		NewGuiPart32.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart32.BackgroundTransparency = 1
		NewGuiPart32.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart32.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart32.Font = Enum.Font.SourceSans
		NewGuiPart32.FontSize = Enum.FontSize.Size18
		NewGuiPart32.Text = "SettingName"
		NewGuiPart32.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart33.Name = "Status"
		NewGuiPart33.Parent = NewGuiPart31
		NewGuiPart33.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart33.BackgroundTransparency = 1
		NewGuiPart33.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart33.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart33.Font = Enum.Font.SourceSans
		NewGuiPart33.FontSize = Enum.FontSize.Size18
		NewGuiPart33.Text = "Off"
		NewGuiPart33.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart34.Name = "Change"
		NewGuiPart34.Parent = NewGuiPart31
		NewGuiPart34.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart34.BorderSizePixel = 0
		NewGuiPart34.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart34.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart34.Font = Enum.Font.SourceSans
		NewGuiPart34.FontSize = Enum.FontSize.Size14
		NewGuiPart34.Text = ""
		
		NewGuiPart35.Name = "OnBar"
		NewGuiPart35.Parent = NewGuiPart34
		NewGuiPart35.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart35.BorderSizePixel = 0
		NewGuiPart35.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart35.Font = Enum.Font.SourceSans
		NewGuiPart35.FontSize = Enum.FontSize.Size14
		NewGuiPart35.Text = ""
		
		NewGuiPart36.Name = "Bar"
		NewGuiPart36.Parent = NewGuiPart34
		NewGuiPart36.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart36.BorderSizePixel = 0
		NewGuiPart36.ClipsDescendants = true
		NewGuiPart36.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart36.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart36.Font = Enum.Font.SourceSans
		NewGuiPart36.FontSize = Enum.FontSize.Size14
		NewGuiPart36.Text = ""
		
		NewGuiPart37.Name = "SettingList"
		NewGuiPart37.Parent = NewGuiPart28
		NewGuiPart37.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart37.BackgroundTransparency = 1
		NewGuiPart37.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart37.Size = UDim2.new(1, 0, 1, -17)
		
		NewGuiPart38.Name = "SaveInstance"
		NewGuiPart38.Parent = NewGuiPart1
		NewGuiPart38.Active = true
		NewGuiPart38.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart38.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart38.Draggable = true
		NewGuiPart38.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart38.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart38.Visible = false
		NewGuiPart38.ZIndex = 2
		
		NewGuiPart39.Name = "Title"
		NewGuiPart39.Parent = NewGuiPart38
		NewGuiPart39.BackgroundTransparency = 1
		NewGuiPart39.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart39.ZIndex = 2
		NewGuiPart39.Font = Enum.Font.SourceSans
		NewGuiPart39.FontSize = Enum.FontSize.Size14
		NewGuiPart39.Text = "Save Instance"
		NewGuiPart39.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart39.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart40.Name = "MainWindow"
		NewGuiPart40.Parent = NewGuiPart38
		NewGuiPart40.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart40.BackgroundTransparency = 0.10000000149012
		NewGuiPart40.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart40.Size = UDim2.new(1, 0, 0, 200)
		
		NewGuiPart41.Name = "Save"
		NewGuiPart41.Parent = NewGuiPart40
		NewGuiPart41.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart41.BackgroundTransparency = 0.5
		NewGuiPart41.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart41.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart41.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart41.Font = Enum.Font.SourceSans
		NewGuiPart41.FontSize = Enum.FontSize.Size18
		NewGuiPart41.Text = "Save"
		
		NewGuiPart42.Name = "Desc"
		NewGuiPart42.Parent = NewGuiPart40
		NewGuiPart42.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart42.BackgroundTransparency = 1
		NewGuiPart42.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart42.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart42.Font = Enum.Font.SourceSans
		NewGuiPart42.FontSize = Enum.FontSize.Size14
		NewGuiPart42.Text = "This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)"
		NewGuiPart42.TextWrapped = true
		
		NewGuiPart43.Name = "Cancel"
		NewGuiPart43.Parent = NewGuiPart40
		NewGuiPart43.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart43.BackgroundTransparency = 0.5
		NewGuiPart43.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart43.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart43.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart43.Font = Enum.Font.SourceSans
		NewGuiPart43.FontSize = Enum.FontSize.Size18
		NewGuiPart43.Text = "Cancel"
		
		NewGuiPart44.Name = "FileName"
		NewGuiPart44.Parent = NewGuiPart40
		NewGuiPart44.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart44.BackgroundTransparency = 0.20000000298023
		NewGuiPart44.Position = UDim2.new(0.075000003, 0, 0.400000006, 0)
		NewGuiPart44.Size = UDim2.new(0.850000024, 0, 0, 30)
		NewGuiPart44.Font = Enum.Font.SourceSans
		NewGuiPart44.FontSize = Enum.FontSize.Size18
		NewGuiPart44.Text = ""
		NewGuiPart44.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart45.Name = "SaveObjects"
		NewGuiPart45.Parent = NewGuiPart40
		NewGuiPart45.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart45.BackgroundTransparency = 0.60000002384186
		NewGuiPart45.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart45.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart45.ZIndex = 2
		NewGuiPart45.Font = Enum.Font.SourceSans
		NewGuiPart45.FontSize = Enum.FontSize.Size18
		NewGuiPart45.Text = ""
		NewGuiPart45.TextColor3 = Color3.new(1, 1, 1)
		
		NewGuiPart46.Name = "enabled"
		NewGuiPart46.Parent = NewGuiPart45
		NewGuiPart46.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart46.BackgroundTransparency = 0.40000000596046
		NewGuiPart46.BorderSizePixel = 0
		NewGuiPart46.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart46.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart46.Font = Enum.Font.SourceSans
		NewGuiPart46.FontSize = Enum.FontSize.Size14
		NewGuiPart46.Text = ""
		
		NewGuiPart47.Name = "Desc2"
		NewGuiPart47.Parent = NewGuiPart40
		NewGuiPart47.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart47.BackgroundTransparency = 1
		NewGuiPart47.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart47.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart47.Font = Enum.Font.SourceSans
		NewGuiPart47.FontSize = Enum.FontSize.Size14
		NewGuiPart47.Text = "Save \"Object\" type values"
		NewGuiPart47.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart48.Name = "Confirmation"
		NewGuiPart48.Parent = NewGuiPart1
		NewGuiPart48.Active = true
		NewGuiPart48.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart48.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart48.Draggable = true
		NewGuiPart48.Position = UDim2.new(0.300000012, 0, 0.349999994, 0)
		NewGuiPart48.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart48.Visible = false
		NewGuiPart48.ZIndex = 3
		
		NewGuiPart49.Name = "Title"
		NewGuiPart49.Parent = NewGuiPart48
		NewGuiPart49.BackgroundTransparency = 1
		NewGuiPart49.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart49.ZIndex = 3
		NewGuiPart49.Font = Enum.Font.SourceSans
		NewGuiPart49.FontSize = Enum.FontSize.Size14
		NewGuiPart49.Text = "Confirm"
		NewGuiPart49.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart49.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart50.Name = "MainWindow"
		NewGuiPart50.Parent = NewGuiPart48
		NewGuiPart50.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart50.BackgroundTransparency = 0.10000000149012
		NewGuiPart50.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart50.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart50.ZIndex = 2
		
		NewGuiPart51.Name = "Yes"
		NewGuiPart51.Parent = NewGuiPart50
		NewGuiPart51.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart51.BackgroundTransparency = 0.5
		NewGuiPart51.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart51.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart51.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart51.ZIndex = 2
		NewGuiPart51.Font = Enum.Font.SourceSans
		NewGuiPart51.FontSize = Enum.FontSize.Size18
		NewGuiPart51.Text = "Yes"
		
		NewGuiPart52.Name = "Desc"
		NewGuiPart52.Parent = NewGuiPart50
		NewGuiPart52.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart52.BackgroundTransparency = 1
		NewGuiPart52.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart52.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart52.ZIndex = 2
		NewGuiPart52.Font = Enum.Font.SourceSans
		NewGuiPart52.FontSize = Enum.FontSize.Size14
		NewGuiPart52.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart52.TextWrapped = true
		
		NewGuiPart53.Name = "No"
		NewGuiPart53.Parent = NewGuiPart50
		NewGuiPart53.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart53.BackgroundTransparency = 0.5
		NewGuiPart53.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart53.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart53.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart53.ZIndex = 2
		NewGuiPart53.Font = Enum.Font.SourceSans
		NewGuiPart53.FontSize = Enum.FontSize.Size18
		NewGuiPart53.Text = "No"
		
		NewGuiPart54.Name = "Caution"
		NewGuiPart54.Parent = NewGuiPart1
		NewGuiPart54.Active = true
		NewGuiPart54.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart54.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart54.Draggable = true
		NewGuiPart54.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart54.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart54.Visible = false
		NewGuiPart54.ZIndex = 5
		
		NewGuiPart55.Name = "Title"
		NewGuiPart55.Parent = NewGuiPart54
		NewGuiPart55.BackgroundTransparency = 1
		NewGuiPart55.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart55.ZIndex = 5
		NewGuiPart55.Font = Enum.Font.SourceSans
		NewGuiPart55.FontSize = Enum.FontSize.Size14
		NewGuiPart55.Text = "Caution"
		NewGuiPart55.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart55.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart56.Name = "MainWindow"
		NewGuiPart56.Parent = NewGuiPart54
		NewGuiPart56.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart56.BackgroundTransparency = 0.10000000149012
		NewGuiPart56.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart56.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart56.ZIndex = 4
		
		NewGuiPart57.Name = "Desc"
		NewGuiPart57.Parent = NewGuiPart56
		NewGuiPart57.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart57.BackgroundTransparency = 1
		NewGuiPart57.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart57.Size = UDim2.new(1, 0, 0, 42)
		NewGuiPart57.ZIndex = 4
		NewGuiPart57.Font = Enum.Font.SourceSans
		NewGuiPart57.FontSize = Enum.FontSize.Size14
		NewGuiPart57.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart57.TextWrapped = true
		
		NewGuiPart58.Name = "Ok"
		NewGuiPart58.Parent = NewGuiPart56
		NewGuiPart58.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart58.BackgroundTransparency = 0.5
		NewGuiPart58.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart58.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart58.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart58.ZIndex = 4
		NewGuiPart58.Font = Enum.Font.SourceSans
		NewGuiPart58.FontSize = Enum.FontSize.Size18
		NewGuiPart58.Text = "Ok"
		
		NewGuiPart59.Name = "CallRemote"
		NewGuiPart59.Parent = NewGuiPart1
		NewGuiPart59.Active = true
		NewGuiPart59.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart59.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart59.Draggable = true
		NewGuiPart59.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart59.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart59.Visible = false
		NewGuiPart59.ZIndex = 2
		
		NewGuiPart60.Name = "Title"
		NewGuiPart60.Parent = NewGuiPart59
		NewGuiPart60.BackgroundTransparency = 1
		NewGuiPart60.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart60.ZIndex = 2
		NewGuiPart60.Font = Enum.Font.SourceSans
		NewGuiPart60.FontSize = Enum.FontSize.Size14
		NewGuiPart60.Text = "Call Remote"
		NewGuiPart60.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart60.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart61.Name = "MainWindow"
		NewGuiPart61.Parent = NewGuiPart59
		NewGuiPart61.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart61.BackgroundTransparency = 0.10000000149012
		NewGuiPart61.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart61.Size = UDim2.new(1, 0, 0, 200)
		
		NewGuiPart62.Name = "Desc"
		NewGuiPart62.Parent = NewGuiPart61
		NewGuiPart62.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart62.BackgroundTransparency = 1
		NewGuiPart62.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart62.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart62.Font = Enum.Font.SourceSans
		NewGuiPart62.FontSize = Enum.FontSize.Size14
		NewGuiPart62.Text = "Arguments"
		NewGuiPart62.TextWrapped = true
		
		NewGuiPart63.Name = "Arguments"
		NewGuiPart63.Parent = NewGuiPart61
		NewGuiPart63.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart63.BackgroundTransparency = 1
		NewGuiPart63.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart63.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart63.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart63.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.TopImage = "rbxasset://textures/blackBkg_square.png"
		
		NewGuiPart64.Name = "DisplayReturned"
		NewGuiPart64.Parent = NewGuiPart61
		NewGuiPart64.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart64.BackgroundTransparency = 0.60000002384186
		NewGuiPart64.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart64.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart64.ZIndex = 2
		NewGuiPart64.Font = Enum.Font.SourceSans
		NewGuiPart64.FontSize = Enum.FontSize.Size18
		NewGuiPart64.Text = ""
		NewGuiPart64.TextColor3 = Color3.new(1, 1, 1)
		
		NewGuiPart65.Name = "enabled"
		NewGuiPart65.Parent = NewGuiPart64
		NewGuiPart65.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart65.BackgroundTransparency = 0.40000000596046
		NewGuiPart65.BorderSizePixel = 0
		NewGuiPart65.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart65.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart65.Visible = false
		NewGuiPart65.Font = Enum.Font.SourceSans
		NewGuiPart65.FontSize = Enum.FontSize.Size14
		NewGuiPart65.Text = ""
		
		NewGuiPart66.Name = "Desc2"
		NewGuiPart66.Parent = NewGuiPart61
		NewGuiPart66.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart66.BackgroundTransparency = 1
		NewGuiPart66.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart66.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart66.Font = Enum.Font.SourceSans
		NewGuiPart66.FontSize = Enum.FontSize.Size14
		NewGuiPart66.Text = "Display values returned"
		NewGuiPart66.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart67.Name = "Add"
		NewGuiPart67.Parent = NewGuiPart61
		NewGuiPart67.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart67.BackgroundTransparency = 0.5
		NewGuiPart67.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart67.Position = UDim2.new(0.800000012, 0, 0.625, 0)
		NewGuiPart67.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart67.Font = Enum.Font.SourceSansBold
		NewGuiPart67.FontSize = Enum.FontSize.Size24
		NewGuiPart67.Text = "+"
		
		NewGuiPart68.Name = "Subtract"
		NewGuiPart68.Parent = NewGuiPart61
		NewGuiPart68.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart68.BackgroundTransparency = 0.5
		NewGuiPart68.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart68.Position = UDim2.new(0.899999976, 0, 0.625, 0)
		NewGuiPart68.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart68.Font = Enum.Font.SourceSansBold
		NewGuiPart68.FontSize = Enum.FontSize.Size24
		NewGuiPart68.Text = "-"
		
		NewGuiPart69.Name = "ArgumentTemplate"
		NewGuiPart69.Parent = NewGuiPart61
		NewGuiPart69.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart69.BackgroundTransparency = 0.5
		NewGuiPart69.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart69.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart69.Visible = false
		
		NewGuiPart70.Name = "Type"
		NewGuiPart70.Parent = NewGuiPart69
		NewGuiPart70.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart70.BackgroundTransparency = 0.89999997615814
		NewGuiPart70.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart70.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart70.Font = Enum.Font.SourceSans
		NewGuiPart70.FontSize = Enum.FontSize.Size18
		NewGuiPart70.Text = "Script"
		
		NewGuiPart71.Name = "Value"
		NewGuiPart71.Parent = NewGuiPart69
		NewGuiPart71.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart71.BackgroundTransparency = 0.89999997615814
		NewGuiPart71.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart71.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart71.Font = Enum.Font.SourceSans
		NewGuiPart71.FontSize = Enum.FontSize.Size14
		NewGuiPart71.Text = ""
		NewGuiPart71.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart72.Name = "Cancel"
		NewGuiPart72.Parent = NewGuiPart61
		NewGuiPart72.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart72.BackgroundTransparency = 0.5
		NewGuiPart72.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart72.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart72.Font = Enum.Font.SourceSans
		NewGuiPart72.FontSize = Enum.FontSize.Size18
		NewGuiPart72.Text = "Cancel"
		
		NewGuiPart73.Name = "Ok"
		NewGuiPart73.Parent = NewGuiPart61
		NewGuiPart73.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart73.BackgroundTransparency = 0.5
		NewGuiPart73.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart73.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart73.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart73.Font = Enum.Font.SourceSans
		NewGuiPart73.FontSize = Enum.FontSize.Size18
		NewGuiPart73.Text = "Call"
		
		NewGuiPart74.Name = "TableCaution"
		NewGuiPart74.Parent = NewGuiPart1
		NewGuiPart74.Active = true
		NewGuiPart74.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart74.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart74.Draggable = true
		NewGuiPart74.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart74.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart74.Visible = false
		NewGuiPart74.ZIndex = 2
		
		NewGuiPart75.Name = "MainWindow"
		NewGuiPart75.Parent = NewGuiPart74
		NewGuiPart75.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart75.BackgroundTransparency = 0.10000000149012
		NewGuiPart75.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart75.Size = UDim2.new(1, 0, 0, 150)
		
		NewGuiPart76.Name = "Ok"
		NewGuiPart76.Parent = NewGuiPart75
		NewGuiPart76.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart76.BackgroundTransparency = 0.5
		NewGuiPart76.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart76.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart76.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart76.Font = Enum.Font.SourceSans
		NewGuiPart76.FontSize = Enum.FontSize.Size18
		NewGuiPart76.Text = "Ok"
		
		NewGuiPart77.Name = "TableResults"
		NewGuiPart77.Parent = NewGuiPart75
		NewGuiPart77.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart77.BackgroundTransparency = 1
		NewGuiPart77.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart77.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart77.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart77.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.TopImage = "rbxasset://textures/blackBkg_square.png"
		
		NewGuiPart78.Name = "TableTemplate"
		NewGuiPart78.Parent = NewGuiPart75
		NewGuiPart78.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart78.BackgroundTransparency = 0.5
		NewGuiPart78.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart78.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart78.Visible = false
		
		NewGuiPart79.Name = "Type"
		NewGuiPart79.Parent = NewGuiPart78
		NewGuiPart79.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart79.BackgroundTransparency = 0.89999997615814
		NewGuiPart79.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart79.Font = Enum.Font.SourceSans
		NewGuiPart79.FontSize = Enum.FontSize.Size18
		NewGuiPart79.Text = "Script"
		
		NewGuiPart80.Name = "Value"
		NewGuiPart80.Parent = NewGuiPart78
		NewGuiPart80.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart80.BackgroundTransparency = 0.89999997615814
		NewGuiPart80.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart80.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart80.Font = Enum.Font.SourceSans
		NewGuiPart80.FontSize = Enum.FontSize.Size14
		NewGuiPart80.Text = "Script"
		
		NewGuiPart81.Name = "Title"
		NewGuiPart81.Parent = NewGuiPart74
		NewGuiPart81.BackgroundTransparency = 1
		NewGuiPart81.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart81.ZIndex = 2
		NewGuiPart81.Font = Enum.Font.SourceSans
		NewGuiPart81.FontSize = Enum.FontSize.Size14
		NewGuiPart81.Text = "Caution"
		NewGuiPart81.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart81.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart82.Name = "ScriptEditor"
		NewGuiPart82.Parent = NewGuiPart1
		NewGuiPart82.Active = true
		NewGuiPart82.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart82.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart82.Draggable = true
		NewGuiPart82.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart82.Size = UDim2.new(0, 516, 0, 20)
		NewGuiPart82.Visible = false
		NewGuiPart82.ZIndex = 5
		
		NewGuiPart163.Name = "OpenScript"
		NewGuiPart163.Parent = NewGuiPart82
		NewGuiPart163.Archivable = true
		
		NewGuiPart83.Name = "Title"
		NewGuiPart83.Parent = NewGuiPart82
		NewGuiPart83.BackgroundTransparency = 1
		NewGuiPart83.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart83.ZIndex = 5
		NewGuiPart83.Font = Enum.Font.SourceSans
		NewGuiPart83.FontSize = Enum.FontSize.Size14
		NewGuiPart83.Text = "Script Viewer"
		NewGuiPart83.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart83.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart84.Name = "Cover"
		NewGuiPart84.Parent = NewGuiPart82
		NewGuiPart84.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart84.BorderSizePixel = 0
		NewGuiPart84.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart84.Size = UDim2.new(0, 516, 0, 416)
		
		NewGuiPart85.Name = "EditorGrid"
		NewGuiPart85.Parent = NewGuiPart82
		NewGuiPart85.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart85.BorderSizePixel = 0
		NewGuiPart85.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart85.Size = UDim2.new(0, 500, 0, 400)
		
		NewGuiPart86.Name = "TopBar"
		NewGuiPart86.Parent = NewGuiPart82
		NewGuiPart86.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart86.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart86.Size = UDim2.new(1, 0, 3, 0)
		
		NewGuiPart87.Name = "ScriptBarLeft"
		NewGuiPart87.Parent = NewGuiPart86
		NewGuiPart87.Active = false
		NewGuiPart87.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart87.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart87.Position = UDim2.new(1, -32, 0, 40)
		NewGuiPart87.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart87.AutoButtonColor = false
		
		NewGuiPart88.Name = "Arrow Graphic"
		NewGuiPart88.Parent = NewGuiPart87
		NewGuiPart88.BackgroundTransparency = 1
		NewGuiPart88.BorderSizePixel = 0
		NewGuiPart88.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart88.Size = UDim2.new(0, 8, 0, 8)
		
		NewGuiPart89.Name = "Graphic"
		NewGuiPart89.Parent = NewGuiPart88
		NewGuiPart89.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart89.BackgroundTransparency = 0.69999998807907
		NewGuiPart89.BorderSizePixel = 0
		NewGuiPart89.Position = UDim2.new(0.25, 0, 0.375, 0)
		NewGuiPart89.Size = UDim2.new(0.125, 0, 0.25, 0)
		
		NewGuiPart90.Name = "Graphic"
		NewGuiPart90.Parent = NewGuiPart88
		NewGuiPart90.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart90.BackgroundTransparency = 0.69999998807907
		NewGuiPart90.BorderSizePixel = 0
		NewGuiPart90.Position = UDim2.new(0.375, 0, 0.25, 0)
		NewGuiPart90.Size = UDim2.new(0.125, 0, 0.5, 0)
		
		NewGuiPart91.Name = "Graphic"
		NewGuiPart91.Parent = NewGuiPart88
		NewGuiPart91.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart91.BackgroundTransparency = 0.69999998807907
		NewGuiPart91.BorderSizePixel = 0
		NewGuiPart91.Position = UDim2.new(0.5, 0, 0.125, 0)
		NewGuiPart91.Size = UDim2.new(0.125, 0, 0.75, 0)
		
		NewGuiPart92.Name = "Graphic"
		NewGuiPart92.Parent = NewGuiPart88
		NewGuiPart92.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart92.BackgroundTransparency = 0.69999998807907
		NewGuiPart92.BorderSizePixel = 0
		NewGuiPart92.Position = UDim2.new(0.625, 0, 0, 0)
		NewGuiPart92.Size = UDim2.new(0.125, 0, 1, 0)
		
		NewGuiPart93.Name = "ScriptBarRight"
		NewGuiPart93.Parent = NewGuiPart86
		NewGuiPart93.Active = false
		NewGuiPart93.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart93.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart93.Position = UDim2.new(1, -16, 0, 40)
		NewGuiPart93.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart93.AutoButtonColor = false
		
		NewGuiPart94.Name = "Arrow Graphic"
		NewGuiPart94.Parent = NewGuiPart93
		NewGuiPart94.BackgroundTransparency = 1
		NewGuiPart94.BorderSizePixel = 0
		NewGuiPart94.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart94.Size = UDim2.new(0, 8, 0, 8)
		
		NewGuiPart95.Name = "Graphic"
		NewGuiPart95.Parent = NewGuiPart94
		NewGuiPart95.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart95.BackgroundTransparency = 0.69999998807907
		NewGuiPart95.BorderSizePixel = 0
		NewGuiPart95.Position = UDim2.new(0.625, 0, 0.375, 0)
		NewGuiPart95.Size = UDim2.new(0.125, 0, 0.25, 0)
		
		NewGuiPart96.Name = "Graphic"
		NewGuiPart96.Parent = NewGuiPart94
		NewGuiPart96.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart96.BackgroundTransparency = 0.69999998807907
		NewGuiPart96.BorderSizePixel = 0
		NewGuiPart96.Position = UDim2.new(0.5, 0, 0.25, 0)
		NewGuiPart96.Size = UDim2.new(0.125, 0, 0.5, 0)
		
		NewGuiPart97.Name = "Graphic"
		NewGuiPart97.Parent = NewGuiPart94
		NewGuiPart97.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart97.BackgroundTransparency = 0.69999998807907
		NewGuiPart97.BorderSizePixel = 0
		NewGuiPart97.Position = UDim2.new(0.375, 0, 0.125, 0)
		NewGuiPart97.Size = UDim2.new(0.125, 0, 0.75, 0)
		
		NewGuiPart98.Name = "Graphic"
		NewGuiPart98.Parent = NewGuiPart94
		NewGuiPart98.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart98.BackgroundTransparency = 0.69999998807907
		NewGuiPart98.BorderSizePixel = 0
		NewGuiPart98.Position = UDim2.new(0.25, 0, 0, 0)
		NewGuiPart98.Size = UDim2.new(0.125, 0, 1, 0)
		
		NewGuiPart99.Name = "Clipboard"
		NewGuiPart99.Parent = NewGuiPart86
		NewGuiPart99.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart99.BackgroundTransparency = 0.5
		NewGuiPart99.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart99.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart99.Size = UDim2.new(0, 80, 0, 20)
		NewGuiPart99.Font = Enum.Font.SourceSans
		NewGuiPart99.FontSize = Enum.FontSize.Size14
		NewGuiPart99.Text = "To Clipboard"
		
		NewGuiPart100.Name = "ScriptBar"
		NewGuiPart100.Parent = NewGuiPart86
		NewGuiPart100.BackgroundColor3 = Color3.new(0.823529, 0.823529, 0.823529)
		NewGuiPart100.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart100.ClipsDescendants = true
		NewGuiPart100.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart100.Size = UDim2.new(1, -32, 0, 20)
		
		NewGuiPart101.Name = "Entry"
		NewGuiPart101.Parent = NewGuiPart86
		NewGuiPart101.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart101.BackgroundTransparency = 1
		NewGuiPart101.Size = UDim2.new(0, 100, 1, 0)
		NewGuiPart101.Visible = false
		
		NewGuiPart102.Name = "Button"
		NewGuiPart102.Parent = NewGuiPart101
		NewGuiPart102.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart102.BackgroundTransparency = 0.60000002384186
		NewGuiPart102.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart102.ClipsDescendants = true
		NewGuiPart102.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart102.ZIndex = 4
		NewGuiPart102.Font = Enum.Font.SourceSans
		NewGuiPart102.FontSize = Enum.FontSize.Size12
		NewGuiPart102.Text = ""
		NewGuiPart102.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart103.Name = "Close"
		NewGuiPart103.Parent = NewGuiPart101
		NewGuiPart103.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart103.BackgroundTransparency = 1
		NewGuiPart103.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart103.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart103.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart103.ZIndex = 4
		NewGuiPart103.Font = Enum.Font.SourceSans
		NewGuiPart103.FontSize = Enum.FontSize.Size14
		NewGuiPart103.Text = "X"
		
		NewGuiPart104.Name = "Close"
		NewGuiPart104.Parent = NewGuiPart82
		NewGuiPart104.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart104.BackgroundTransparency = 1
		NewGuiPart104.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart104.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart104.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart104.ZIndex = 5
		NewGuiPart104.Font = Enum.Font.SourceSans
		NewGuiPart104.FontSize = Enum.FontSize.Size14
		NewGuiPart104.Text = "X"
		
		NewGuiPart105.Name = "IntroFrame"
		NewGuiPart105.Parent = NewGuiPart1
		NewGuiPart105.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart105.BorderSizePixel = 0
		NewGuiPart105.Position = UDim2.new(1, 30, 0, 0)
		NewGuiPart105.Size = UDim2.new(0, 300, 1, 0)
		NewGuiPart105.ZIndex = 2
		
		NewGuiPart106.Name = "Main"
		NewGuiPart106.Parent = NewGuiPart105
		NewGuiPart106.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart106.BorderSizePixel = 0
		NewGuiPart106.Position = UDim2.new(0, -30, 0, 0)
		NewGuiPart106.Size = UDim2.new(0, 30, 0, 90)
		NewGuiPart106.ZIndex = 2
		
		NewGuiPart107.Name = "Title"
		NewGuiPart107.Parent = NewGuiPart105
		NewGuiPart107.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart107.BackgroundTransparency = 1
		NewGuiPart107.Position = UDim2.new(0, 100, 0, 150)
		NewGuiPart107.Size = UDim2.new(0, 100, 0, 60)
		NewGuiPart107.ZIndex = 2
		NewGuiPart107.Font = Enum.Font.SourceSansBold
		NewGuiPart107.FontSize = Enum.FontSize.Size60
		NewGuiPart107.Text = "DEX"
		NewGuiPart107.TextWrapped = true
		
		NewGuiPart108.Name = "Version"
		NewGuiPart108.Parent = NewGuiPart105
		NewGuiPart108.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart108.BackgroundTransparency = 1
		NewGuiPart108.Position = UDim2.new(0, 100, 0, 210)
		NewGuiPart108.Size = UDim2.new(0, 100, 0, 30)
		NewGuiPart108.ZIndex = 2
		NewGuiPart108.Font = Enum.Font.SourceSansBold
		NewGuiPart108.FontSize = Enum.FontSize.Size28
		NewGuiPart108.Text = "V2.0.0"
		NewGuiPart108.TextWrapped = true
		
		NewGuiPart109.Name = "Creator"
		NewGuiPart109.Parent = NewGuiPart105
		NewGuiPart109.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart109.BackgroundTransparency = 1
		NewGuiPart109.Position = UDim2.new(0, 80, 0, 300)
		NewGuiPart109.Size = UDim2.new(0, 140, 0, 30)
		NewGuiPart109.ZIndex = 2
		NewGuiPart109.Font = Enum.Font.SourceSansBold
		NewGuiPart109.FontSize = Enum.FontSize.Size28
		NewGuiPart109.Text = "Raspberry Pi , Script Made By Advancedev"
		NewGuiPart109.TextWrapped = true
		
		NewGuiPart110.Name = "Slant"
		NewGuiPart110.Parent = NewGuiPart105
		NewGuiPart110.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart110.BackgroundTransparency = 1
		NewGuiPart110.Position = UDim2.new(0, -30, 0, 90)
		NewGuiPart110.Rotation = 180
		NewGuiPart110.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart110.ZIndex = 2
		NewGuiPart110.Image = "rbxassetid://474172996"
		NewGuiPart110.ImageColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		
		NewGuiPart111.Name = "SaveMapWindow"
		NewGuiPart111.Parent = NewGuiPart1
		NewGuiPart111.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart111.BackgroundTransparency = 0.10000000149012
		NewGuiPart111.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart111.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart111.Size = UDim2.new(0, 300, 1, 0)
		
		NewGuiPart112.Name = "Header"
		NewGuiPart112.Parent = NewGuiPart111
		NewGuiPart112.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart112.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart112.Size = UDim2.new(1, 0, 0, 17)
		
		NewGuiPart113.Parent = NewGuiPart112
		NewGuiPart113.BackgroundTransparency = 1
		NewGuiPart113.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart113.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart113.Font = Enum.Font.SourceSans
		NewGuiPart113.FontSize = Enum.FontSize.Size14
		NewGuiPart113.Text = "Map Downloader"
		NewGuiPart113.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart113.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart114.Name = "MapSettings"
		NewGuiPart114.Parent = NewGuiPart111
		NewGuiPart114.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart114.BackgroundTransparency = 1
		NewGuiPart114.Position = UDim2.new(0, 0, 0, 200)
		NewGuiPart114.Size = UDim2.new(1, 0, 0, 240)
		
		NewGuiPart115.Name = "Terrain"
		NewGuiPart115.Parent = NewGuiPart114
		NewGuiPart115.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart115.BackgroundTransparency = 1
		NewGuiPart115.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart115.Size = UDim2.new(1, 0, 0, 60)
		
		NewGuiPart116.Name = "SName"
		NewGuiPart116.Parent = NewGuiPart115
		NewGuiPart116.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart116.BackgroundTransparency = 1
		NewGuiPart116.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart116.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart116.Font = Enum.Font.SourceSans
		NewGuiPart116.FontSize = Enum.FontSize.Size18
		NewGuiPart116.Text = "Save Terrain"
		NewGuiPart116.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart117.Name = "Status"
		NewGuiPart117.Parent = NewGuiPart115
		NewGuiPart117.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart117.BackgroundTransparency = 1
		NewGuiPart117.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart117.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart117.Font = Enum.Font.SourceSans
		NewGuiPart117.FontSize = Enum.FontSize.Size18
		NewGuiPart117.Text = "Off"
		NewGuiPart117.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart118.Name = "Change"
		NewGuiPart118.Parent = NewGuiPart115
		NewGuiPart118.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart118.BorderSizePixel = 0
		NewGuiPart118.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart118.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart118.Font = Enum.Font.SourceSans
		NewGuiPart118.FontSize = Enum.FontSize.Size14
		NewGuiPart118.Text = ""
		
		NewGuiPart119.Name = "OnBar"
		NewGuiPart119.Parent = NewGuiPart118
		NewGuiPart119.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart119.BorderSizePixel = 0
		NewGuiPart119.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart119.Font = Enum.Font.SourceSans
		NewGuiPart119.FontSize = Enum.FontSize.Size14
		NewGuiPart119.Text = ""
		
		NewGuiPart120.Name = "Bar"
		NewGuiPart120.Parent = NewGuiPart118
		NewGuiPart120.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart120.BorderSizePixel = 0
		NewGuiPart120.ClipsDescendants = true
		NewGuiPart120.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart120.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart120.Font = Enum.Font.SourceSans
		NewGuiPart120.FontSize = Enum.FontSize.Size14
		NewGuiPart120.Text = ""
		
		NewGuiPart121.Name = "Lighting"
		NewGuiPart121.Parent = NewGuiPart114
		NewGuiPart121.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart121.BackgroundTransparency = 1
		NewGuiPart121.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart121.Size = UDim2.new(1, 0, 0, 60)
		
		NewGuiPart122.Name = "SName"
		NewGuiPart122.Parent = NewGuiPart121
		NewGuiPart122.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart122.BackgroundTransparency = 1
		NewGuiPart122.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart122.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart122.Font = Enum.Font.SourceSans
		NewGuiPart122.FontSize = Enum.FontSize.Size18
		NewGuiPart122.Text = "Lighting Properties"
		NewGuiPart122.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart123.Name = "Status"
		NewGuiPart123.Parent = NewGuiPart121
		NewGuiPart123.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart123.BackgroundTransparency = 1
		NewGuiPart123.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart123.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart123.Font = Enum.Font.SourceSans
		NewGuiPart123.FontSize = Enum.FontSize.Size18
		NewGuiPart123.Text = "Off"
		NewGuiPart123.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart124.Name = "Change"
		NewGuiPart124.Parent = NewGuiPart121
		NewGuiPart124.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart124.BorderSizePixel = 0
		NewGuiPart124.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart124.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart124.Font = Enum.Font.SourceSans
		NewGuiPart124.FontSize = Enum.FontSize.Size14
		NewGuiPart124.Text = ""
		
		NewGuiPart125.Name = "OnBar"
		NewGuiPart125.Parent = NewGuiPart124
		NewGuiPart125.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart125.BorderSizePixel = 0
		NewGuiPart125.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart125.Font = Enum.Font.SourceSans
		NewGuiPart125.FontSize = Enum.FontSize.Size14
		NewGuiPart125.Text = ""
		
		NewGuiPart126.Name = "Bar"
		NewGuiPart126.Parent = NewGuiPart124
		NewGuiPart126.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart126.BorderSizePixel = 0
		NewGuiPart126.ClipsDescendants = true
		NewGuiPart126.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart126.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart126.Font = Enum.Font.SourceSans
		NewGuiPart126.FontSize = Enum.FontSize.Size14
		NewGuiPart126.Text = ""
		
		NewGuiPart127.Name = "CameraInstances"
		NewGuiPart127.Parent = NewGuiPart114
		NewGuiPart127.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart127.BackgroundTransparency = 1
		NewGuiPart127.Position = UDim2.new(0, 0, 0, 180)
		NewGuiPart127.Size = UDim2.new(1, 0, 0, 60)
		
		NewGuiPart128.Name = "SName"
		NewGuiPart128.Parent = NewGuiPart127
		NewGuiPart128.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart128.BackgroundTransparency = 1
		NewGuiPart128.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart128.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart128.Font = Enum.Font.SourceSans
		NewGuiPart128.FontSize = Enum.FontSize.Size18
		NewGuiPart128.Text = "Camera Instances"
		NewGuiPart128.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart129.Name = "Status"
		NewGuiPart129.Parent = NewGuiPart127
		NewGuiPart129.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart129.BackgroundTransparency = 1
		NewGuiPart129.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart129.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart129.Font = Enum.Font.SourceSans
		NewGuiPart129.FontSize = Enum.FontSize.Size18
		NewGuiPart129.Text = "Off"
		NewGuiPart129.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart130.Name = "Change"
		NewGuiPart130.Parent = NewGuiPart127
		NewGuiPart130.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart130.BorderSizePixel = 0
		NewGuiPart130.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart130.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart130.Font = Enum.Font.SourceSans
		NewGuiPart130.FontSize = Enum.FontSize.Size14
		NewGuiPart130.Text = ""
		
		NewGuiPart131.Name = "OnBar"
		NewGuiPart131.Parent = NewGuiPart130
		NewGuiPart131.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart131.BorderSizePixel = 0
		NewGuiPart131.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart131.Font = Enum.Font.SourceSans
		NewGuiPart131.FontSize = Enum.FontSize.Size14
		NewGuiPart131.Text = ""
		
		NewGuiPart132.Name = "Bar"
		NewGuiPart132.Parent = NewGuiPart130
		NewGuiPart132.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart132.BorderSizePixel = 0
		NewGuiPart132.ClipsDescendants = true
		NewGuiPart132.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart132.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart132.Font = Enum.Font.SourceSans
		NewGuiPart132.FontSize = Enum.FontSize.Size14
		NewGuiPart132.Text = ""
		
		NewGuiPart133.Name = "Scripts"
		NewGuiPart133.Parent = NewGuiPart114
		NewGuiPart133.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart133.BackgroundTransparency = 1
		NewGuiPart133.Size = UDim2.new(1, 0, 0, 60)
		
		NewGuiPart134.Name = "SName"
		NewGuiPart134.Parent = NewGuiPart133
		NewGuiPart134.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart134.BackgroundTransparency = 1
		NewGuiPart134.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart134.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart134.Font = Enum.Font.SourceSans
		NewGuiPart134.FontSize = Enum.FontSize.Size18
		NewGuiPart134.Text = "Save Scripts"
		NewGuiPart134.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart135.Name = "Status"
		NewGuiPart135.Parent = NewGuiPart133
		NewGuiPart135.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart135.BackgroundTransparency = 1
		NewGuiPart135.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart135.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart135.Font = Enum.Font.SourceSans
		NewGuiPart135.FontSize = Enum.FontSize.Size18
		NewGuiPart135.Text = "Off"
		NewGuiPart135.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart136.Name = "Change"
		NewGuiPart136.Parent = NewGuiPart133
		NewGuiPart136.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart136.BorderSizePixel = 0
		NewGuiPart136.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart136.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart136.Font = Enum.Font.SourceSans
		NewGuiPart136.FontSize = Enum.FontSize.Size14
		NewGuiPart136.Text = ""
		
		NewGuiPart137.Name = "OnBar"
		NewGuiPart137.Parent = NewGuiPart136
		NewGuiPart137.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart137.BorderSizePixel = 0
		NewGuiPart137.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart137.Font = Enum.Font.SourceSans
		NewGuiPart137.FontSize = Enum.FontSize.Size14
		NewGuiPart137.Text = ""
		
		NewGuiPart138.Name = "Bar"
		NewGuiPart138.Parent = NewGuiPart136
		NewGuiPart138.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart138.BorderSizePixel = 0
		NewGuiPart138.ClipsDescendants = true
		NewGuiPart138.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart138.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart138.Font = Enum.Font.SourceSans
		NewGuiPart138.FontSize = Enum.FontSize.Size14
		NewGuiPart138.Text = ""
		
		NewGuiPart139.Name = "ToSave"
		NewGuiPart139.Parent = NewGuiPart111
		NewGuiPart139.BackgroundTransparency = 1
		NewGuiPart139.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart139.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart139.Font = Enum.Font.SourceSans
		NewGuiPart139.FontSize = Enum.FontSize.Size18
		NewGuiPart139.Text = "To Save"
		NewGuiPart139.TextColor3 = Color3.new(0, 0, 0)
		
		NewGuiPart140.Name = "CopyList"
		NewGuiPart140.Parent = NewGuiPart111
		NewGuiPart140.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart140.BackgroundTransparency = 0.80000001192093
		NewGuiPart140.Position = UDim2.new(0, 0, 0, 37)
		NewGuiPart140.Size = UDim2.new(1, 0, 0, 163)
		
		NewGuiPart141.Name = "Bottom"
		NewGuiPart141.Parent = NewGuiPart111
		NewGuiPart141.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart141.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart141.Position = UDim2.new(0, 0, 1, -50)
		NewGuiPart141.Size = UDim2.new(1, 0, 0, 50)
		
		NewGuiPart142.Parent = NewGuiPart141
		NewGuiPart142.BackgroundTransparency = 1
		NewGuiPart142.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart142.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart142.Font = Enum.Font.SourceSans
		NewGuiPart142.FontSize = Enum.FontSize.Size14
		NewGuiPart142.Text = "After the map saves, open a new place on studio, then right click Lighting and \"Insert from file...\", then select your file and run the unpacker script inside the folder."
		NewGuiPart142.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart142.TextWrapped = true
		NewGuiPart142.TextXAlignment = Enum.TextXAlignment.Left
		NewGuiPart142.TextYAlignment = Enum.TextYAlignment.Top
		
		NewGuiPart143.Name = "Save"
		NewGuiPart143.Parent = NewGuiPart111
		NewGuiPart143.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart143.BackgroundTransparency = 0.80000001192093
		NewGuiPart143.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart143.Position = UDim2.new(0, 0, 1, -80)
		NewGuiPart143.Size = UDim2.new(1, 0, 0, 30)
		NewGuiPart143.Font = Enum.Font.SourceSans
		NewGuiPart143.FontSize = Enum.FontSize.Size18
		NewGuiPart143.Text = "Save"
		
		NewGuiPart144.Name = "FileName"
		NewGuiPart144.Parent = NewGuiPart111
		NewGuiPart144.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart144.BackgroundTransparency = 0.60000002384186
		NewGuiPart144.Position = UDim2.new(0, 0, 1, -105)
		NewGuiPart144.Size = UDim2.new(1, 0, 0, 25)
		NewGuiPart144.Font = Enum.Font.SourceSans
		NewGuiPart144.FontSize = Enum.FontSize.Size18
		NewGuiPart144.Text = "PlaceName"
		NewGuiPart144.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart145.Name = "Entry"
		NewGuiPart145.Parent = NewGuiPart111
		NewGuiPart145.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart145.BackgroundTransparency = 1
		NewGuiPart145.Size = UDim2.new(1, 0, 0, 22)
		NewGuiPart145.Visible = false
		
		NewGuiPart146.Name = "Change"
		NewGuiPart146.Parent = NewGuiPart145
		NewGuiPart146.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart146.BackgroundTransparency = 0.60000002384186
		NewGuiPart146.Position = UDim2.new(0, 10, 0, 1)
		NewGuiPart146.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart146.ZIndex = 2
		NewGuiPart146.Font = Enum.Font.SourceSans
		NewGuiPart146.FontSize = Enum.FontSize.Size18
		NewGuiPart146.Text = ""
		NewGuiPart146.TextColor3 = Color3.new(1, 1, 1)
		
		NewGuiPart147.Name = "enabled"
		NewGuiPart147.Parent = NewGuiPart146
		NewGuiPart147.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart147.BackgroundTransparency = 0.40000000596046
		NewGuiPart147.BorderSizePixel = 0
		NewGuiPart147.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart147.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart147.Font = Enum.Font.SourceSans
		NewGuiPart147.FontSize = Enum.FontSize.Size14
		NewGuiPart147.Text = ""
		
		NewGuiPart148.Name = "Info"
		NewGuiPart148.Parent = NewGuiPart145
		NewGuiPart148.BackgroundTransparency = 1
		NewGuiPart148.Position = UDim2.new(0, 40, 0, 0)
		NewGuiPart148.Size = UDim2.new(1, -40, 0, 22)
		NewGuiPart148.Font = Enum.Font.SourceSans
		NewGuiPart148.FontSize = Enum.FontSize.Size18
		NewGuiPart148.Text = "Workspace"
		NewGuiPart148.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart148.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart149.Name = "RemoteDebugWindow"
		NewGuiPart149.Parent = NewGuiPart1
		NewGuiPart149.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart149.BackgroundTransparency = 0.10000000149012
		NewGuiPart149.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart149.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart149.Size = UDim2.new(0, 300, 1, 0)
		
		NewGuiPart161.Name = "GetSetting"
		NewGuiPart161.Parent = NewGuiPart149
		NewGuiPart161.Archivable = true
		
		NewGuiPart150.Name = "Header"
		NewGuiPart150.Parent = NewGuiPart149
		NewGuiPart150.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart150.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart150.Size = UDim2.new(1, 0, 0, 17)
		
		NewGuiPart151.Parent = NewGuiPart150
		NewGuiPart151.BackgroundTransparency = 1
		NewGuiPart151.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart151.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart151.Font = Enum.Font.SourceSans
		NewGuiPart151.FontSize = Enum.FontSize.Size14
		NewGuiPart151.Text = "Remote Debugger"
		NewGuiPart151.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart151.TextXAlignment = Enum.TextXAlignment.Left
		
		NewGuiPart152.Name = "Desc"
		NewGuiPart152.Parent = NewGuiPart149
		NewGuiPart152.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart152.BackgroundTransparency = 1
		NewGuiPart152.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart152.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart152.Font = Enum.Font.SourceSans
		NewGuiPart152.FontSize = Enum.FontSize.Size32
		NewGuiPart152.Text = "Have fun with remotes"
		NewGuiPart152.TextWrapped = true
		return NewGuiPart1
	end
	local D_E_X = CreateGui()
	D_E_X.Parent = game.Players.LocalPlayer.PlayerGui
	spawn(function()
		local Gui = D_E_X
		
		
		local IntroFrame = Gui:WaitForChild("IntroFrame")
		
		local SideMenu = Gui:WaitForChild("SideMenu")
		local OpenToggleButton = Gui:WaitForChild("Toggle")
		local CloseToggleButton = SideMenu:WaitForChild("Toggle")
		local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")
		
		local ScriptEditor = Gui:WaitForChild("ScriptEditor")
		
		local SlideOut = SideMenu:WaitForChild("SlideOut")
		local SlideFrame = SlideOut:WaitForChild("SlideFrame")
		local Slant = SideMenu:WaitForChild("Slant")
		
		local ExplorerButton = SlideFrame:WaitForChild("Explorer")
		local SettingsButton = SlideFrame:WaitForChild("Settings")
		
		local SelectionBox = Instance.new("SelectionBox")
		SelectionBox.Parent = Gui
		
		local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
		local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")
		
		local SettingsPanel = Gui:WaitForChild("SettingsPanel")
		local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
		local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
		local SettingList = SettingsPanel:WaitForChild("SettingList")
		
		local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
		local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
		local SaveMapName = SaveMapWindow:WaitForChild("FileName")
		local SaveMapButton = SaveMapWindow:WaitForChild("Save")
		local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
		local SaveMapSettings = {
			CopyWhat = {
				Workspace = true,
				Lighting = true,
				ReplicatedStorage = true,
				ReplicatedFirst = true,
				StarterPack = true,
				StarterGui = true,
				StarterPlayer = true
			},
			SaveScripts = true,
			SaveTerrain = true,
			LightingProperties = true,
			CameraInstances = true
		}
		
		local SelectionChanged = ExplorerPanel:WaitForChild("SelectionChanged")
		local GetSelection = ExplorerPanel:WaitForChild("GetSelection")
		local SetSelection = ExplorerPanel:WaitForChild("SetSelection")
		
		local Player = game:GetService("Players").LocalPlayer
		local Mouse = Player:GetMouse()
		
		local CurrentWindow = "Nothing c:"
		local Windows = {
			Explorer = {
				ExplorerPanel,
				PropertiesFrame
			},
			Settings = {SettingsPanel},
			SaveMap = {SaveMapWindow},
			Remotes = {RemoteDebugWindow}
		}
		
		function switchWindows(wName,over)
			if CurrentWindow == wName and not over then return end
			
			local count = 0
			
			for i,v in pairs(Windows) do
				count = 0
				if i ~= wName then
					for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
				end
			end
			
			count = 0
			
			if Windows[wName] then
				for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
			end
			
			if wName ~= "Nothing c:" then
				CurrentWindow = wName
				for i,v in pairs(SlideFrame:GetChildren()) do
					v.BackgroundTransparency = 1
					v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
				end
				if SlideFrame:FindFirstChild(wName) then
					SlideFrame[wName].BackgroundTransparency = 0.5
					SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
				end
			end
		end
		
		function toggleDex(on)
			if on then
				SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
				switchWindows(CurrentWindow,true)
			else
				SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
				switchWindows("Nothing c:")
			end
		end
		
		local Settings = {
			ClickSelect = false,
			SelBox = false,
			ClearProps = false,
			SelectUngrouped = true,
			SaveInstanceScripts = true
		}
		
		function ReturnSetting(set)
			if set == "ClearProps" then
				return Settings.ClearProps
			elseif set == "SelectUngrouped" then
				return Settings.SelectUngrouped
			end
		end
		
		OpenToggleButton.MouseButton1Up:connect(function()
			toggleDex(true)
		end)
		
		OpenScriptEditorButton.MouseButton1Up:connect(function()
			if OpenScriptEditorButton.Active then
				ScriptEditor.Visible = true
			end
		end)
		
		CloseToggleButton.MouseButton1Up:connect(function()
			if CloseToggleButton.Active then
				toggleDex(false)
			end
		end)
		
		for i,v in pairs(SlideFrame:GetChildren()) do
			v.MouseButton1Click:connect(function()
				switchWindows(v.Name)
			end)
			
			v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
			v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
		end
		
		
		function createSetting(name,interName,defaultOn)
			local newSetting = SettingTemplate:Clone()
			newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
			newSetting.SName.Text = name
			
			local function toggle(on)
				if on then
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "On"
					Settings[interName] = true
				else
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "Off"
					Settings[interName] = false
				end
			end	
			
			newSetting.Change.MouseButton1Click:connect(function()
				toggle(not Settings[interName])
			end)
			
			newSetting.Visible = true
			newSetting.Parent = SettingList
			
			if defaultOn then
				toggle(true)
			end
		end
		
		createSetting("Click part to select","ClickSelect",false)
		createSetting("Selection Box","SelBox",false)
		createSetting("Clear property value on focus","ClearProps",false)
		createSetting("Select ungrouped models","SelectUngrouped",true)
		createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)
		
		local function getSelection()
			local t = GetSelection:Invoke()
			if t and #t > 0 then
				return t[1]
			else
				return nil
			end
		end
		
		Mouse.Button1Down:connect(function()
			if CurrentWindow == "Explorer" and Settings.ClickSelect then
				local target = Mouse.Target
				if target then
					SetSelection:Invoke({target})
				end
			end
		end)
		
		SelectionChanged.Event:connect(function()
			if Settings.SelBox then
				local success,err = pcall(function()
					local selection = getSelection()
					SelectionBox.Adornee = selection
				end)
				if err then
					SelectionBox.Adornee = nil
				end
			end
		end)
		
		SettingsListener.OnInvoke = ReturnSetting
		
		-- Map Copier
		
		function createMapSetting(obj,interName,defaultOn)
			local function toggle(on)
				if on then
					obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "On"
					SaveMapSettings[interName] = true
				else
					obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "Off"
					SaveMapSettings[interName] = false
				end
			end	
			
			obj.Change.MouseButton1Click:connect(function()
				toggle(not SaveMapSettings[interName])
			end)
			
			obj.Visible = true
			obj.Parent = SaveMapSettingFrame
			
			if defaultOn then
				toggle(true)
			end
		end
		
		function createCopyWhatSetting(serv)
			if SaveMapSettings.CopyWhat[serv] then
				local newSetting = SaveMapCopyTemplate:Clone()
				newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
				newSetting.Info.Text = serv
				
				local function toggle(on)
					if on then
						newSetting.Change.enabled.Visible = true
						SaveMapSettings.CopyWhat[serv] = true
					else
						newSetting.Change.enabled.Visible = false
						SaveMapSettings.CopyWhat[serv] = false
					end
				end	
				
				newSetting.Change.MouseButton1Click:connect(function()
					toggle(not SaveMapSettings.CopyWhat[serv])
				end)
				
				newSetting.Visible = true
				newSetting.Parent = SaveMapCopyList
			end
		end
		
		createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
		createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
		createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
		createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)
		
		createCopyWhatSetting("Workspace")
		createCopyWhatSetting("Lighting")
		createCopyWhatSetting("ReplicatedStorage")
		createCopyWhatSetting("ReplicatedFirst")
		createCopyWhatSetting("StarterPack")
		createCopyWhatSetting("StarterGui")
		createCopyWhatSetting("StarterPlayer")
		
		SaveMapName.Text = tostring(game.PlaceId).."MapCopy"
		
		SaveMapButton.MouseButton1Click:connect(function()
			local copyWhat = {}
			
			local copyGroup = Instance.new("Model",game.ReplicatedStorage)
			
			local copyScripts = SaveMapSettings.SaveScripts
			
			local copyTerrain = SaveMapSettings.SaveTerrain
			
			local lightingProperties = SaveMapSettings.LightingProperties
			
			local cameraInstances = SaveMapSettings.CameraInstances
			
			-----------------------------------------------------------------------------------
			
			for i,v in pairs(SaveMapSettings.CopyWhat) do
				if v then
					table.insert(copyWhat,i)
				end
			end
			
			local consoleFunc = printconsole or writeconsole
			
			if consoleFunc then
				consoleFunc("Raspberry Pi's place copier loaded.")
				consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
			end
			
			function archivable(root)
				for i,v in pairs(root:GetChildren()) do
					if not game.Players:GetPlayerFromCharacter(v) then
						v.Archivable = true
						archivable(v)
					end
				end
			end
			
			function decompileS(root)
				for i,v in pairs(root:GetChildren()) do
					pcall(function()
						if v:IsA("LocalScript") then
							local isDisabled = v.Disabled
							v.Disabled = true
							v.Source = decompile(v)
							v.Disabled = isDisabled
							
							if v.Source == "" then 
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
							end
						elseif v:IsA("ModuleScript") then
							v.Source = decompile(v)
							
							if v.Source == "" then 
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
							end
						end
					end)
					decompileS(v)
				end
			end
			
			for i,v in pairs(copyWhat) do archivable(game[v]) end
			
			for j,obj in pairs(copyWhat) do
				if obj ~= "StarterPlayer" then
					local newFolder = Instance.new("Folder",copyGroup)
					newFolder.Name = obj
					for i,v in pairs(game[obj]:GetChildren()) do
						if v ~= copyGroup then
							pcall(function()
								v:Clone().Parent = newFolder
							end)
						end
					end
				else
					local newFolder = Instance.new("Model",copyGroup)
					newFolder.Name = "StarterPlayer"
					for i,v in pairs(game[obj]:GetChildren()) do
						local newObj = Instance.new("Folder",newFolder)
						newObj.Name = v.Name
						for _,c in pairs(v:GetChildren()) do
							if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
								c:Clone().Parent = newObj
							end
						end
					end
				end
			end
			
			if workspace.CurrentCamera and cameraInstances then
				local cameraFolder = Instance.new("Model",copyGroup)
				cameraFolder.Name = "CameraItems"
				for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
			end
			
			if copyTerrain then
				local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
				myTerrain.Parent = copyGroup
			end
			
			function saveProp(obj,prop,par)
				local myProp = obj[prop]
				if type(myProp) == "boolean" then
					local newProp = Instance.new("BoolValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "number" then
					local newProp = Instance.new("IntValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "string" then
					local newProp = Instance.new("StringValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "userdata" then -- Assume Color3
					pcall(function()
						local newProp = Instance.new("Color3Value",par)
						newProp.Name = prop
						newProp.Value = myProp
					end)
				end
			end
			
			if lightingProperties then
				local lightingProps = Instance.new("Model",copyGroup)
				lightingProps.Name = "LightingProperties"
				
				saveProp(game.Lighting,"Ambient",lightingProps)
				saveProp(game.Lighting,"Brightness",lightingProps)
				saveProp(game.Lighting,"ColorShift_Bottom",lightingProps)
				saveProp(game.Lighting,"ColorShift_Top",lightingProps)
				saveProp(game.Lighting,"GlobalShadows",lightingProps)
				saveProp(game.Lighting,"OutdoorAmbient",lightingProps)
				saveProp(game.Lighting,"Outlines",lightingProps)
				saveProp(game.Lighting,"GeographicLatitude",lightingProps)
				saveProp(game.Lighting,"TimeOfDay",lightingProps)
				saveProp(game.Lighting,"FogColor",lightingProps)
				saveProp(game.Lighting,"FogEnd",lightingProps)
				saveProp(game.Lighting,"FogStart",lightingProps)
			end
			
			if decompile and copyScripts then
				decompileS(copyGroup)
			end
			
			if SaveInstance then
				SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
			elseif saveinstance then
				saveinstance(getelysianpath()..SaveMapName.Text..".rbxm",copyGroup)
			end
			--print("Saved!")
			if consoleFunc then
				consoleFunc("The map has been copied.")
			end
			SaveMapButton.Text = "The map has been saved"
			wait(5)
			SaveMapButton.Text = "Save"
		end)
		
		-- End Copier
		
		wait()
		
		IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		
		switchWindows("Explorer")
		
		wait(1)
		
		SideMenu.Visible = true
		
		for i = 0,1,0.1 do
			IntroFrame.BackgroundTransparency = i
			IntroFrame.Main.BackgroundTransparency = i
			IntroFrame.Slant.ImageTransparency = i
			IntroFrame.Title.TextTransparency = i
			IntroFrame.Version.TextTransparency = i
			IntroFrame.Creator.TextTransparency = i
			wait()
		end
		
		IntroFrame.Visible = false
		
		SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		CloseToggleButton:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		Slant:TweenPosition(UDim2.new(0,0,0,240),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		
		wait(0.5)
		
		for i = 1,0,-0.1 do
			OpenScriptEditorButton.Icon.ImageTransparency = i
			CloseToggleButton.TextTransparency = i
			wait()
		end
		
		CloseToggleButton.Active = true
		CloseToggleButton.AutoButtonColor = true
		
		OpenScriptEditorButton.Active = true
		OpenScriptEditorButton.AutoButtonColor = true
	end)
	spawn(function()
		-- initial states
		local Option = {
			-- can modify object parents in the hierarchy
			Modifiable = false;
			-- can select objects
			Selectable = true;
		}
		
		-- MERELY
		
		Option.Modifiable = true
		
		-- END MERELY
		
		-- general size of GUI objects, in pixels
		local GUI_SIZE = 16
		-- padding between items within each entry
		local ENTRY_PADDING = 1
		-- padding between each entry
		local ENTRY_MARGIN = 1
		
		local Input = game:GetService("UserInputService")
		local HoldingCtrl = false
		local HoldingShift = false
		
--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]
		
		local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
		local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
		local HEADER_SIZE = ENTRY_SIZE*2
		
		local FONT = 'SourceSans'
		local FONT_SIZE do
			local size = {8,9,10,11,12,14,18,24,36,48}
			local s
			local n = math.huge
			for i = 1,#size do
				if size[i] <= GUI_SIZE then
					FONT_SIZE = i - 1
				end
			end
		end
		
		local GuiColor = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 96/255, 140/255, 211/255);
			BorderSelected  = Color3.new( 86/255, 125/255, 188/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Icon map constants
		
		local MAP_ID = 483448923
		
		-- Indices based on implementation of Icon function.
		local ACTION_CUT         	 = 160
		local ACTION_COPY        	 = 161
		local ACTION_PASTE       	 = 162
		local ACTION_DELETE      	 = 163
		local ACTION_SORT        	 = 164
		local ACTION_CUT_OVER    	 = 174
		local ACTION_COPY_OVER   	 = 175
		local ACTION_PASTE_OVER  	 = 176
		local ACTION_DELETE_OVER	 = 177
		local ACTION_SORT_OVER  	 = 178
		local ACTION_EDITQUICKACCESS = 190
		local ACTION_FREEZE 		 = 188
		local ACTION_STARRED 		 = 189
		local ACTION_ADDSTAR 		 = 184
		local ACTION_ADDSTAR_OVER 	 = 187
		
		local NODE_COLLAPSED      = 165
		local NODE_EXPANDED       = 166
		local NODE_COLLAPSED_OVER = 179
		local NODE_EXPANDED_OVER  = 180
		
		local ExplorerIndex = {
			["Accessory"] = 32;
			["Accoutrement"] = 32;
			["AdService"] = 73;
			["Animation"] = 60;
			["AnimationController"] = 60;
			["AnimationTrack"] = 60;
			["Animator"] = 60;
			["ArcHandles"] = 56;
			["AssetService"] = 72;
			["Attachment"] = 34;
			["Backpack"] = 20;
			["BadgeService"] = 75;
			["BallSocketConstraint"] = 89;
			["BillboardGui"] = 64;
			["BinaryStringValue"] = 4;
			["BindableEvent"] = 67;
			["BindableFunction"] = 66;
			["BlockMesh"] = 8;
			["BloomEffect"] = 90;
			["BlurEffect"] = 90;
			["BodyAngularVelocity"] = 14;
			["BodyForce"] = 14;
			["BodyGyro"] = 14;
			["BodyPosition"] = 14;
			["BodyThrust"] = 14;
			["BodyVelocity"] = 14;
			["BoolValue"] = 4;
			["BoxHandleAdornment"] = 54;
			["BrickColorValue"] = 4;
			["Camera"] = 5;
			["CFrameValue"] = 4;
			["CharacterMesh"] = 60;
			["Chat"] = 33;
			["ClickDetector"] = 41;
			["CollectionService"] = 30;
			["Color3Value"] = 4;
			["ColorCorrectionEffect"] = 90;
			["ConeHandleAdornment"] = 54;
			["Configuration"] = 58;
			["ContentProvider"] = 72;
			["ContextActionService"] = 41;
			["CoreGui"] = 46;
			["CoreScript"] = 18;
			["CornerWedgePart"] = 1;
			["CustomEvent"] = 4;
			["CustomEventReceiver"] = 4;
			["CylinderHandleAdornment"] = 54;
			["CylinderMesh"] = 8;
			["CylindricalConstraint"] = 89;
			["Debris"] = 30;
			["Decal"] = 7;
			["Dialog"] = 62;
			["DialogChoice"] = 63;
			["DoubleConstrainedValue"] = 4;
			["Explosion"] = 36;
			["FileMesh"] = 8;
			["Fire"] = 61;
			["Flag"] = 38;
			["FlagStand"] = 39;
			["FloorWire"] = 4;
			["Folder"] = 70;
			["ForceField"] = 37;
			["Frame"] = 48;
			["GamePassService"] = 19;
			["Glue"] = 34;
			["GuiButton"] = 52;
			["GuiMain"] = 47;
			["GuiService"] = 47;
			["Handles"] = 53;
			["HapticService"] = 84;
			["Hat"] = 45;
			["HingeConstraint"] = 89;
			["Hint"] = 33;
			["HopperBin"] = 22;
			["HttpService"] = 76;
			["Humanoid"] = 9;
			["ImageButton"] = 52;
			["ImageLabel"] = 49;
			["InsertService"] = 72;
			["IntConstrainedValue"] = 4;
			["IntValue"] = 4;
			["JointInstance"] = 34;
			["JointsService"] = 34;
			["Keyframe"] = 60;
			["KeyframeSequence"] = 60;
			["KeyframeSequenceProvider"] = 60;
			["Lighting"] = 13;
			["LineHandleAdornment"] = 54;
			["LocalScript"] = 18;
			["LogService"] = 87;
			["MarketplaceService"] = 46;
			["Message"] = 33;
			["Model"] = 2;
			["ModuleScript"] = 71;
			["Motor"] = 34;
			["Motor6D"] = 34;
			["MoveToConstraint"] = 89;
			["NegateOperation"] = 78;
			["NetworkClient"] = 16;
			["NetworkReplicator"] = 29;
			["NetworkServer"] = 15;
			["NumberValue"] = 4;
			["ObjectValue"] = 4;
			["Pants"] = 44;
			["ParallelRampPart"] = 1;
			["Part"] = 1;
			["ParticleEmitter"] = 69;
			["PartPairLasso"] = 57;
			["PathfindingService"] = 37;
			["Platform"] = 35;
			["Player"] = 12;
			["PlayerGui"] = 46;
			["Players"] = 21;
			["PlayerScripts"] = 82;
			["PointLight"] = 13;
			["PointsService"] = 83;
			["Pose"] = 60;
			["PrismaticConstraint"] = 89;
			["PrismPart"] = 1;
			["PyramidPart"] = 1;
			["RayValue"] = 4;
			["ReflectionMetadata"] = 86;
			["ReflectionMetadataCallbacks"] = 86;
			["ReflectionMetadataClass"] = 86;
			["ReflectionMetadataClasses"] = 86;
			["ReflectionMetadataEnum"] = 86;
			["ReflectionMetadataEnumItem"] = 86;
			["ReflectionMetadataEnums"] = 86;
			["ReflectionMetadataEvents"] = 86;
			["ReflectionMetadataFunctions"] = 86;
			["ReflectionMetadataMember"] = 86;
			["ReflectionMetadataProperties"] = 86;
			["ReflectionMetadataYieldFunctions"] = 86;
			["RemoteEvent"] = 80;
			["RemoteFunction"] = 79;
			["ReplicatedFirst"] = 72;
			["ReplicatedStorage"] = 72;
			["RightAngleRampPart"] = 1;
			["RocketPropulsion"] = 14;
			["RodConstraint"] = 89;
			["RopeConstraint"] = 89;
			["Rotate"] = 34;
			["RotateP"] = 34;
			["RotateV"] = 34;
			["RunService"] = 66;
			["ScreenGui"] = 47;
			["Script"] = 6;
			["ScrollingFrame"] = 48;
			["Seat"] = 35;
			["Selection"] = 55;
			["SelectionBox"] = 54;
			["SelectionPartLasso"] = 57;
			["SelectionPointLasso"] = 57;
			["SelectionSphere"] = 54;
			["ServerScriptService"] = 0;
			["ServerStorage"] = 74;
			["Shirt"] = 43;
			["ShirtGraphic"] = 40;
			["SkateboardPlatform"] = 35;
			["Sky"] = 28;
			["SlidingBallConstraint"] = 89;
			["Smoke"] = 59;
			["Snap"] = 34;
			["Sound"] = 11;
			["SoundService"] = 31;
			["Sparkles"] = 42;
			["SpawnLocation"] = 25;
			["SpecialMesh"] = 8;
			["SphereHandleAdornment"] = 54;
			["SpotLight"] = 13;
			["SpringConstraint"] = 89;
			["StarterCharacterScripts"] = 82;
			["StarterGear"] = 20;
			["StarterGui"] = 46;
			["StarterPack"] = 20;
			["StarterPlayer"] = 88;
			["StarterPlayerScripts"] = 82;
			["Status"] = 2;
			["StringValue"] = 4;
			["SunRaysEffect"] = 90;
			["SurfaceGui"] = 64;
			["SurfaceLight"] = 13;
			["SurfaceSelection"] = 55;
			["Team"] = 24;
			["Teams"] = 23;
			["TeleportService"] = 81;
			["Terrain"] = 65;
			["TerrainRegion"] = 65;
			["TestService"] = 68;
			["TextBox"] = 51;
			["TextButton"] = 51;
			["TextLabel"] = 50;
			["Texture"] = 10;
			["TextureTrail"] = 4;
			["Tool"] = 17;
			["TouchTransmitter"] = 37;
			["TrussPart"] = 1;
			["UnionOperation"] = 77;
			["UserInputService"] = 84;
			["Vector3Value"] = 4;
			["VehicleSeat"] = 35;
			["VelocityMotor"] = 34;
			["WedgePart"] = 1;
			["Weld"] = 34;
			["Workspace"] = 19;
		}
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		
		local barActive = false
		local activeOptions = {}
		
		function createDDown(dBut, callback,...)
			if barActive then
				for i,v in pairs(activeOptions) do
					v:Destroy()
				end
				activeOptions = {}
				barActive = false
				return
			else
				barActive = true
			end
			local slots = {...}
			local base = dBut
			for i,v in pairs(slots) do
				local newOption = base:Clone()
				newOption.ZIndex = 5
				newOption.Name = "Option "..tostring(i)
				newOption.Parent = base.Parent.Parent.Parent
				newOption.BackgroundTransparency = 0
				newOption.ZIndex = 2
				table.insert(activeOptions,newOption)
				newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
				newOption.Text = slots[i]
				newOption.MouseButton1Down:connect(function()
					dBut.Text = slots[i]
					callback(slots[i])
					for i,v in pairs(activeOptions) do
						v:Destroy()
					end
					activeOptions = {}
					barActive = false
				end)
			end
		end
		
		-- Connects a function to an event such that it fires asynchronously
		function Connect(event,func)
			return event:connect(function(...)
				local a = {...}
				spawn(function() func(unpack(a)) end)
			end)
		end
		
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		
		do
			local ZIndexLock = {}
			-- Sets the ZIndex of an object and its descendants. Objects are locked so
			-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
			-- ZIndex of the same object.
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
			
			function SetZIndexOnChanged(object)
				return object.Changed:connect(function(p)
					if p == "ZIndex" then
						SetZIndex(object,object.ZIndex)
					end
				end)
			end
		end
		
		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end
			
			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16
				
				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end
				
				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end
				
				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- ScrollBar
		do
			-- AutoButtonColor doesn't always reset properly
			local function ResetButtonColor(button)
				local active = button.Active
				button.Active = not active
				button.Active = active
			end
			
			local function ArrowGraphic(size,dir,scaled,template)
				local Frame = Create('Frame',{
					Name = "Arrow Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size,0,size);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end
				
				local transform
				if dir == nil or dir == 'Up' then
					function transform(p,s) return p,s end
				elseif dir == 'Down' then
					function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
				elseif dir == 'Left' then
					function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				elseif dir == 'Right' then
					function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				end
				
				local scale
				if scaled then
					function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
				else
					function scale(p,s) return p,s end
				end
				
				local o = math.floor(size/4)
				if size%2 == 0 then
					local n = size/2-1
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,(i+1)*2,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				else
					local n = (size-1)/2
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,i*2+1,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				end
				if size%4 > 1 then
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,0,0,size-o-1),
						UDim2.new(0,size,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
				return Frame
			end
			
			
			local function GripGraphic(size,dir,spacing,scaled,template)
				local Frame = Create('Frame',{
					Name = "Grip Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size.x,0,size.y);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end
				
				spacing = spacing or 2
				
				local scale
				if scaled then
					function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
				else
					function scale(p) return p end
				end
				
				if dir == 'Vertical' then
					for i=0,size.x-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,1,0,size.y))
						t.Position = scale(UDim2.new(0,i,0,0))
						t.Parent = Frame
					end
				elseif dir == nil or dir == 'Horizontal' then
					for i=0,size.y-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,size.x,0,1))
						t.Position = scale(UDim2.new(0,0,0,i))
						t.Parent = Frame
					end
				end
				
				return Frame
			end
			
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown
			
			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-GUI_SIZE) or UDim2.new(1,-GUI_SIZE,0,0);
					Size = horizontal and UDim2.new(1,0,0,GUI_SIZE) or UDim2.new(0,GUI_SIZE,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-GUI_SIZE,0,0) or UDim2.new(0,0,1,-GUI_SIZE);
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-GUI_SIZE*2,1,0) or UDim2.new(1,0,1,-GUI_SIZE*2);
						Position = horizontal and UDim2.new(0,GUI_SIZE,0,0) or UDim2.new(0,0,0,GUI_SIZE);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
							BackgroundColor3 = GuiColor.Button;
							BorderColor3 = GuiColor.Border;
							--BorderSizePixel = 0;
						});
					});
				})
				
				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = GuiColor.Border;
				})
				local graphicSize = GUI_SIZE/2
				
				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = GUI_SIZE*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end
				
				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)
				
				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
						if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end
				
				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0.7}
				
				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end
					
					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end
					
					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update
				
				SetZIndexOnChanged(ScrollFrame)
				
				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})
				
				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)
				
				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)
				
				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)
				
				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)
				
				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end
				
				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end
				
				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end
				
				Update()
				
				return Class
			end
		end
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Explorer panel
		
		local explorerPanel = D_E_X.ExplorerPanel
		Create(explorerPanel,{
			BackgroundColor3 = GuiColor.Field;
			BorderColor3 = GuiColor.Border;
			Active = true;
		})
		
		local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
		local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
		local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
		local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")
		
		local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
		local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
		local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
		local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")
		
		local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")
		
		local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
		local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")
		
		local CurrentSaveInstanceWindow
		local CurrentRemoteWindow
		
		local lastSelectedNode
		
		local DexStorage
		local DexStorageMain
		local DexStorageEnabled
		
		if saveinstance then DexStorageEnabled = true end
		
		if DexStorageEnabled then
			DexStorage = Instance.new("Folder")
			DexStorage.Name = "Dex"
			DexStorageMain = Instance.new("Folder",DexStorage)
			DexStorageMain.Name = "DexStorage"
		end
		
		local NilStorage
		local NilStorageMain
		local NilStorageEnabled
		
		if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end
		
		if NilStorageEnabled then
			NilStorage = Instance.new("Folder")
			NilStorage.Name = "Dex Internal Storage"
			NilStorageMain = Instance.new("Folder",NilStorage)
			NilStorageMain.Name = "Nil Instances"
		end
		
		local listFrame = Create('Frame',{
			Name = "List";
			BackgroundTransparency = 1;
			ClipsDescendants = true;
			Position = UDim2.new(0,0,0,HEADER_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})
		
		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
			Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})
		
		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = GUI_SIZE
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-GUI_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
			Visible = false;
			Parent = explorerPanel;
		})
		
		local headerFrame = Create('Frame',{
			Name = "Header";
			BackgroundColor3 = GuiColor.Background;
			BorderColor3 = GuiColor.Border;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,0,HEADER_SIZE);
			Parent = explorerPanel;
			Create('TextLabel',{
				Text = "Explorer";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				Font = FONT;
				FontSize = FONT_SIZE;
				Position = UDim2.new(0,4,0,0);
				Size = UDim2.new(1,-4,0.5,0);
			});
		})
		
		local explorerFilter = 	Create('TextBox',{
			Text = "Filter Workspace";
			BackgroundTransparency = 0.8;
			TextColor3 = GuiColor.Text;
			TextXAlignment = 'Left';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,4,0.5,0);
			Size = UDim2.new(1,-8,0.5,-2);
		});
		explorerFilter.Parent = headerFrame
		
		SetZIndexOnChanged(explorerPanel)
		
		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end
		
		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}
		
		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 20;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}
		
		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}
		
		local currentRightClickMenu
		local CurrentInsertObjectWindow
		local CurrentFunctionCallerWindow
		
		local RbxApi
		
		function ClassCanCreate(IName)
			local success,err = pcall(function() Instance.new(IName) end)
			if err then
				return false
			else
				return true
			end
		end
		
		function GetClasses()
			if RbxApi == nil then return {} end
			local classTable = {}
			for i,v in pairs(RbxApi.Classes) do
				if ClassCanCreate(v.Name) then
					table.insert(classTable,v.Name)
				end
			end
			return classTable
		end
		
		local function sortAlphabetic(t, property)
			table.sort(t, 
				function(x,y) return x[property] < y[property]
				end)
		end
		
		local function FunctionIsHidden(functionData)
			local tags = functionData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end
		
		local function GetAllFunctions(className)
			local class = RbxApi.Classes[className]
			local functions = {}
			
			if not class then return functions end
			
			while class do
				if class.Name == "Instance" then break end
				for _,nextFunction in pairs(class.Functions) do
					if not FunctionIsHidden(nextFunction) then
						table.insert(functions, nextFunction)
					end
				end
				class = RbxApi.Classes[class.Superclass]
			end
			
			sortAlphabetic(functions, "Name")
			
			return functions
		end
		
		function GetFunctions()
			if RbxApi == nil then return {} end
			local List = SelectionVar():Get()
			
			if #List == 0 then return end
			
			local MyObject = List[1]
			
			local functionTable = {}
			for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
				table.insert(functionTable,v)
			end
			return functionTable
		end
		
		function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end
			
			table.sort(choices, function(a,b) return a < b end)
			
			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true
			
			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;
			
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
			
			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end
			
			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,200,1,0)
				menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame
				
				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end
				
				local function choice(name)
					onClick(name)
					hideMenu()
				end
				
				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end,1)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end
			
			
			showMenu()
			
			
			return frame
		end
		
		function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end
			
			table.sort(choices, function(a,b) return a.Name < b.Name end)
			
			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true
			
			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;
			
			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end
			
			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,300,1,0)
				menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame
				
				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end
				
				local function GetParameters(functionData)
					local paraString = ""
					paraString = paraString.."("
					for i,v in pairs(functionData.Arguments) do
						paraString = paraString..v.Type.." "..v.Name
						if i < #functionData.Arguments then
							paraString = paraString..", "
						end
					end
					paraString = paraString..")"
					return paraString
				end
				
				local function choice(name)
					onClick(name)
					hideMenu()
				end
				
				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
						choice(name)
					end,2)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end
			
			
			showMenu()
			
			
			return frame
		end
		
		function CreateInsertObject()
			if not CurrentInsertObjectWindow then return end
			CurrentInsertObjectWindow.Visible = true
			if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
			end
			if CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Parent = explorerPanel.Parent
			end
		end
		
		function CreateFunctionCaller()
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			end
			CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
				GetFunctions(),
				"",
				false,
				function(option)
					CurrentFunctionCallerWindow:Destroy()
					CurrentFunctionCallerWindow = nil
					local list = SelectionVar():Get()
					for i = 1,#list do
						pcall(function() Instance.new(option,list[i]) end)
					end
					print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
					--CallFunction()
					DestroyRightClick()
				end
			)
			if currentRightClickMenu and CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
			end
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
			end
		end
		
		function CreateRightClickMenuItem(text, onClick, insObj)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text
			
			if insObj == 1 then
				local newIcon = Icon(nil,ExplorerIndex[text] or 0)
				newIcon.Position = UDim2.new(0,0,0,2)
				newIcon.Size = UDim2.new(0,16,0,16)
				newIcon.IconMap.ZIndex = 5
				newIcon.Parent = button
				button.Text = "\t\t"..button.Text
			elseif insObj == 2 then
				button.FontSize = Enum.FontSize.Size11
			end
			
			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
				if not insObj and CurrentInsertObjectWindow then
					if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
						CreateInsertObject()
					elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
						CurrentInsertObjectWindow.Visible = false
					end
				end
				if not insObj then
					if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
						CurrentFunctionCallerWindow:Destroy()
						CurrentFunctionCallerWindow = nil
					elseif button.Text == "Call Function" then
						CreateFunctionCaller()
					end
				end
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
				onClick(text)
			end)	
			return button
		end
		
		function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			
			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true
			
			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;
			
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
			
			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					frame:Destroy()
					DestroyRightClick()
				end
			end
			
			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 5)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame
				
				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end
				
				local function choice(name)
					onClick(name)
					hideMenu()
				end
				
				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end
			
			
			showMenu()
			
			
			return frame
		end
		
		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	
			
			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end
		
		local clipboard = {}
		local function delete(o)
			o.Parent = nil
		end
		
		local getTextWidth do
			local text = Create('TextLabel',{
				Name = "TextWidth";
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,1,0);
				Visible = false;
				Parent = explorerPanel;
			})
			function getTextWidth(s)
				text.Text = s
				return text.TextBounds.x
			end
		end
		
		local nameScanned = false
		-- Holds the game tree converted to a list.
		local TreeList = {}
		-- Matches objects to their tree node representation.
		local NodeLookup = {}
		
		local nodeWidth = 0
		
		local QuickButtons = {}
		
		function filteringWorkspace()
			if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
				return true
			end
			return false
		end
		
		function lookForAName(obj,name)
			for i,v in pairs(obj:GetChildren()) do
				if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
				lookForAName(v,name)
			end
		end
		
		function scanName(obj)
			nameScanned = false
			if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
				nameScanned = true
			else
				lookForAName(obj,explorerFilter.Text)
			end
			return nameScanned
		end
		
		function updateActions()
			for i,v in pairs(QuickButtons) do
				if v.Cond() then
					v.Toggle(true)
				else
					v.Toggle(false)
				end
			end
		end
		
		local updateList,rawUpdateList,updateScroll,rawUpdateSize do
			local function r(t)
				for i = 1,#t do
					if not filteringWorkspace() or scanName(t[i].Object) then
						TreeList[#TreeList+1] = t[i]
						
						local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
						if w > nodeWidth then
							nodeWidth = w
						end
						if t[i].Expanded or filteringWorkspace() then
							r(t[i])
						end
					end
				end
			end
			
			function rawUpdateSize()
				scrollBarH.TotalSpace = nodeWidth
				scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
				scrollBarH:Update()
				local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
				scrollBarH.GUI.Visible = visible
				
				listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)
				
				scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
				scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)
				
				scrollBar.TotalSpace = #TreeList+1
				scrollBar:Update()
			end
			
			function rawUpdateList()
				-- Clear then repopulate the entire list. It appears to be fast enough.
				TreeList = {}
				nodeWidth = 0
				r(NodeLookup[workspace.Parent])
				if DexStorageEnabled then
					r(NodeLookup[DexStorage])
				end
				if NilStorageEnabled then
					r(NodeLookup[NilStorage])
				end
				rawUpdateSize()
				updateActions()
			end
			
			-- Adding or removing large models will cause many updates to occur. We
			-- can reduce the number of updates by creating a delay, then dropping any
			-- updates that occur during the delay.
			local updatingList = false
			function updateList()
				if updatingList then return end
				updatingList = true
				wait(0.25)
				updatingList = false
				rawUpdateList()
			end
			
			local updatingScroll = false
			function updateScroll()
				if updatingScroll then return end
				updatingScroll = true
				wait(0.25)
				updatingScroll = false
				scrollBar:Update()
			end
		end
		
		local Selection do
			local bindGetSelection = explorerPanel:FindFirstChild("GetSelection")
			if not bindGetSelection then
				bindGetSelection = Create('BindableFunction',{Name = "GetSelection"})
				bindGetSelection.Parent = explorerPanel
			end
			
			local bindSetSelection = explorerPanel:FindFirstChild("SetSelection")
			if not bindSetSelection then
				bindSetSelection = Create('BindableFunction',{Name = "SetSelection"})
				bindSetSelection.Parent = explorerPanel
			end
			
			local bindSelectionChanged = explorerPanel:FindFirstChild("SelectionChanged")
			if not bindSelectionChanged then
				bindSelectionChanged = Create('BindableEvent',{Name = "SelectionChanged"})
				bindSelectionChanged.Parent = explorerPanel
			end
			
			local SelectionList = {}
			local SelectionSet = {}
			local Updates = true
			Selection = {
				Selected = SelectionSet;
				List = SelectionList;
			}
			
			local function addObject(object)
				-- list update
				local lupdate = false
				-- scroll update
				local supdate = false
				
				if not SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						table.insert(SelectionList,object)
						SelectionSet[object] = true
						node.Selected = true
						
						-- expand all ancestors so that selected node becomes visible
						node = node.Parent
						while node do
							if not node.Expanded then
								node.Expanded = true
								lupdate = true
							end
							node = node.Parent
						end
						supdate = true
					end
				end
				return lupdate,supdate
			end
			
			function Selection:Set(objects)
				local lupdate = false
				local supdate = false
				
				if #SelectionList > 0 then
					for i = 1,#SelectionList do
						local object = SelectionList[i]
						local node = NodeLookup[object]
						if node then
							node.Selected = false
							SelectionSet[object] = nil
						end
					end
					
					SelectionList = {}
					Selection.List = SelectionList
					supdate = true
				end
				
				for i = 1,#objects do
					local l,s = addObject(objects[i])
					lupdate = l or lupdate
					supdate = s or supdate
				end
				
				if lupdate then
					rawUpdateList()
					supdate = true
				elseif supdate then
					scrollBar:Update()
				end
				
				if supdate then
					bindSelectionChanged:Fire()
					updateActions()
				end
			end
			
			function Selection:Add(object)
				local l,s = addObject(object)
				if l then
					rawUpdateList()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				elseif s then
					scrollBar:Update()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end
			
			function Selection:StopUpdates()
				Updates = false
			end
			
			function Selection:ResumeUpdates()
				Updates = true
				bindSelectionChanged:Fire()
				updateActions()
			end
			
			function Selection:Remove(object,noupdate)
				if SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						node.Selected = false
						SelectionSet[object] = nil
						for i = 1,#SelectionList do
							if SelectionList[i] == object then
								table.remove(SelectionList,i)
								break
							end
						end
						
						if not noupdate then
							scrollBar:Update()
						end
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end
			
			function Selection:Get()
				local list = {}
				for i = 1,#SelectionList do
					list[i] = SelectionList[i]
				end
				return list
			end
			
			bindSetSelection.OnInvoke = function(...)
				Selection:Set(...)
			end
			
			bindGetSelection.OnInvoke = function()
				return Selection:Get()
			end
		end
		
		function CreateCaution(title,msg)
			local newCaution = CautionWindow:Clone()
			newCaution.Title.Text = title
			newCaution.MainWindow.Desc.Text = msg
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end
		
		function CreateTableCaution(title,msg)
			if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
			local newCaution = TableCautionWindow:Clone()
			newCaution.Title.Text = title
			
			local TableList = newCaution.MainWindow.TableResults
			local TableTemplate = newCaution.MainWindow.TableTemplate
			
			for i,v in pairs(msg) do
				local newResult = TableTemplate:Clone()
				newResult.Type.Text = type(v)
				newResult.Value.Text = tostring(v)
				newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Parent = TableList
				TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Visible = true
			end
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end
		
		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end
		
		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Number" then
				return tonumber(value)
			elseif type == "String" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif type == "Script" then
				local success,err = ypcall(function()
					_G.D_E_X_DONOTUSETHISPLEASE = nil
					loadstring(
						"_G.D_E_X_DONOTUSETHISPLEASE = "..value
					)()
					return _G.D_E_X_DONOTUSETHISPLEASE
				end)
				if err then
					return nil
				end
			else
				return nil
			end
		end
		
		local function ToPropValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif string.sub(value,1,4) == "Enum" then
				local getEnum = value
				while true do
					local x,y = string.find(getEnum,".")
					if y then
						getEnum = string.sub(getEnum,y+1)
					else
						break
					end
				end
				print(getEnum)
				return getEnum
			else
				return nil
			end
		end
		
		function PromptRemoteCaller(inst)
			if CurrentRemoteWindow then
				CurrentRemoteWindow:Destroy()
				CurrentRemoteWindow = nil
			end
			CurrentRemoteWindow = RemoteWindow:Clone()
			CurrentRemoteWindow.Parent = explorerPanel.Parent
			CurrentRemoteWindow.Visible = true
			
			local displayValues = false
			
			local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
			local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate
			
			if inst:IsA("RemoteEvent") then
				CurrentRemoteWindow.Title.Text = "Fire Event"
				CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
				CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
				CurrentRemoteWindow.MainWindow.Desc2.Visible = false
			end
			
			local newArgument = ArgumentTemplate:Clone()
			newArgument.Parent = ArgumentList
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)
			
			CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
				if CurrentRemoteWindow and inst.Parent ~= nil then
					local MyArguments = {}
					for i,v in pairs(ArgumentList:GetChildren()) do
						table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
					end
					if inst:IsA("RemoteFunction") then
						if displayValues then
							spawn(function()
								local myResults = inst:InvokeServer(unpack(MyArguments))
								if myResults then
									CreateTableCaution("Remote Caller",myResults)
								else
									CreateCaution("Remote Caller","This remote did not return anything.")
								end
							end)
						else
							spawn(function()
								inst:InvokeServer(unpack(MyArguments))
							end)
						end
					else
						inst:FireServer(unpack(MyArguments))
					end
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)
			
			CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					local newArgument = ArgumentTemplate:Clone()
					newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Parent = ArgumentList
					ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Visible = true
					newArgument.Type.MouseButton1Down:connect(function()
						createDDown(newArgument.Type,function(choice)
							newArgument.Type.Text = choice
						end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
					end)
				end
			end)
			
			CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					if #ArgumentList:GetChildren() > 1 then
						ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
						ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					end
				end
			end)
			
			CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)
			
			CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
				if displayValues then
					displayValues = false
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
				else
					displayValues = true
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
				end
			end)
		end
		
		function PromptSaveInstance(inst)
			if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
			CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
			CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
			CurrentSaveInstanceWindow.Visible = true
			
			local filename = CurrentSaveInstanceWindow.MainWindow.FileName
			local saveObjects = true
			local overwriteCaution = false
			
			CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
				if readfile and getelysianpath then
					if readfile(getelysianpath()..filename.Text..".rbxmx") then
						if not overwriteCaution then
							overwriteCaution = true
							local newCaution = ConfirmationWindow:Clone()
							newCaution.Name = "SaveInstanceOverwriteCaution"
							newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
							newCaution.Parent = explorerPanel.Parent
							newCaution.Visible = true
							newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
								ypcall(function()
									SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
								end)
								overwriteCaution = false
								newCaution:Destroy()
								if CurrentSaveInstanceWindow then
									CurrentSaveInstanceWindow:Destroy()
									CurrentSaveInstanceWindow = nil
								end
							end)
							newCaution.MainWindow.No.MouseButton1Up:connect(function()
								overwriteCaution = false
								newCaution:Destroy()
							end)
						end
					else
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
							if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
								explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
							end
						end
					end
				else
					ypcall(function()
						if SaveInstance then
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						else
							_G.SaveInstance(inst,filename.Text,not saveObjects)
						end
					end)
					if CurrentSaveInstanceWindow then
						CurrentSaveInstanceWindow:Destroy()
						CurrentSaveInstanceWindow = nil
						if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
							explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
						end
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
				if saveObjects then
					saveObjects = false
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
				else
					saveObjects = true
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
				end
			end)
		end
		
		function DestroyRightClick()
			if currentRightClickMenu then
				currentRightClickMenu:Destroy()
				currentRightClickMenu = nil
			end
			if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Visible = false
			end
		end
		
		function rightClickMenu(sObj)
			local mouse = game.Players.LocalPlayer:GetMouse()
			
			currentRightClickMenu = CreateRightClickMenu(
				{"Cut","Copy","Paste Into","Duplicate","Delete","Group","Ungroup","Select Children","Teleport To","Insert Part","Insert Object","View Script","Save Instance","Call Function","Call Remote"},
				"",
				false,
				function(option)
					if option == "Cut" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						local cut = {}
						for i = 1,#list do
							local obj = list[i]:Clone()
							if obj then
								table.insert(clipboard,obj)
								table.insert(cut,list[i])
							end
						end
						for i = 1,#cut do
							pcall(delete,cut[i])
						end
						updateActions()
					elseif option == "Copy" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						for i = 1,#list do
							table.insert(clipboard,list[i]:Clone())
						end
						updateActions()
					elseif option == "Paste Into" then
						if not Option.Modifiable then return end
						local parent = Selection.List[1] or workspace
						for i = 1,#clipboard do
							clipboard[i]:Clone().Parent = parent
						end
					elseif option == "Duplicate" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							list[i]:Clone().Parent = Selection.List[1].Parent or workspace
						end
					elseif option == "Delete" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							pcall(delete,list[i])
						end
						Selection:Set({})
					elseif option == "Group" then
						if not Option.Modifiable then return end
						local newModel = Instance.new("Model")
						local list = Selection:Get()
						newModel.Parent = Selection.List[1].Parent or workspace
						for i = 1,#list do
							list[i].Parent = newModel
						end
						Selection:Set({})
					elseif option == "Ungroup" then
						if not Option.Modifiable then return end
						local ungrouped = {}
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("Model") then
								for i2,v2 in pairs(list[i]:GetChildren()) do
									v2.Parent = list[i].Parent or workspace
									table.insert(ungrouped,v2)
								end		
								pcall(delete,list[i])			
							end
						end
						Selection:Set({})
						if SettingsRemote:Invoke("SelectUngrouped") then
							for i,v in pairs(ungrouped) do
								Selection:Add(v)
							end
						end
					elseif option == "Select Children" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						Selection:Set({})
						Selection:StopUpdates()
						for i = 1,#list do
							for i2,v2 in pairs(list[i]:GetChildren()) do
								Selection:Add(v2)
							end
						end
						Selection:ResumeUpdates()
					elseif option == "Teleport To" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("BasePart") then
								pcall(function()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
								end)
								break
							end
						end
					elseif option == "Insert Part" then
						if not Option.Modifiable then return end
						local insertedParts = {}
						local list = Selection:Get()
						for i = 1,#list do
							pcall(function()
								local newPart = Instance.new("Part")
								newPart.Parent = list[i]
								newPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
								table.insert(insertedParts,newPart)
							end)
						end
					elseif option == "Save Instance" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						if #list == 1 then
							list[1].Archivable = true
							ypcall(function()PromptSaveInstance(list[1]:Clone())end)
						elseif #list > 1 then
							local newModel = Instance.new("Model")
							newModel.Name = "SavedInstances"
							for i = 1,#list do
								ypcall(function()
									list[i].Archivable = true
									list[i]:Clone().Parent = newModel
								end)
							end
							PromptSaveInstance(newModel)
						end
					elseif option == "Call Remote" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
								PromptRemoteCaller(list[i])
								break
							end
						end
					elseif option == "View Script" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
								ScriptEditorEvent:Fire(list[i])
							end
						end
					end
				end)
			currentRightClickMenu.Parent = explorerPanel.Parent
			currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
			if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
				currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
			end
		end
		
		local function cancelReparentDrag()end
		local function cancelSelectDrag()end
		do
			local listEntries = {}
			local nameConnLookup = {}
			
			local mouseDrag = Create('ImageButton',{
				Name = "MouseDrag";
				Position = UDim2.new(-0.25,0,-0.25,0);
				Size = UDim2.new(1.5,0,1.5,0);
				Transparency = 1;
				AutoButtonColor = false;
				Active = true;
				ZIndex = 10;
			})
			local function dragSelect(last,add,button)
				local connDrag
				local conUp
				
				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
					local size = listFrame.AbsoluteSize
					if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end
					
					local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
					-- Mouse may have made a large step, so interpolate between the
					-- last index and the current.
					for n = i<last and i or last, i>last and i or last do
						local node = TreeList[n]
						if node then
							if add then
								Selection:Add(node.Object)
							else
								Selection:Remove(node.Object)
							end
						end
					end
					last = i
				end)
				
				function cancelSelectDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					function cancelSelectDrag()end
				end
				
				conUp = mouseDrag[button]:connect(cancelSelectDrag)
				
				mouseDrag.Parent = GetScreen(listFrame)
			end
			
			local function dragReparent(object,dragGhost,clickPos,ghostOffset)
				local connDrag
				local conUp
				local conUp2
				
				local parentIndex = nil
				local dragged = false
				
				local parentHighlight = Create('Frame',{
					Transparency = 1;
					Visible = false;
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(1,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,1,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
				})
				SetZIndex(parentHighlight,9)
				
				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local dragPos = Vector2.new(x,y)
					if dragged then
						local pos = dragPos - listFrame.AbsolutePosition
						local size = listFrame.AbsoluteSize
						
						parentIndex = nil
						parentHighlight.Visible = false
						if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
							local i = math.ceil(pos.y/ENTRY_BOUND-2)
							local node = TreeList[i + scrollBar.ScrollIndex]
							if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
								parentIndex = i
								local entry = listEntries[i]
								if entry then
									parentHighlight.Visible = true
									parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
									parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
								end
							end
						end
						
						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
					elseif (clickPos-dragPos).magnitude > 8 then
						dragged = true
						SetZIndex(dragGhost,9)
						dragGhost.IndentFrame.Transparency = 0.25
						dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
						dragGhost.Parent = GetScreen(listFrame)
						parentHighlight.Parent = listFrame
					end
				end)
				
				function cancelReparentDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					conUp2:disconnect()
					dragGhost:Destroy()
					parentHighlight:Destroy()
					function cancelReparentDrag()end
				end
				
				local wasSelected = Selection.Selected[object]
				if not wasSelected and Option.Selectable then
					Selection:Set({object})
				end
				
				conUp = mouseDrag.MouseButton1Up:connect(function()
					cancelReparentDrag()
					if dragged then
						if parentIndex then
							local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
							if parentNode then
								parentNode.Expanded = true
								
								local parentObj = parentNode.Object
								local function parent(a,b)
									a.Parent = b
								end
								if Option.Selectable then
									local list = Selection.List
									for i = 1,#list do
										pcall(parent,list[i],parentObj)
									end
								else
									pcall(parent,object,parentObj)
								end
							end
						end
					else
						-- do selection click
						if wasSelected and Option.Selectable then
							Selection:Set({})
						end
					end
				end)
				conUp2 = mouseDrag.MouseButton2Down:connect(function()
					cancelReparentDrag()
				end)
				
				mouseDrag.Parent = GetScreen(listFrame)
			end
			
			local entryTemplate = Create('ImageButton',{
				Name = "Entry";
				Transparency = 1;
				AutoButtonColor = false;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,ENTRY_SIZE);
				Create('Frame',{
					Name = "IndentFrame";
					BackgroundTransparency = 1;
					BackgroundColor3 = GuiColor.Selected;
					BorderColor3 = GuiColor.BorderSelected;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,0,1,0);
					Create(Icon('ImageButton',0),{
						Name = "Expand";
						AutoButtonColor = false;
						Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create(Icon(nil,0),{
						Name = "ExplorerIcon";
						Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create('TextLabel',{
						Name = "EntryText";
						BackgroundTransparency = 1;
						TextColor3 = GuiColor.Text;
						TextXAlignment = 'Left';
						TextYAlignment = 'Center';
						Font = FONT;
						FontSize = FONT_SIZE;
						Text = "";
						Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
						Size = UDim2.new(1,-2,1,0);
					});
				});
			})
			
			function scrollBar.UpdateCallback(self)
				for i = 1,self.VisibleSpace do
					local node = TreeList[i + self.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if not entry then
							entry = Create(entryTemplate:Clone(),{
								Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
								Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
								ZIndex = listFrame.ZIndex;
							})
							listEntries[i] = entry
							
							local expand = entry.IndentFrame.Expand
							expand.MouseEnter:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED_OVER)
									else
										Icon(expand,NODE_COLLAPSED_OVER)
									end
								end
							end)
							expand.MouseLeave:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED)
									else
										Icon(expand,NODE_COLLAPSED)
									end
								end
							end)
							expand.MouseButton1Down:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									node.Expanded = not node.Expanded
									if node.Object == explorerPanel.Parent and node.Expanded then
										CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
									end
									-- use raw update so the list updates instantly
									rawUpdateList()
								end
							end)
							
							entry.MouseButton1Down:connect(function(x,y)
								local node = TreeList[i + self.ScrollIndex]
								DestroyRightClick()
								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end
								
								if not HoldingShift then
									lastSelectedNode = i + self.ScrollIndex
								end
								
								if HoldingShift and not filteringWorkspace() then
									if lastSelectedNode then
										if i + self.ScrollIndex - lastSelectedNode > 0 then
											Selection:StopUpdates()
											for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										else
											Selection:StopUpdates()
											for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										end
									end
									return
								end
								
								if HoldingCtrl then
									if Selection.Selected[node.Object] then
										Selection:Remove(node.Object)
									else
										Selection:Add(node.Object)
									end
									return
								end
								if Option.Modifiable then
									local pos = Vector2.new(x,y)
									dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
								elseif Option.Selectable then
									if Selection.Selected[node.Object] then
										Selection:Set({})
									else
										Selection:Set({node.Object})
									end
									dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
								end
							end)
							
							entry.MouseButton2Down:connect(function()
								if not Option.Selectable then return end
								
								DestroyRightClick()
								
								curSelect = entry
								
								local node = TreeList[i + self.ScrollIndex]
								
								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end
								
								if not Selection.Selected[node.Object] then
									Selection:Set({node.Object})
								end
							end)
							
							
							entry.MouseButton2Up:connect(function()
								if not Option.Selectable then return end
								
								local node = TreeList[i + self.ScrollIndex]
								
								if checkMouseInGui(curSelect) then
									rightClickMenu(node.Object)
								end
							end)
							
							entry.Parent = listFrame
						end
						
						entry.Visible = true
						
						local object = node.Object
						
						-- update expand icon
						if #node == 0 then
							entry.IndentFrame.Expand.Visible = false
						elseif node.Expanded then
							Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
							entry.IndentFrame.Expand.Visible = true
						else
							Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
							entry.IndentFrame.Expand.Visible = true
						end
						
						-- update explorer icon
						Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)
						
						-- update indentation
						local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
						entry.IndentFrame.Position = UDim2.new(0,w,0,0)
						entry.IndentFrame.Size = UDim2.new(1,-w,1,0)
						
						-- update name change detection
						if nameConnLookup[entry] then
							nameConnLookup[entry]:disconnect()
						end
						local text = entry.IndentFrame.EntryText
						text.Text = object.Name
						nameConnLookup[entry] = node.Object.Changed:connect(function(p)
							if p == 'Name' then
								text.Text = object.Name
							end
						end)
						
						-- update selection
						entry.IndentFrame.Transparency = node.Selected and 0 or 1
						text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']
						
						entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
					elseif listEntries[i] then
						listEntries[i].Visible = false
					end
				end
				for i = self.VisibleSpace+1,self.TotalSpace do
					local entry = listEntries[i]
					if entry then
						listEntries[i] = nil
						entry:Destroy()
					end
				end
			end
			
			function scrollBarH.UpdateCallback(self)
				for i = 1,scrollBar.VisibleSpace do
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if entry then
							entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
						end
					end
				end
			end
			
			Connect(listFrame.Changed,function(p)
				if p == 'AbsoluteSize' then
					rawUpdateSize()
				end
			end)
			
			local wheelAmount = 6
			explorerPanel.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			explorerPanel.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Object detection
		
		-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
		local function insert(t,i,v)
			for n = #t,i,-1 do
				local v = t[n]
				v.Index = n+1
				t[n+1] = v
			end
			v.Index = i
			t[i] = v
		end
		
		-- Removes `i` from `t`. Also sets `Index` field in removed value.
		local function remove(t,i)
			local v = t[i]
			for n = i+1,#t do
				local v = t[n]
				v.Index = n-1
				t[n-1] = v
			end
			t[#t] = nil
			v.Index = 0
			return v
		end
		
		-- Returns how deep `o` is in the tree.
		local function depth(o)
			local d = -1
			while o do
				o = o.Parent
				d = d + 1
			end
			return d
		end
		
		
		local connLookup = {}
		
		-- Returns whether a node would be present in the tree list
		local function nodeIsVisible(node)
			local visible = true
			node = node.Parent
			while node and visible do
				visible = visible and node.Expanded
				node = node.Parent
			end
			return visible
		end
		
		-- Removes an object's tree node. Called when the object stops existing in the
		-- game tree.
		local function removeObject(object)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end
			
			local visible = nodeIsVisible(objectNode)
			
			Selection:Remove(object,true)
			
			local parent = objectNode.Parent
			remove(parent,objectNode.Index)
			NodeLookup[object] = nil
			connLookup[object]:disconnect()
			connLookup[object] = nil
			
			if visible then
				updateList()
			elseif nodeIsVisible(parent) then
				updateScroll()
			end
		end
		
		-- Moves a tree node to a new parent. Called when an existing object's parent
		-- changes.
		local function moveObject(object,parent)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end
			
			local parentNode = NodeLookup[parent]
			if not parentNode then
				return
			end
			
			local visible = nodeIsVisible(objectNode)
			
			remove(objectNode.Parent,objectNode.Index)
			objectNode.Parent = parentNode
			
			objectNode.Depth = depth(object)
			local function r(node,d)
				for i = 1,#node do
					node[i].Depth = d
					r(node[i],d+1)
				end
			end
			r(objectNode,objectNode.Depth+1)
			
			insert(parentNode,#parentNode+1,objectNode)
			
			if visible or nodeIsVisible(objectNode) then
				updateList()
			elseif nodeIsVisible(objectNode.Parent) then
				updateScroll()
			end
		end
		
		-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
		-- This RobloxLocked object lets me index its properties for some reason
		
		local function check(object)
			return object.AncestryChanged
		end
		
		-- Creates a new tree node from an object. Called when an object starts
		-- existing in the game tree.
		local function addObject(object,noupdate)
			if script then
				-- protect against naughty RobloxLocked objects
				local s = pcall(check,object)
				if not s then
					return
				end
			end
			
			local parentNode = NodeLookup[object.Parent]
			if not parentNode then
				return
			end
			
			local objectNode = {
				Object = object;
				Parent = parentNode;
				Index = 0;
				Expanded = false;
				Selected = false;
				Depth = depth(object);
			}
			
			connLookup[object] = Connect(object.AncestryChanged,function(c,p)
				if c == object then
					if p == nil then
						removeObject(c)
					else
						moveObject(c,p)
					end
				end
			end)
			
			NodeLookup[object] = objectNode
			insert(parentNode,#parentNode+1,objectNode)
			
			if not noupdate then
				if nodeIsVisible(objectNode) then
					updateList()
				elseif nodeIsVisible(objectNode.Parent) then
					updateScroll()
				end
			end
		end
		
		local function makeObject(obj,par)
			local newObject = Instance.new(obj.ClassName)
			for i,v in pairs(obj.Properties) do
				ypcall(function()
					local newProp
					newProp = ToPropValue(v.Value,v.Type)
					newObject[v.Name] = newProp
				end)
			end
			newObject.Parent = par
		end
		
		local function writeObject(obj)
			local newObject = {ClassName = obj.ClassName, Properties = {}}
			for i,v in pairs(RbxApi.GetProperties(obj.className)) do
				if v["Name"] ~= "Parent" then
					print("thispassed")
					table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
				end
			end
			return newObject
		end
		
		local function buildDexStorage()
			local localDexStorage
			
			local success,err = ypcall(function()
				localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")[1]
			end)
			
			if success and localDexStorage then
				for i,v in pairs(localDexStorage:GetChildren()) do
					ypcall(function()
						v.Parent = DexStorageMain
					end)
				end
			end
			
			updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
		end
		
		local dexStorageDebounce = false
		local dexStorageListeners = {}
		
		local function updateDexStorage()
			if dexStorageDebounce then return end
			dexStorageDebounce = true	
			
			wait()
			
			pcall(function()
				saveinstance("content//DexStorage.rbxm",DexStorageMain)
			end)
			
			updateDexStorageListeners()
			
			dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
		end
		
		function updateDexStorageListeners()
			for i,v in pairs(dexStorageListeners) do
				v:Disconnect()
			end
			dexStorageListeners = {}
			for i,v in pairs(DexStorageMain:GetChildren()) do
				pcall(function()
					local ev = v.Changed:connect(updateDexStorage)
					table.insert(dexStorageListeners,ev)
				end)
			end
		end
		
		do
			NodeLookup[workspace.Parent] = {
				Object = workspace.Parent;
				Parent = nil;
				Index = 0;
				Expanded = true;
			}
			
			if DexStorageEnabled then
				NodeLookup[DexStorage] = {
					Object = DexStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end
			
			if NilStorageEnabled then
				NodeLookup[NilStorage] = {
					Object = NilStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end
			
			Connect(game.DescendantAdded,addObject)
			Connect(game.DescendantRemoving,removeObject)
			
			if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]
				
				buildDexStorage()
				
				Connect(DexStorage.DescendantAdded,addObject)
				Connect(DexStorage.DescendantRemoving,removeObject)
				
				Connect(DexStorage.DescendantAdded,updateDexStorage)
				Connect(DexStorage.DescendantRemoving,updateDexStorage)
			end
			
			if NilStorageEnabled then
				Connect(NilStorage.DescendantAdded,addObject)
				Connect(NilStorage.DescendantRemoving,removeObject)		
				
				local currentTable = get_nil_instances()	
				
				spawn(function()
					while wait() do
						if #currentTable ~= #get_nil_instances() then
							currentTable = get_nil_instances()
							--NilStorageMain:ClearAllChildren()
							for i,v in pairs(get_nil_instances()) do
								if v ~= NilStorage and v ~= DexStorage then
									pcall(function()
										v.Parent = NilStorageMain
									end)
							--[[
							local newNil = v
							newNil.Archivable = true
							newNil:Clone().Parent = NilStorageMain
							--]]
								end
							end
						end
					end
				end)
			end
			
			local function get(o)
				return o:GetChildren()
			end
			
			local function r(o)
				local s,children = pcall(get,o)
				if s then
					for i = 1,#children do
						addObject(children[i],true)
						r(children[i])
					end
				end
			end
			
			r(workspace.Parent)
			if DexStorageEnabled then
				r(DexStorage)
			end
			if NilStorageEnabled then
				r(NilStorage)
			end
			
			scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
			updateList()
		end
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Actions
		
		local actionButtons do
			actionButtons = {}
			
			local totalActions = 1
			local currentActions = totalActions
			local function makeButton(icon,over,name,vis,cond)
				local buttonEnabled = false
				
				local button = Create(Icon('ImageButton',icon),{
					Name = name .. "Button";
					Visible = Option.Modifiable and Option.Selectable;
					Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
					Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					Parent = headerFrame;
				})
				
				local tipText = Create('TextLabel',{
					Name = name .. "Text";
					Text = name;
					Visible = false;
					BackgroundTransparency = 1;
					TextXAlignment = 'Right';
					Font = FONT;
					FontSize = FONT_SIZE;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
					Parent = headerFrame;
				})
				
				
				button.MouseEnter:connect(function()
					if buttonEnabled then
						button.BackgroundTransparency = 0.9
					end
					--Icon(button,over)
					--tipText.Visible = true
				end)
				button.MouseLeave:connect(function()
					button.BackgroundTransparency = 1
					--Icon(button,icon)
					--tipText.Visible = false
				end)
				
				currentActions = currentActions + 1
				actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
				QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
					if on then
						buttonEnabled = true
						Icon(button,over)
					else
						buttonEnabled = false
						Icon(button,icon)
					end
				end}
				return button
			end
			
			--local clipboard = {}
			local function delete(o)
				o.Parent = nil
			end
			
			makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()
				
			end)
			
			
			-- DELETE
			makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			end)
			
			-- PASTE
			makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			end)
			
			-- COPY
			makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			end)
			
			-- CUT
			makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			end)
			
			-- FREEZE
			makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)
			
			-- ADD/REMOVE STARRED
			makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)
			
			-- STARRED
			makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)
			
			
			-- SORT
			-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
		end
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Option Bindables
		
		do
			local optionCallback = {
				Modifiable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Selectable
					end
					cancelReparentDrag()
				end;
				Selectable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Modifiable
					end
					cancelSelectDrag()
					Selection:Set({})
				end;
			}
			
			local bindSetOption = explorerPanel:FindFirstChild("SetOption")
			if not bindSetOption then
				bindSetOption = Create('BindableFunction',{Name = "SetOption"})
				bindSetOption.Parent = explorerPanel
			end
			
			bindSetOption.OnInvoke = function(optionName,value)
				if optionCallback[optionName] then
					Option[optionName] = value
					optionCallback[optionName](value)
				end
			end
			
			local bindGetOption = explorerPanel:FindFirstChild("GetOption")
			if not bindGetOption then
				bindGetOption = Create('BindableFunction',{Name = "GetOption"})
				bindGetOption.Parent = explorerPanel
			end
			
			bindGetOption.OnInvoke = function(optionName)
				if optionName then
					return Option[optionName]
				else
					local options = {}
					for k,v in pairs(Option) do
						options[k] = v
					end
					return options
				end
			end
		end
		
		function SelectionVar()
			return Selection
		end
		
		Input.InputBegan:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = true
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = true
			end
		end)
		
		Input.InputEnded:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = false
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = false
			end
		end)
		
		while RbxApi == nil do
			RbxApi = GetApiRemote:Invoke()
			wait()
		end
		
		explorerFilter.Changed:connect(function(prop)
			if prop == "Text" then
				rawUpdateList()
			end
		end)
		
		CurrentInsertObjectWindow = CreateInsertObjectMenu(
			GetClasses(),
			"",
			false,
			function(option)
				CurrentInsertObjectWindow.Visible = false
				local list = SelectionVar():Get()
				for i = 1,#list do
					pcall(function() Instance.new(option,list[i]) end)
				end
				DestroyRightClick()
			end
		)
	end)
	spawn(function()
	--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]
		
		wait(0.2)
		
		local print = function(s)
			print(tostring(s))
		end
		
		-- Services
		local Teams = game:GetService("Teams")
		local Workspace = game:GetService("Workspace")
		local Debris = game:GetService("Debris")
		local ContentProvider = game:GetService("ContentProvider")
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		
		-- Functions
		function httpGet(url)
			return game:HttpGet(url,true)
		end
		
		-- RbxApi Stuff
		
		local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
		local maxChunkSize = 100 * 1000
		local ApiJson
		if script:FindFirstChild("RawApiJson") then
			ApiJson = script.RawApiJson
		else
			ApiJson = ""
		end
		
		
		function getLocalApiJson()
			local rawApiJson = [===[
	[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["RobloxPlaceSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"YieldFunction"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":[],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":[],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":["deprecated"],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrackState","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"revertUrl","Default":null}],"Name":"SetAssetRevertUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"versionsUrl","Default":null}],"Name":"SetAssetVersionsUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"accessUrl","Default":null}],"Name":"SetPlaceAccessUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAwardBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"seconds","Default":null}],"Name":"SetHasBadgeCooldown","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetHasBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeDisabledUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeLegalUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceId","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable","notbrowsable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"TextureContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["RobloxPlaceSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChatFilter","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClusterPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":[],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":[],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"MoveToConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"StabilizingDistance","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"MoveToConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AzimuthalAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Instance","type":"Class","Name":"ContentFilter","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"outstandingRequests","Default":null},{"Type":"int","Name":"cacheSize","Default":null}],"Name":"SetFilterLimits","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFilterUrl","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":[],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetCacheSize","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetThreadPool","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"DeleteCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AltCdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AltCdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AvailablePhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"BlockMeshSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"CPU","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"CdnResponceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuSpeed","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ElapsedTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"LastCdnFailureTimeSpan","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFaultsPerSecond","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFileBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"PixelShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateWorkingSetBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProcessCores","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"ProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProfilingWindow","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RAM","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportExtendedMachineConfiguration","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"Resolution","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"RobloxRespoceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalPhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"VertexShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VirtualBytes","tags":["readonly"],"Class":"DebugSettings"},{"ReturnType":"void","Arguments":[],"Name":"LegacyScriptMode","tags":["LocalUserSecurity","deprecated"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"ResetCdnFailureCounts","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBlockingRemove","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":[]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBreakFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetCreateFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetDeleteFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetEnabled","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFriendsOnlineUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetGetFriendsUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetMakeFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"playerHasPassUrl","Default":null}],"Name":"SetPlayerHasPassUrl","tags":["LocalUserSecurity"],"Class":"GamePassService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoundEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":[]},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"GuiBase3d","type":"Class","Name":"TextureTrail","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"From","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"To","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"ScreenGuiEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"errorMessage","Default":null}],"Name":"SetErrorMessage","tags":["LocalUserSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"EscapeKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":[],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null},{"Type":"bool","Name":"user","Default":"false"}],"Name":"SetAdvancedResults","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetUrl","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetVersionUrl","Default":null}],"Name":"SetAssetVersionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"collectionUrl","Default":null}],"Name":"SetCollectionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeDecalUrl","Default":null}],"Name":"SetFreeDecalUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeModelUrl","Default":null}],"Name":"SetFreeModelUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"trustLevel","Default":null}],"Name":"SetTrustLevel","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":[]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"page","Default":"1"}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":[],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["RobloxPlaceSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"3000"}],"Name":"Disconnect","tags":["LocalUserSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"string","Name":"server","Default":null},{"Type":"int","Name":"serverPort","Default":null},{"Type":"int","Name":"clientPort","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"30"}],"Name":"PlayerConnect","tags":["PluginSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"gameSessionID","Default":null}],"Name":"SetGameSessionID","tags":["RobloxSecurity"],"Class":"NetworkClient","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsCloudEditServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsTeamTestServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetIsPlayerAuthenticationRequired","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"port","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"20"}],"Name":"Start","tags":["PluginSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"1000"}],"Name":"Stop","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataBasicFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataCustomFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"IncommingConnection","tags":["RobloxScriptSecurity"],"Class":"NetworkServer","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"MachineAddress","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ValueType":"int","type":"Property","Name":"Port","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"DisableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestCharacter","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"SendMarker","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetPropSyncExpiration","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"lostConnection","Type":"bool"}],"Name":"Disconnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"PreventTerrainChanges","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBasicFilteringEnabled","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"isAuthenticated","Type":"bool"},{"Name":"protocolVersion","Type":"int"}],"Name":"TicketProcessed","tags":[],"Class":"ServerReplicator","type":"Event"},{"ReturnType":"FilterResult","Arguments":[{"Name":"deletingItem","Type":"Instance"}],"Name":"DeleteFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"firingItem","Type":"Instance"},{"Name":"event","Type":"string"}],"Name":"EventFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"newItem","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"NewFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"changingItem","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"value","Type":"Variant"}],"Name":"PropertyFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryPoolMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowPartMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"TotalNumMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["deprecated"],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Material","type":"Property","Name":"Material","tags":["deprecated","readonly"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":[],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"ValueType":"string","type":"Property","Name":"RoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Demote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Promote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerGetRankUrl","Default":null}],"Name":"SetPersonalServerGetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerRoleSetsUrl","Default":null}],"Name":"SetPersonalServerRoleSetsUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerSetRankUrl","Default":null}],"Name":"SetPersonalServerSetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetRoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAttachmentsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreConstraintsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["notbrowsable"],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"HasBuildTools","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"PersonalServerRank","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"inGame","Default":"true"}],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveLeaderboardData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetWebPersonalServerRank","tags":["LocalUserSecurity","backend"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"rank","Default":null}],"Name":"SetWebPersonalServerRank","tags":["WritePlayerSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddLeaderboardKey","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"bool","Name":"isTeleport","Default":"false"}],"Name":"CreateLocalPlayer","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userID","Default":null}],"Name":"GetPlayerByID","tags":["LocalUserSecurity","deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerById","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUseCoreScriptHealthBar","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAbuseReportUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBuildUserPermissionsUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetChatFilterUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetLoadDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveLeaderboardDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSysStatsUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"urlId","Default":null}],"Name":"SetSysStatsUrlId","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"blockerUserId","Default":null},{"Type":"int","Name":"blockeeUserId","Default":null}],"Name":"BlockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"exblockerUserId","Default":null},{"Type":"int","Name":"exblockeeUserId","Default":null}],"Name":"UnblockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAddedEarly","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemovingLate","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"0"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderHooksService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"CaptureMetrics","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"DisableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"EnableAdorns","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"EnableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetDeltaAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetGPUDelay","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetPresentTime","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMax","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMin","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderStd","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PrintScene","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReloadShaders","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"width","Default":null},{"Type":"int","Name":"height","Default":null}],"Name":"ResizeWindow","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"AASamples","type":"Property","Name":"AASamples","tags":[],"Class":"RenderSettings"},{"ValueType":"Antialiasing","type":"Property","Name":"Antialiasing","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"DebugDisableInterpolation","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsAggregationShown","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsSynchronizedWithPhysics","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowInterpolationpath","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"TextureCacheSize","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"Instance","Name":"parent","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"AddCoreScript","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"AddStarterScript","tags":["LocalUserSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"bool","Name":"clearHighwaterMark","Default":"true"}],"Name":"GetHeapStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":"false"}],"Name":"SetCollectScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"CamelCaseViolation","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptInformationProvider","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"access","Default":null}],"Name":"SetAccessKey","tags":["RobloxSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsPersonalServer","tags":["RobloxScriptSecurity"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"LocalSaveEnabled","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"displayName","Default":null},{"Type":"string","Name":"stat","Default":null}],"Name":"AddStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"localSave","Default":null}],"Name":"FinishShutdown","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadGame","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadPlugins","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadWorld","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stat","Default":null}],"Name":"RemoveStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"id","Default":null},{"Type":"string","Name":"key1","Default":null},{"Type":"string","Name":"value1","Default":null},{"Type":"string","Name":"key2","Default":null},{"Type":"string","Name":"value2","Default":null}],"Name":"ReportMeasurement","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Save","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveStats","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ServerSave","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorID","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorId","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"GearGenreSetting","Name":"genreRestriction","Default":null},{"Type":"int","Name":"allowedGenres","Default":null}],"Name":"SetGearSettings","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Genre","Name":"genre","Default":null}],"Name":"SetGenre","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetJobsExtendedStatsWindow","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"SetMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetMessageBrickCount","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeID","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceVersion","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"buildModeEnabled","Default":null}],"Name":"SetRemoteBuildMode","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetScreenshotInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetServerSaveUrl","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"universeId","Default":null}],"Name":"SetUniverseId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"newId","Default":null}],"Name":"SetVIPServerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"newId","Default":null}],"Name":"SetVIPServerOwnerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetVideoInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleTools","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":[],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"SaveToRoblox","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":[],"Class":"DataModel","type":"Callback"},{"ReturnType":"bool","Arguments":[],"Name":"RequestShutdown","tags":["RobloxScriptSecurity","noyield"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetFVariables","tags":["RobloxScriptSecurity"],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"SocialService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"bestFriendUrl","Default":null}],"Name":"SetBestFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"friendUrl","Default":null}],"Name":"SetFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRankUrl","Default":null}],"Name":"SetGroupRankUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRoleUrl","Default":null}],"Name":"SetGroupRoleUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupUrl","Default":null}],"Name":"SetGroupUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetPackageContentsUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetStuffUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":["notCreatable"]},{"ValueType":"double","type":"Property","Name":"MinReportInterval","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ValueType":"string","type":"Property","Name":"ReporterType","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"Dictionary","Name":"data","Default":null}],"Name":"Report","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportJobsStepWindow","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"includeJobs","Default":"false"}],"Name":"ReportTaskScheduler","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetReportUrl","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"ProfilingItem","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"double","Name":"window","Default":"0"}],"Name":"GetTimes","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"frames","Default":"1"}],"Name":"GetTimesForFrames","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"StudioTool","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"StudioTool"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"StudioTool","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusive","Default":"true"},{"Type":"double","Name":"fps","Default":"30"}],"Name":"AddDummyJob","tags":["LocalUserSecurity"],"Class":"TaskScheduler","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"timeSlice","Default":null},{"Type":"int","Name":"numShare","Default":null}],"Name":"SetThreadShare","tags":["LocalUserSecurity","deprecated"],"Class":"TaskScheduler","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"ReturnType":"bool","Arguments":[{"Name":"message","Type":"string"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"ConfirmationCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"ReturnType":"void","Arguments":[{"Name":"message","Type":"string"}],"Name":"ErrorCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":["notCreatable"]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":["RobloxScriptSecurity"],"Class":"TextService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"ImageUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"VideoUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"pingUrl","Default":null},{"Type":"int","Name":"interval","Default":null}],"Name":"SetPing","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throtle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":22,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":6,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"Include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":[],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":[],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":[],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":[],"Value":4,"Enum":"PathStatus"},{"type":"Enum","Name":"PhysicalPropertiesMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":1,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"New","tags":[],"Value":2,"Enum":"PhysicalPropertiesMode"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Stuff","tags":[]},{"type":"EnumItem","Name":"Heads","tags":[],"Value":0,"Enum":"Stuff"},{"type":"EnumItem","Name":"Faces","tags":[],"Value":1,"Enum":"Stuff"},{"type":"EnumItem","Name":"Hats","tags":[],"Value":2,"Enum":"Stuff"},{"type":"EnumItem","Name":"TShirts","tags":[],"Value":3,"Enum":"Stuff"},{"type":"EnumItem","Name":"Shirts","tags":[],"Value":4,"Enum":"Stuff"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":5,"Enum":"Stuff"},{"type":"EnumItem","Name":"Gears","tags":[],"Value":6,"Enum":"Stuff"},{"type":"EnumItem","Name":"Torsos","tags":[],"Value":7,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftArms","tags":[],"Value":8,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightArms","tags":[],"Value":9,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftLegs","tags":[],"Value":10,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightLegs","tags":[],"Value":11,"Enum":"Stuff"},{"type":"EnumItem","Name":"Bodies","tags":[],"Value":12,"Enum":"Stuff"},{"type":"EnumItem","Name":"Costumes","tags":[],"Value":13,"Enum":"Stuff"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"}]
]===]
			return rawApiJson
		end
		
		function getCurrentApiJson()
			local jsonStr = nil
			if readfile and getelysianpath then
				if readfile(getelysianpath().."Xpl0rerApi.txt") then
					print("Api found in folder!")
					jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
					return jsonStr
				end
			end
			local success, err = pcall(function()
				jsonStr = httpGet(apiUrl)
				print("Fetched json successfully")
			end)
			if success then
				print("Returning json")
				--print(jsonStr:sub(1,500))
				return jsonStr
			else
				print("Error fetching json: " .. tostring(err))
				print("Falling back to local copy")
				return getLocalApiJson()
			end
		end
		
		function splitStringIntoChunks(jsonStr)
			-- Splits up a string into a table with a given size
			local t = {}
			for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
				local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
				table.insert(t, str)
			end
			return t
		end
		
		local jsonToParse = getCurrentApiJson()
		local apiChunks = splitStringIntoChunks(jsonToParse)
		
		function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]
			
			-- Services
			local HttpService = game:GetService("HttpService")
			local ServerStorage = game:GetService("ServerStorage")
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			
			-- Remotes
			--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
			--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")
			
			-- Functions
			local JsonDecode = function(s) return HttpService:JSONDecode(s) end
			
			local function GetApiRemoteFunction(index)
				if (apiChunks[index]) then 
					return apiChunks[index], #apiChunks
				else
					print("Bad index for GetApiJson")
					return nil
				end
			end
			
			local function getApiJson()
				local apiTable = {}
				local firstPage, pageCount = GetApiRemoteFunction(1)
				table.insert(apiTable, firstPage)
				for i = 2, pageCount do
					--print("Fetching API page # " .. tostring(i))
					local result = GetApiRemoteFunction(i)
					table.insert(apiTable, result)
				end
				return table.concat(apiTable)
			end
			
			local json = getApiJson()
			local apiDump =  JsonDecode(json)
			
			local Classes = {}
			local Enums = {}
			
			local function sortAlphabetic(t, property)
				table.sort(t, 
					function(x,y) return x[property] < y[property]
					end)
			end
			
			local function isEnum(name)
				return Enums[name] ~= nil
			end
			
			local function getProperties(className)
				local class = Classes[className]
				local properties = {}
				
				if not class then return properties end
				
				while class do
					for _,property in pairs(class.Properties) do
						table.insert(properties, property)
					end
					class = Classes[class.Superclass]
				end
				
				sortAlphabetic(properties, "Name")
				
				return properties
			end
			
			for _,item in pairs(apiDump) do
				local itemType = item.type
				-- Classes --
				if (itemType == 'Class') then
					Classes[item.Name] = item
					item.Properties = {}
					item.Functions = {}
					item.YieldFunctions = {}
					item.Events = {}
					item.Callbacks = {}
					-- Members --
				elseif (itemType == 'Property') then
					table.insert(Classes[item.Class].Properties, item)
				elseif (itemType == 'Function') then
					table.insert(Classes[item.Class].Functions, item)
				elseif (itemType == 'YieldFunction') then
					table.insert(Classes[item.Class].YieldFunctions, item)
				elseif (itemType == 'Event') then
					table.insert(Classes[item.Class].Events, item)
				elseif (itemType == 'Callback') then
					table.insert(Classes[item.Class].Callbacks, item)
					-- Enums --
				elseif (itemType == 'Enum') then
					Enums[item.Name] = item
					item.EnumItems = {}
				elseif (itemType == 'EnumItem') then
					Enums[item.Enum].EnumItems[item.Name] = item
				end
			end
			
			return {
				Classes = Classes;
				Enums = Enums;
				GetProperties = getProperties;
				IsEnum = isEnum;
			}
		end
		
		-- Modules
		local Permissions = {CanEdit = true}
		local RbxApi = getRbxApi()
		
--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]
		
		-- Styles
		
		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end
		
		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}
		
		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}
		
		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 16;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}
		
		local BrickColors = {
			BoxSize = 13;
			BorderSizePixel = 1;
			BorderColor = CreateColor3(160,160,160);
			FrameColor = CreateColor3(160,160,160);
			Size = 20;
			Padding = 4;
			ColorsPerRow = 8;
			OuterBorder = 1;
			OuterBorderColor = Styles.Black;
		}
		
		wait(1)
		
		local Gui = D_E_X
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")
		
		local bindGetSelection = ExplorerFrame.GetSelection
		local bindSelectionChanged = ExplorerFrame.SelectionChanged
		local bindGetApi = PropertiesFrame.GetApi
		local bindGetAwait = PropertiesFrame.GetAwaiting
		local bindSetAwait = PropertiesFrame.SetAwaiting
		
		local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="
		
		local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
		
		local propertiesSearch = PropertiesFrame.Header.TextBox
		
		local AwaitingObjectValue = false
		local AwaitingObjectObj
		local AwaitingObjectProp
		
		function searchingProperties()
			if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
				return true
			end
			return false
		end
		
		local function GetSelection()
			local selection = bindGetSelection:Invoke()
			if #selection == 0 then
				return nil
			else
				return selection
			end 
		end
		
		-- Number
		
		local function Round(number, decimalPlaces)
			return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
		end
		
		-- Strings
		
		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end
		
		-- Data Type Handling
		
		local function ToString(value, type)
			if type == "float" then
				return tostring(Round(value,2))
			elseif type == "Content" then
				if string.find(value,"/asset") then
					local match = string.find(value, "=") + 1
					local id = string.sub(value, match)
					return id
				else
					return tostring(value)
				end
			elseif type == "Vector2" then
				local x = value.x
				local y = value.y
				return string.format("%g, %g", x,y)
			elseif type == "Vector3" then
				local x = value.x
				local y = value.y
				local z = value.z
				return string.format("%g, %g, %g", x,y,z)
			elseif type == "Color3" then
				local r = value.r
				local g = value.g
				local b = value.b
				return string.format("%d, %d, %d", r*255,g*255,b*255)
			elseif type == "UDim2" then
				local xScale = value.X.Scale
				local xOffset = value.X.Offset
				local yScale = value.Y.Scale
				local yOffset = value.Y.Offset
				return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
			else
				return tostring(value)
			end
		end
		
		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				if tonumber(value) ~= nil then
					value = ContentUrl .. value
				end
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			else
				return nil
			end
		end
		
		
		-- Tables
		
		local function CopyTable(T)
			local t2 = {}
			for k,v in pairs(T) do
				t2[k] = v
			end
			return t2
		end
		
		local function SortTable(T)
			table.sort(T, 
				function(x,y) return x.Name < y.Name
				end)
		end
		
		-- Spritesheet
		local Sprite = {
			Width = 13;
			Height = 13;
		}
		
		local Spritesheet = {
			Image = "http://www.roblox.com/asset/?id=128896947";
			Height = 256;
			Width = 256;
		}
		
		local Images = {
			"unchecked",
			"checked",
			"unchecked_over",
			"checked_over",
			"unchecked_disabled",
			"checked_disabled"
		}
		
		local function SpritePosition(spriteName)
			local x = 0
			local y = 0
			for i,v in pairs(Images) do
				if (v == spriteName) then
					return {x, y}
				end
				x = x + Sprite.Height
				if (x + Sprite.Width) > Spritesheet.Width then
					x = 0
					y = y + Sprite.Height
				end
			end
		end
		
		local function GetCheckboxImageName(checked, readOnly, mouseover)
			if checked then
				if readOnly then
					return "checked_disabled"
				elseif mouseover then
					return "checked_over"
				else
					return "checked"
				end
			else
				if readOnly then
					return "unchecked_disabled"
				elseif mouseover then
					return "unchecked_over"
				else
					return "unchecked"
				end
			end
		end
		
		local MAP_ID = 418720155
		
		-- Gui Controls --
		
		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end
			
			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16
				
				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end
				
				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end
				
				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end
		
		local function CreateCell()
			local tableCell = Instance.new("Frame")
			tableCell.Size = UDim2.new(0.5, -1, 1, 0)
			tableCell.BackgroundColor3 = Row.BackgroundColor
			tableCell.BorderColor3 = Row.BorderColor
			return tableCell
		end
		
		local function CreateLabel(readOnly)
			local label = Instance.new("TextLabel")
			label.Font = Row.Font
			label.FontSize = Row.FontSize
			label.TextXAlignment = Row.TextXAlignment
			label.BackgroundTransparency = 1
			
			if readOnly then
				label.TextColor3 = Row.TextLockedColor
			else
				label.TextColor3 = Row.TextColor
			end
			return label
		end
		
		local function CreateTextButton(readOnly, onClick)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
				button.MouseButton1Click:connect(function()
					onClick()
				end)
			end
			return button
		end
		
		local function CreateObject(readOnly)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
			end
			local cancel = Create(Icon('ImageButton',177),{
				Name = "Cancel";
				Visible = false;
				Position = UDim2.new(1,-20,0,0);
				Size = UDim2.new(0,20,0,20);
				Parent = button;
			})
			return button
		end
		
		local function CreateTextBox(readOnly)
			if readOnly then
				local box = CreateLabel(readOnly)
				return box
			else
				local box = Instance.new("TextBox")
				if not SettingsRemote:Invoke("ClearProps") then
					box.ClearTextOnFocus = false
				end
				box.Font = Row.Font
				box.FontSize = Row.FontSize
				box.TextXAlignment = Row.TextXAlignment
				box.BackgroundTransparency = 1
				box.TextColor3 = Row.TextColor
				return box
			end
		end
		
		local function CreateDropDownItem(text, onClick)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text
			
			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				onClick(text)
			end)	
			return button
		end
		
		local function CreateDropDown(choices, currentChoice, readOnly, onClick)
			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(1, 0, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true
			
			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;
			
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			button.TextColor3 = Row.TextColor
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			end
			button.Text = currentChoice
			button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			button.Position = UDim2.new(0, Styles.Margin, 0, 0)
			button.Parent = frame
			
			local function showArrow(color)
				if arrow then arrow:Destroy() end
				
				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = color;
				})
				local graphicSize = 16/2
				
				arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
				arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
				arrow.Parent = frame
			end
			
			local function hideMenu()
				expanded = false
				showArrow(DropDown.ArrowColor)
				if menu then menu:Destroy() end
			end
			
			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame
				
				local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
				local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
				if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
					menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				end
				
				local function choice(name)
					onClick(name)
					hideMenu()
				end
				
				for i,name in pairs(choices) do
					local option = CreateDropDownItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 16)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end
			
			showArrow(DropDown.ArrowColor)
			
			if not readOnly then
				
				button.MouseEnter:connect(function()
					button.TextColor3 = Row.TextColor
					showArrow(DropDown.ArrowColorOver)
				end)
				button.MouseLeave:connect(function()
					button.TextColor3 = Row.TextColor
					if not expanded then
						showArrow(DropDown.ArrowColor)
					end
				end)
				button.MouseButton1Click:connect(function()
					if expanded then
						hideMenu()
					else
						showMenu()
					end
				end)
			end
			
			return frame,button
		end
		
		local function CreateBrickColor(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1
			
			local colorPalette = Instance.new("Frame")
			colorPalette.BackgroundTransparency = 0
			colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
			colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
			colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
			colorPalette.BorderColor3 = BrickColors.BorderColor
			colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
			colorPalette.ZIndex = 5
			colorPalette.Visible = false
			colorPalette.BorderSizePixel = BrickColors.OuterBorder
			colorPalette.BorderColor3 = BrickColors.OuterBorderColor
			colorPalette.Parent = frame
			
			local function show()
				colorPalette.Visible = true
			end
			
			local function hide()
				colorPalette.Visible = false
			end
			
			local function toggle()
				colorPalette.Visible = not colorPalette.Visible
			end
			
			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.MouseButton1Click:connect(function()
				if not readOnly then
					toggle()
				end
			end)
			
			if readOnly then
				colorBox.AutoButtonColor = false
			end
			
			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
			
			local propertyLabel = CreateTextButton(readOnly, function()
				if not readOnly then
					toggle()
				end
			end)
			propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
			propertyLabel.Parent = frame
			
			local size = (1 / BrickColors.ColorsPerRow)
			
			for index = 0, 127 do
				local brickColor = BrickColor.palette(index)
				local color3 = brickColor.Color
				
				local x = size * (index % BrickColors.ColorsPerRow)
				local y = size * math.floor(index / BrickColors.ColorsPerRow)
				
				local brickColorBox = Instance.new("TextButton")
				brickColorBox.Text = ""
				brickColorBox.Size = UDim2.new(size,0,size,0)
				brickColorBox.BackgroundColor3 = color3
				brickColorBox.Position = UDim2.new(x, 0, y, 0)
				brickColorBox.ZIndex = colorPalette.ZIndex
				brickColorBox.Parent = colorPalette
				
				brickColorBox.MouseButton1Click:connect(function()
					hide()
					onClick(brickColor)
				end)
			end
			
			return frame,propertyLabel,colorBox
		end
		
		local function CreateColor3Control(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1
			
			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.AutoButtonColor = false
			
			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, spacingBefore, 0, 0)
			box.Parent = frame
			
			return frame,box,colorBox
		end
		
		function CreateCheckbox(value, readOnly, onClick)
			local checked = value
			local mouseover = false
			
			local checkboxFrame = Instance.new("ImageButton")
			checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
			checkboxFrame.BackgroundTransparency = 1
			checkboxFrame.ClipsDescendants = true
			--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			
			local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
			spritesheetImage.Name = "SpritesheetImageLabel"
			spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
			spritesheetImage.Image = Spritesheet.Image
			spritesheetImage.BackgroundTransparency = 1
			
			local function updateSprite()
				local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
				local spritePosition = SpritePosition(spriteName)
				spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
			end
			
			local function setValue(val)
				checked = val
				updateSprite()
			end
			
			if not readOnly then
				checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
				checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
				checkboxFrame.MouseButton1Click:connect(function()
					onClick(checked)
				end)
			end
			
			updateSprite()
			
			return checkboxFrame, setValue
		end
		
		
		
		-- Code for handling controls of various data types --
		
		local Controls = {}
		
		Controls["default"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			
			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)
			
			local function update()
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end
			
			if not readOnly then
				box.FocusLost:connect(function(enterPressed)
					Set(object, propertyData, ToValue(box.Text,propertyType))
					update()
				end)
			end
			
			update()
			
			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)
			
			return box
		end
		
		Controls["bool"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local checked = object[propertyName]
			
			local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
				Set(object, propertyData, not checked)
			end)
			checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			
			setValue(checked)
			
			local function update()
				checked = object[propertyName]
				setValue(checked)
			end
			
			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)
			
			if object:IsA("BoolValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end
			
			update()
			
			return checkbox
		end
		
		Controls["BrickColor"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			
			local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
				Set(object, propertyData, brickColor)
			end)
			
			local function update()
				local value = object[propertyName]
				brickColorBox.BackgroundColor3 = value.Color
				label.Text = tostring(value)
			end
			
			update()
			
			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)
			
			return frame
		end
		
		Controls["Color3"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			
			local frame,textBox,colorBox = CreateColor3Control(readOnly)
			
			textBox.FocusLost:connect(function(enterPressed)
				Set(object, propertyData, ToValue(textBox.Text,"Color3"))
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end)
			
			local function update()
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end
			
			update()
			
			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)
			
			return frame
		end
		
		Controls["Enum"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			
			local enumName = object[propertyName].Name
			
			local enumNames = {}
			for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
				table.insert(enumNames, enum.Name)
			end
			
			local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
				Set(object, propertyData, value)
			end)
			--dropdown.Parent = frame
			
			local function update()
				local value = object[propertyName].Name
				propertyLabel.Text = tostring(value)
			end
			
			update()
			
			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)
			
			return dropdown
		end
		
		Controls["Object"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			
			local box = CreateObject(readOnly,function()end)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)
			
			local function update()
				if AwaitingObjectObj == object then
					if AwaitingObjectValue == true then
						box.Text = "Select an Object"
						return
					end
				end
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end
			
			if not readOnly then
				box.MouseButton1Click:connect(function()
					if AwaitingObjectValue then
						AwaitingObjectValue = false
						update()
						return
					end
					AwaitingObjectValue = true
					AwaitingObjectObj = object
					AwaitingObjectProp = propertyData
					box.Text = "Select an Object"
				end)
				
				box.Cancel.Visible = true
				box.Cancel.MouseButton1Click:connect(function()
					object[propertyName] = nil
				end)
			end
			
			update()
			
			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)
			
			if object:IsA("ObjectValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end
			
			return box
		end
		
		function GetControl(object, propertyData, readOnly)
			local propertyType = propertyData["ValueType"]
			local control = nil
			
			if Controls[propertyType] then
				control = Controls[propertyType](object, propertyData, readOnly)
			elseif RbxApi.IsEnum(propertyType) then
				control = Controls["Enum"](object, propertyData, readOnly)
			else
				control = Controls["default"](object, propertyData, readOnly)
			end
			return control
		end
		-- Permissions
		
		function CanEditObject(object)
			local player = Players.LocalPlayer
			local character = player.Character
			return Permissions.CanEdit
		end
		
		function CanEditProperty(object,propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "readonly" then
					return false
				end
			end
			return CanEditObject(object)
		end
		
		--RbxApi
		local function PropertyIsHidden(propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end
		
		function Set(object, propertyData, value)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			
			if value == nil then return end
			
			for i,v in pairs(GetSelection()) do
				if CanEditProperty(v,propertyData) then
					pcall(function()
						--print("Setting " .. propertyName .. " to " .. tostring(value))
						v[propertyName] = value
					end)
				end
			end
		end
		
		function CreateRow(object, propertyData, isAlternateRow)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			local propertyValue = object[propertyName]
			--rowValue, rowValueType, isAlternate
			local backColor = Row.BackgroundColor;
			if (isAlternateRow) then
				backColor = Row.BackgroundColorAlternate
			end
			
			local readOnly = not CanEditProperty(object, propertyData)
			if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end
			
			local rowFrame = Instance.new("Frame")
			rowFrame.Size = UDim2.new(1,0,0,Row.Height)
			rowFrame.BackgroundTransparency = 1
			rowFrame.Name = 'Row'
			
			local propertyLabelFrame = CreateCell()
			propertyLabelFrame.Parent = rowFrame
			propertyLabelFrame.ClipsDescendants = true
			
			local propertyLabel = CreateLabel(readOnly)
			propertyLabel.Text = propertyName
			propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
			propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
			propertyLabel.Parent = propertyLabelFrame
			
			local propertyValueFrame = CreateCell()
			propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
			propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
			propertyValueFrame.Parent = rowFrame
			
			local control = GetControl(object, propertyData, readOnly)
			control.Parent = propertyValueFrame
			
			rowFrame.MouseEnter:connect(function()
				propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
				propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
			end)
			rowFrame.MouseLeave:connect(function()
				propertyLabelFrame.BackgroundColor3 = backColor
				propertyValueFrame.BackgroundColor3 = backColor
			end)
			
			propertyLabelFrame.BackgroundColor3 = backColor
			propertyValueFrame.BackgroundColor3 = backColor
			
			return rowFrame
		end
		
		function ClearPropertiesList()
			for _,instance in pairs(ContentFrame:GetChildren()) do
				instance:Destroy()
			end
		end
		
		local selection = Gui:FindFirstChild("Selection", 1)
		print(selection)
		
		function displayProperties(props)
			for i,v in pairs(props) do
				pcall(function()
					local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
					a.Position = UDim2.new(0,0,0,numRows*Row.Height)
					a.Parent = ContentFrame
					numRows = numRows + 1
				end)
			end
		end
		
		function checkForDupe(prop,props)
			for i,v in pairs(props) do
				if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
					return true
				end
			end
			return false
		end
		
		function sortProps(t)
			table.sort(t, 
				function(x,y) return x.propertyData.Name < y.propertyData.Name
				end)
		end
		
		function showProperties(obj)
			ClearPropertiesList()
			if obj == nil then return end
			local propHolder = {}
			local foundProps = {}
			numRows = 0
			for _,nextObj in pairs(obj) do
				if not foundProps[nextObj.className] then
					foundProps[nextObj.className] = true
					for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
						local suc, err = pcall(function()
							if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
								if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
									table.insert(propHolder,{propertyData = v, object = nextObj})
								end
							end
						end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
					end
				end
			end
			sortProps(propHolder)
			displayProperties(propHolder)
			ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
			scrollBar.ScrollIndex = 0
			scrollBar.TotalSpace = numRows * Row.Height
			scrollBar.Update()
		end
		
		----------------------------------------------------------------
		-----------------------SCROLLBAR STUFF--------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		local ScrollBarWidth = 16
		
		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end
		
		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end
			
			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end
			
			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end
			
			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end
		
		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end
			
			spacing = spacing or 2
			
			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end
			
			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end
			
			return Frame
		end
		
		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown
			
			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})
				
				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2
				
				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end
				
				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})
				
				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)
				
				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end
				
				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}
				
				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end
					
					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end
					
					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update
				
				SetZIndexOnChanged(ScrollFrame)
				
				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)
				
				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)
				
				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)
				
				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)
				
				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end
				
				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end
				
				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end
				
				Update()
				
				return Class
			end
		end
		
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		
		local MainFrame = Instance.new("Frame")
		MainFrame.Name = "MainFrame"
		MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
		MainFrame.Position = UDim2.new(0, 0, 0, 0)
		MainFrame.BackgroundTransparency = 1
		MainFrame.ClipsDescendants = true
		MainFrame.Parent = PropertiesFrame
		
		ContentFrame = Instance.new("Frame")
		ContentFrame.Name = "ContentFrame"
		ContentFrame.Size = UDim2.new(1, 0, 0, 0)
		ContentFrame.BackgroundTransparency = 1
		ContentFrame.Parent = MainFrame
		
		scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-ScrollBarWidth,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = PropertiesFrame;
		})
		
		scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = ScrollBarWidth
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-ScrollBarWidth);
			Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
			Visible = false;
			Parent = PropertiesFrame;
		})
		
		do
			local listEntries = {}
			local nameConnLookup = {}
			
			function scrollBar.UpdateCallback(self)
				scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
				scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
				ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
			end
			
			function scrollBarH.UpdateCallback(self)
				
			end
			
			MainFrame.Changed:connect(function(p)
				if p == 'AbsoluteSize' then
					scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
					scrollBarH:Update()
					scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
					scrollBar:Update()
				end
			end)
			
			local wheelAmount = Row.Height
			PropertiesFrame.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			PropertiesFrame.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end
		
		scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
		scrollBar:Update()
		
		showProperties(GetSelection())
		
		bindSelectionChanged.Event:connect(function()
			showProperties(GetSelection())
		end)
		
		bindSetAwait.Event:connect(function(obj)
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				local mySel = obj
				if mySel then
					pcall(function()
						Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
					end)
				end
			end
		end)
		
		propertiesSearch.Changed:connect(function(prop)
			if prop == "Text" then
				showProperties(GetSelection())
			end
		end)
		
		bindGetApi.OnInvoke = function()
			return RbxApi
		end
		
		bindGetAwait.OnInvoke = function()
			return AwaitingObjectValue
		end
	end)
	spawn(function()
		local top = D_E_X.ScriptEditor
		
		local editorGrid = top:WaitForChild("EditorGrid")
		
		local currentSource = ""
		
		local currentEditor = {
			x = 0,
			y = 0
		}
		
		local userInput = game:GetService("UserInputService")
		local mouse = game.Players.LocalPlayer:GetMouse()
		
		local topBar = top:WaitForChild("TopBar")
		local scriptBar = topBar:WaitForChild("ScriptBar")
		local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
		local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
		local clipboardButton = topBar:WaitForChild("Clipboard")
		
		local entryTemplate = topBar:WaitForChild("Entry")
		
		local openEvent = top:WaitForChild("OpenScript")
		
		local closeButton = top:WaitForChild("Close")
		
		local memoryScripts = {}
		
		local editingIndex = 0
		
		-- Scrollbar
		
		local ScrollBarWidth = 16
		
		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end
		
		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end
			
			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end
			
			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end
			
			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end
		
		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end
			
			spacing = spacing or 2
			
			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end
			
			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end
			
			return Frame
		end
		
		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown
			
			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})
				
				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2
				
				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end
				
				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})
				
				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)
				
				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end
				
				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}
				
				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end
					
					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end
					
					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update
				
				SetZIndexOnChanged(ScrollFrame)
				
				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)
				
				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)
				
				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)
				
				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)
				
				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end
				
				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end
				
				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end
				
				Update()
				
				return Class
			end
		end
		
		-- End Scrollbar
		
		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 16
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,0,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = editorGrid;
		})
		
		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = 8
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,0);
			Size = UDim2.new(1,0,0,ScrollBarWidth);
			Parent = editorGrid;
		})
		
		local entries = {}
		
		local grid = {}
		
		local count = 1
		local xCount = 1
		
		local lineSpan = 0
		
		for i = 0,490,8 do
			local newRow = {}
			for j = 0,390,16 do
				local cellText = Instance.new("TextLabel",editorGrid)
				cellText.BackgroundTransparency = 1
				cellText.BorderSizePixel = 0
				cellText.Text = ""
				cellText.Position = UDim2.new(0,i,0,j)
				cellText.Size = UDim2.new(0,8,0,16)
				cellText.Font = Enum.Font.SourceSans
				cellText.FontSize = Enum.FontSize.Size18
				table.insert(newRow,cellText)
				xCount = xCount + 1
			end
			table.insert(grid,newRow)
			count = count + 1
			xCount = 1
		end
		
		local syntaxHighlightList = {
			{["Keyword"] = "for", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "local", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "if", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "then", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "do", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "while", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "end", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "function", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "string", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "table", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "game", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "workspace", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "return", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "break", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "elseif", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "in", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "pairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "ipairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true}
		}
		
		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	
			
			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end
		
		function AddZeros(num,reach)
			local toConvert = tostring(num)
			while #toConvert < reach do
				toConvert = " "..toConvert
			end
			return toConvert
		end
		
		function buildScript(source,xOff,yOff,override)
			local buildingRows = true
			local buildScr = source
			
			local totalLines = 0
			
			--print(xOff,yOff)
			
			if currentSource ~= source then
				currentSource = source
			end
			
			if override then
				currentSource = source
				entries = {}
				while buildingRows do
					local x,y = string.find(buildScr,"\n")
					if x and y then
						table.insert(entries,string.sub(buildScr,1,y))
						buildScr = string.sub(buildScr,y+1,string.len(buildScr))
					else
						buildingRows = false
						table.insert(entries,buildScr)
					end
				end
			end
			
			totalLines = #entries
			lineSpan = #tostring(totalLines)
			
			if lineSpan == 1 then lineSpan = 2 end
			
			local currentRow = 1
			local currentColumn = 2 + lineSpan
			
			local colorTime = 0
			local colorReplace = nil
			
			local inString = false
			
			local workingEntries = entries
			
	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]
			
			local delayance = xOff
			
			for i = 1,#grid do
				for j = 1,#grid[i] do
					if i <= lineSpan then
						local newNum = AddZeros(yOff + j,lineSpan)
						local newDigit =  string.sub(newNum,i,i)
						if newDigit == " " then
							grid[i][j].Text = ""
						else
							grid[i][j].Text = newDigit
						end
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(163/255, 162/255, 165/255)
						--grid[i][j].Font = Enum.Font.SourceSansBold
					elseif i == lineSpan + 1 then
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(200/255, 200/255, 200/255)
						--grid[i][j].Font = Enum.Font.SourceSans
					else
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 1
						--grid[i][j].Font = Enum.Font.SourceSans
					end
				end
			end
			
			while true do
				if currentRow > #workingEntries or currentRow > #grid[1] then break end
				local entry = workingEntries[currentRow+yOff]
				while string.len(entry) > 0 do
					if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end
					
					if currentColumn > #grid then break end
					
					if delayance == 0 then
						grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
					end
					
					-- Coloring
					
					if not inString then
						for i,v in pairs(syntaxHighlightList) do
							if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
								if v["Independent"] then
									local outCheck = string.len(v["Keyword"])+1
									local outEntry = string.sub(entry,outCheck,outCheck)
									if not string.find(outEntry,"%w") then
										colorTime = string.len(v["Keyword"])
										colorReplace = v["Color"]
									end
								else
									colorTime = string.len(v["Keyword"])
									colorReplace = v["Color"]
								end
							end
						end
					end
					
					if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
						inString = true
						colorTime = string.len(string.match(entry,"\".+\""))
						colorReplace = Color3.new(170/255, 0, 1)
					end
					
					if colorTime > 0 then
						colorTime = colorTime - 1
						grid[currentColumn][currentRow].TextColor3 = colorReplace
						if colorTime == 0 then inString = false end
					else
						grid[currentColumn][currentRow].TextColor3 = Color3.new(0,0,0)
						inString = false
					end
					
					if delayance == 0 then
						currentColumn = currentColumn + 1
					else
						delayance = delayance - 1
					end
					entry = string.sub(entry,2,string.len(entry))
				end
				currentRow = currentRow + 1
				currentColumn = 2 + lineSpan
				colorTime = 0
				delayance = xOff
				inString = false
			end
		end
		
		function scrollBar.UpdateCallback(self)
			scrollBar.TotalSpace = #entries * 16
			scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end
		
		function scrollBarH.UpdateCallback(self)
			scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
			scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end
		
		function getLongestEntry(tab)
			local longest = 0
			for i,v in pairs(tab) do
				if string.len(v) > longest then
					longest = string.len(v)
				end
			end
			return longest
		end
		
		function openScript(scrObj)
			if scrObj:IsA("LocalScript") then
				scrObj.Archivable = true
				scrObj = scrObj:Clone()
				scrObj.Disabled = true
			end
			
			local scrName = scrObj.Name
			local scrSource = decompile(scrObj)
			
			table.insert(memoryScripts,{Name = scrName,Source = scrSource})
			
			local newTab = entryTemplate:Clone()
			newTab.Button.Text = scrName
			newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
			newTab.Visible = true
			
			newTab.Button.MouseButton1Down:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						editingIndex = i
						buildScript(memoryScripts[i].Source,0,0,true)
						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()
					end
				end
			end)
			
			newTab.Close.MouseButton1Click:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						table.remove(memoryScripts,i)
						if editingIndex == i then
							editingIndex = #memoryScripts
							if editingIndex > 0 then
								buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
							else
								buildScript("",0,0,true)
							end
						end
						
						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()
						
						for i2 = i,#scriptBar:GetChildren() do
							scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
						end
						if editingIndex > i then
							editingIndex = editingIndex - 1
						end
						newTab:Destroy()
					end
				end
			end)
			
			editingIndex = #memoryScripts
			buildScript(scrSource,0,0,true)
			
			newTab.Parent = scriptBar
		end
		
		function updateScriptBar()
			local entryCount = 0
			
			scriptBarLeft.Active = false
			scriptBarLeft.AutoButtonColor = false
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			scriptBarRight.Active = false
			scriptBarRight.AutoButtonColor = false
			for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			for i,v in pairs(scriptBar:GetChildren()) do
				if v.Position.X.Offset < 0 then
					scriptBarLeft.Active = true
					scriptBarLeft.AutoButtonColor = true
					for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
						v.BackgroundTransparency = 0
					end
				elseif v.Position.X.Offset >= 0 then
					entryCount = entryCount + 1
					if entryCount == 5 then
						scriptBarRight.Active = true
						scriptBarRight.AutoButtonColor = true
						for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
							v.BackgroundTransparency = 0
						end
					end
				end
			end
		end
		
		scriptBar.ChildAdded:connect(updateScriptBar)
		scriptBar.ChildRemoved:connect(updateScriptBar)
		
		scriptBarLeft.MouseButton1Click:connect(function()
			if scriptBarLeft.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,100,0,0)
			end
			updateScriptBar()
		end)
		
		scriptBarRight.MouseButton1Click:connect(function()
			if scriptBarRight.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,-100,0,0)
			end
			updateScriptBar()
		end)
		
		mouse.Button1Down:connect(function()
			if checkMouseInGui(editorGrid) then
				--print("LETS EDIT!")
			end
		end)
		
		openEvent.Event:connect(function(...)
			top.Visible = true
			local args = {...}
			if #args > 0 then
				openScript(args[1])
			end
		end)
		
		clipboardButton.MouseButton1Click:connect(function()
			if Clipboard and Clipboard.set then
				Clipboard.set(currentSource)
			elseif CopyString then
				CopyString(currentSource)
			end
		end)
		
		closeButton.MouseButton1Click:connect(function()
			top.Visible = false
		end)
		
--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]
		
		buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]
		
		scrollBar:Update()
		scrollBarH:Update()
	end)
	
	--moony
	
	
end)

Credito.Name = "Credito"
Credito.Parent = Ola
Credito.BackgroundColor3 = Color3.new(1, 1, 1)
Credito.BackgroundTransparency = 1
Credito.Position = UDim2.new(0.243912831, 0, 0.89652741, 0)
Credito.Size = UDim2.new(0, 112, 0, 19)
Credito.Font = Enum.Font.Gotham
Credito.Text = "😎 Make By : Drezin 😎"
Credito.TextColor3 = Color3.new(1, 1, 1)
Credito.TextSize = 14

Nome.Name = "Nome"
Nome.Parent = Master
Nome.BackgroundColor3 = Color3.new(1, 1, 1)
Nome.BackgroundTransparency = 1
Nome.Position = UDim2.new(0.0213235281, 0, 0.278418452, 0)
Nome.Size = UDim2.new(0, 112, 0, 30)
Nome.Font = Enum.Font.Gotham
Nome.Text = "😎 Master GUI 🤡"
Nome.TextColor3 = Color3.new(1, 1, 1)
Nome.TextSize = 14

Msotrar.Name = "Msotrar"
Msotrar.Parent = Master
Msotrar.BackgroundColor3 = Color3.new(1, 1, 1)
Msotrar.BackgroundTransparency = 1
Msotrar.Position = UDim2.new(0.119117647, 0, 0.276771009, 0)
Msotrar.Size = UDim2.new(0, 30, 0, 30)
Msotrar.Font = Enum.Font.Gotham
Msotrar.Text = "+"
Msotrar.TextColor3 = Color3.new(1, 1, 1)
Msotrar.TextScaled = true
Msotrar.TextSize = 14
Msotrar.TextWrapped = true
Msotrar.MouseButton1Down:connect(function()
	Ola.Visible = true
end)

Tirar.Name = "Tirar"
Tirar.Parent = Master
Tirar.BackgroundColor3 = Color3.new(1, 1, 1)
Tirar.BackgroundTransparency = 1
Tirar.Position = UDim2.new(0.154411763, 0, 0.276771009, 0)
Tirar.Size = UDim2.new(0, 29, 0, 30)
Tirar.Font = Enum.Font.Gotham
Tirar.Text = "-"
Tirar.TextColor3 = Color3.new(1, 1, 1)
Tirar.TextScaled = true
Tirar.TextSize = 14
Tirar.TextWrapped = true
Tirar.MouseButton1Down:connect(function()
	Ola.Visible = false
end)
